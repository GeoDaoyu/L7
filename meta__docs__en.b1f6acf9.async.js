"use strict";(self.webpackChunk_antv_l7_site=self.webpackChunk_antv_l7_site||[]).push([[9706],{8957:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(78368);var t={}},79406:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92658);var t={}},88584:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(81949);var t={}},10649:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(7820);var t={}},27518:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(24364);var t={}},23537:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(35614);var t={}},95535:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44869);var t={}},41493:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(871);var t={}},56369:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(91650);var t={}},46813:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(72474);var t={}},24614:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51912);var t={}},35570:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(75412);var t={}},58218:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(66374);var t={}},35537:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(14883);var t={}},69617:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(6682);var t={}},44685:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(86409);var t={}},75619:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(91575);var t={}},38012:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51976);var t={}},97807:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(29722);var t={}},14533:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(95435);var t={}},72634:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(41102);var t={}},96259:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(97442);var t={}},47458:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(5807);var t={}},39668:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(53544);var t={}},18543:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(70810);var t={}},95979:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92763);var t={}},52586:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(98858);var t={}},7668:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(26094);var t={}},40639:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51576);var t={}},41666:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(65853);var t={}},32070:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44290);var t={}},4570:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(37406);var t={}},69398:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(10738);var t={}},10347:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(3291);var t={}},6328:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(68039);var t={}},44228:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(47981);var t={}},99922:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(8131);var t={}},63512:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(33698);var t={}},11982:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(73566);var t={}},95897:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(85962);var t={}},23254:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(49852);var t={}},44528:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(35145);var t={}},12667:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(18654);var t={}},3160:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(80611);var t={}},2056:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51819);var t={}},46179:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(4640);var t={}},73909:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(11465);var t={}},82845:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(86454);var t={}},44030:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(14710);var t={}},1670:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(24457);var t={}},97091:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(70668);var t={}},66104:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(96108);var t={}},27016:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(90824);var t={}},95041:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(80478);var t={}},79484:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(47596);var t={}},40145:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(58073);var t={}},15142:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(67037);var t={}},94780:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(98113);var t={}},28445:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51782);var t={}},27798:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(4972);var t={}},85538:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(40748);var t={}},20840:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(88886);var t={}},34763:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(87204);var t={}},16277:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(14271);var t={}},36631:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(81619);var t={}},47079:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(97979);var t={}},69644:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(10194);var t={}},70796:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(82769);var t={}},16326:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92978);var t={}},77110:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(36947);var t={}},62977:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(42412);var t={}},17981:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(45053);var t={}},13525:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(10841);var t={}},69616:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51328);var t={}},24822:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(47660);var t={}},52102:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(45895);var t={}},49500:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(15504);var t={}},47581:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(68319);var t={}},66889:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(4728);var t={}},6696:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(77448);var t={}},26366:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(29972);var t={}},69847:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(81581);var t={}},70247:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44511);var t={}},32311:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(11933);var t={}},85261:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(21842);var t={}},50041:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(65483);var t={}},42101:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(2831);var t={}},72243:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(51815);var t={}},83139:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(94400);var t={}},3258:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(24658);var t={}},36056:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(49627);var t={}},31790:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(36482);var t={}},43410:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(14598);var t={}},13817:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(54561);var t={}},86479:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(23858);var t={}},52524:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(17547);var t={}},83460:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(7908);var t={}},43417:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(2651);var t={}},4208:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(5131);var t={}},4170:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(31727);var t={}},40414:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(9867);var t={}},36210:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(81030);var t={}},4057:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(3086);var t={}},24381:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(37192);var t={}},99898:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(5763);var t={}},26697:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(7945);var t={}},26206:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(12311);var t={}},21404:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(1021);var t={}},93482:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(42179);var t={}},67863:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(57005);var t={}},79959:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(30792);var t={}},38814:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(85361);var t={}},93025:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(55562);var t={}},71030:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(50366);var t={}},9017:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(50801);var t={}},152:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(4028);var t={}},85783:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(77303);var t={}},59611:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(54674);var t={}},91092:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(40820);var t={}},24959:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(56485);var t={}},31551:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(80311);var t={}},53205:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(23689);var t={}},40217:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(32344);var t={}},51262:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(20497);var t={}},7918:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(90509);var t={}},7410:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(46302);var t={}},95534:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(90474);var t={}},79817:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92391);var t={}},46551:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(24745);var t={}},70202:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(84682);var t={}},74560:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(31254);var t={}},22512:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(779);var t={}},95392:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(62689);var t={}},35700:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(16591);var t={}},3290:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(87501);var t={}},73548:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(52040);var t={}},1777:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(94164);var t={}},15026:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(37751);var t={}},78989:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(31001);var t={}},97585:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(22710);var t={}},92426:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(2531);var t={}},91347:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(81252);var t={}},3405:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(21361);var t={}},49939:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(68320);var t={}},74474:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(49493);var t={}},28719:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(10432);var t={}},89513:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(8237);var t={}},70055:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(54493);var t={}},65661:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(38720);var t={}},80982:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(98198);var t={}},29748:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(48197);var t={}},85662:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(37957);var t={}},42730:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(6426);var t={}},81029:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(522);var t={}},43455:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(61547);var t={}},72433:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(99258);var t={}},47469:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(79508);var t={}},59211:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(29710);var t={}},25275:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(31002);var t={}},54759:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(66153);var t={}},63067:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92461);var t={}},58768:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(77490);var t={}},43972:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(15285);var t={}},57662:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(40924);var t={}},48587:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(20542);var t={}},35495:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(82113);var t={}},81153:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(69722);var t={}},81551:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(69363);var t={}},68813:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(3136);var t={}},15546:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(41520);var t={}},58138:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(2029);var t={}},59337:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(61407);var t={}},88416:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(70994);var t={}},27133:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44817);var t={}},5999:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(15814);var t={}},36221:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(28132);var t={}},55985:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(69278);var t={}},35361:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(53859);var t={}},52597:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44856);var t={}},69807:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(38361);var t={}},82982:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(92906);var t={}},1189:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(44627);var t={}},97035:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(84074);var t={}},17307:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(14299);var t={}},47369:function(e,a,n){n.r(a),n.d(a,{demos:function(){return t}});n(92379),n(88111);var t={}},62265:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(78368);const t=[{value:"The L7 Layer interface design follows graphics syntax, and all layers inherit from the base class (baseLayer).",paraId:0,tocIndex:0},{value:"Syntax example",paraId:1,tocIndex:0},{value:"const layer = new BaseLayer(option) // option - the parameter object passed into the constructor, providing the initial state of the layer\n  .source(...) // Pass in the data required by the layer and related parsers\n  .filter() //data filtering method\n  .shape(...) // Specify a specific shape for the layer, such as: circle/triangle, etc.\n  .color(...) //Specify the color configuration of the layer\n  .texture(...) //Specify the texture referenced by the layer\n  .size(...) //Set the size of layer elements\n  .animate(...) //Set the animation mode of layer elements\n  .active(...) //Specify whether the layer element supports swipe selection\n  .select(...) //Specify whether the layer element supports click selection\n  .style(...); // Specify the configuration of the layer's custom style\n\nscene.addLayer(layer);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:2},{value:"string",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"optional",paraId:3,tocIndex:2},{value:" *default:*automatic numbering",paraId:3,tocIndex:2},{value:"Set the layer name, you can get the layer based on name",paraId:4,tocIndex:2},{value:"scene.getLayerByName(name);\n",paraId:5,tocIndex:2},{value:" ",paraId:6,tocIndex:3},{value:"bool",paraId:6,tocIndex:3},{value:" ",paraId:6,tocIndex:3},{value:"optional",paraId:6,tocIndex:3},{value:" ",paraId:6,tocIndex:3},{value:"default:",paraId:6,tocIndex:3},{value:" true",paraId:6,tocIndex:3},{value:"Is the layer visible?",paraId:7,tocIndex:3},{value:" ",paraId:8,tocIndex:4},{value:"int",paraId:8,tocIndex:4},{value:" ",paraId:8,tocIndex:4},{value:"optional",paraId:8,tocIndex:4},{value:" *default:*0",paraId:8,tocIndex:4},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:9,tocIndex:4},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:10,tocIndex:4},{value:" ",paraId:11,tocIndex:5},{value:"number",paraId:11,tocIndex:5},{value:" ",paraId:11,tocIndex:5},{value:"optional",paraId:11,tocIndex:5},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:11,tocIndex:5},{value:"Layer shows minimum zoom level",paraId:12,tocIndex:5},{value:" ",paraId:13,tocIndex:6},{value:"number",paraId:13,tocIndex:6},{value:" ",paraId:13,tocIndex:6},{value:"optional",paraId:13,tocIndex:6},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:13,tocIndex:6},{value:"Layer shows maximum zoom level",paraId:14,tocIndex:6},{value:" ",paraId:15,tocIndex:7},{value:"bool",paraId:15,tocIndex:7},{value:" ",paraId:15,tocIndex:7},{value:"optional",paraId:15,tocIndex:7},{value:" ",paraId:15,tocIndex:7},{value:"default:",paraId:15,tocIndex:7},{value:" false",paraId:15,tocIndex:7},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:16,tocIndex:7},{value:" ",paraId:17,tocIndex:8},{value:"bool",paraId:17,tocIndex:8},{value:" ",paraId:17,tocIndex:8},{value:"optional",paraId:17,tocIndex:8},{value:" *default:*0",paraId:17,tocIndex:8},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:18,tocIndex:8},{value:" ",paraId:19,tocIndex:9},{value:"string",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"optional",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"default:",paraId:19,tocIndex:9},{value:"'normal'",paraId:19,tocIndex:9},{value:"Layer element blending effects",paraId:20,tocIndex:9},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:21,tocIndex:9},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:21,tocIndex:9},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:21,tocIndex:9},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:21,tocIndex:9},{value:" ",paraId:22,tocIndex:10},{value:"boolean",paraId:22,tocIndex:10},{value:" ",paraId:22,tocIndex:10},{value:"optional",paraId:22,tocIndex:10},{value:" ",paraId:22,tocIndex:10},{value:"default:",paraId:22,tocIndex:10},{value:"'false'",paraId:22,tocIndex:10},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:22,tocIndex:10},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:23,tocIndex:10},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:24,tocIndex:10},{value:"Mask layer takes effect",paraId:25,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"array Layer",paraId:26,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"optional",paraId:26,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"default:",paraId:26,tocIndex:11},{value:"[]",paraId:26,tocIndex:11},{value:"Mask layer takes effect",paraId:27,tocIndex:12},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:28,tocIndex:12},{value:" ",paraId:29,tocIndex:12},{value:"bool",paraId:29,tocIndex:12},{value:" ",paraId:29,tocIndex:12},{value:"optional",paraId:29,tocIndex:12},{value:" ",paraId:29,tocIndex:12},{value:"default:",paraId:29,tocIndex:12},{value:" true",paraId:29,tocIndex:12},{value:"Mask layer takes effect\n",paraId:30,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"boolean",paraId:31,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"optional",paraId:31,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"default:",paraId:31,tocIndex:13},{value:" true",paraId:31,tocIndex:13},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:32,tocIndex:13},{value:"true",paraId:33,tocIndex:13},{value:"Show inside the mask",paraId:33,tocIndex:13},{value:"false",paraId:33,tocIndex:13},{value:"Show outside mask",paraId:33,tocIndex:13},{value:"Template layer takes effect",paraId:34,tocIndex:14},{value:" ",paraId:34,tocIndex:14},{value:"enumerate",paraId:34,tocIndex:14},{value:" ",paraId:34,tocIndex:14},{value:"optional",paraId:34,tocIndex:14},{value:" ",paraId:34,tocIndex:14},{value:"default:",paraId:34,tocIndex:14},{value:" and",paraId:34,tocIndex:14},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:34,tocIndex:14},{value:"or intersection",paraId:35,tocIndex:14},{value:"and union",paraId:35,tocIndex:14},{value:"Usage example",paraId:36,tocIndex:14},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:37,tocIndex:14},{value:"-----|---",paraId:38,tocIndex:15},{value:"Set layer data and parsing configuration",paraId:39,tocIndex:16},{value:"source(data, config)",paraId:39,tocIndex:16},{value:"。",paraId:39,tocIndex:16},{value:"data { geojson | json | csv }",paraId:40,tocIndex:16},{value:"config optional data source configuration items\n",paraId:40,tocIndex:16},{value:"parser data analysis, the default is the parsing layer geojson",paraId:41,tocIndex:16},{value:"transforms [transform, transform ] Multiple data processing transformations can be set",paraId:41,tocIndex:16},{value:"parser",paraId:42,tocIndex:16},{value:"and ",paraId:42,tocIndex:16},{value:"transforms",paraId:42,tocIndex:16},{value:" ",paraId:42,tocIndex:16},{value:"See source documentation",paraId:43,tocIndex:16},{value:"。",paraId:42,tocIndex:16},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n  transforms: [\n    {\n      type: 'map',\n      callback: function (item) {\n        const [x, y] = item.coordinates;\n        item.lat = item.lat * 1;\n        item.lng = item.lng * 1;\n        item.v = item.v * 1;\n        item.coordinates = [x * 1, y * 1];\n        return item;\n      },\n    },\n    {\n      type: 'hexagon',\n      size: 6000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:44,tocIndex:16},{value:"we are using",paraId:45,tocIndex:17},{value:"cluster",paraId:45,tocIndex:17},{value:"After configuring the aggregation graph, you can use some aggregation methods to obtain the corresponding parameters.",paraId:45,tocIndex:17},{value:"Get aggregated data for a specified zoom level",paraId:46,tocIndex:18},{value:"zoom",paraId:47,tocIndex:18},{value:"Zoom level",paraId:47,tocIndex:18},{value:"according to",paraId:48,tocIndex:19},{value:"id",paraId:48,tocIndex:19},{value:"Get the data of the aggregation node. Each aggregation node will have a unique",paraId:48,tocIndex:19},{value:"ID",paraId:48,tocIndex:19},{value:"。",paraId:48,tocIndex:19},{value:"id",paraId:49,tocIndex:19},{value:"aggregation node",paraId:49,tocIndex:19},{value:"id",paraId:49,tocIndex:19},{value:"const source = layer.getSource();\nsource.getClustersLeaves(id);\nlayer.on('click', (e) => {\n  console.log(source.getClustersLeaves(e.feature.cluster_id));\n});\n",paraId:50,tocIndex:19},{value:"Scale measures convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding. L7 currently supports Scale for continuous, discrete, and enumerated type data, and supports mapping of position, shape, size, and color coding.",paraId:51,tocIndex:20},{value:"When using L7, there is no need to configure Scale by default because L7 will infer scale based on the data type. The inference process is as follows:",paraId:52,tocIndex:20},{value:"Check whether the user has set Scale, if not:",paraId:53,tocIndex:20},{value:"Determine the field type of the first data of the field, if the corresponding field does not exist in the data:",paraId:54,tocIndex:20},{value:"Consider a constant as a fixed value",paraId:55,tocIndex:20},{value:"'linear' if numeric;",paraId:56,tocIndex:20},{value:"If it is string type 'cat';",paraId:57,tocIndex:20},{value:"Scale details",paraId:58,tocIndex:21},{value:"参数： (field: string, scaleOptions: IscaleOptions)",paraId:59,tocIndex:21},{value:"field",paraId:60,tocIndex:21},{value:"Specify the field name used for mapping in the data passed in source",paraId:60,tocIndex:21},{value:"scaleOptions",paraId:60,tocIndex:21},{value:"Column definition configuration, object type\n",paraId:60,tocIndex:21},{value:"type scale type",paraId:61,tocIndex:21},{value:"unknown unmatched color optional default transparent",paraId:61,tocIndex:21},{value:"domain value range optional",paraId:61,tocIndex:21},{value:"interface IscaleOptions {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:62,tocIndex:21},{value:"Range and domain are two very important parameters in Scale",paraId:63,tocIndex:22},{value:"domain: definition interval of map data values\nrange: range of visual values\nThe difference between different Scales lies in the different conversion methods of domain->range",paraId:64,tocIndex:22},{value:"domain: definition interval of map data values",paraId:65,tocIndex:22},{value:"range: interval definition of visual value",paraId:65,tocIndex:22},{value:"|Data Class|Measurement Type|\n|---|\n| Continuous | linear, log, pow |\n| Continuous classification | quantize quantile,threshold,diverging |\n| Classification Enumeration | cat |",paraId:66,tocIndex:22},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:67,tocIndex:23},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:68,tocIndex:23},{value:"The data value and the mapped value are the same\nFor example, the value field in the data records the color of each element, and the value is the result value s to be mapped.",paraId:69,tocIndex:24},{value:"// Set to identify\nlayer.scale('value', { type: 'identify' });\n\n// or\n\nlayer.scale('value'); // L7 can be automatically inferred as identify\n",paraId:70,tocIndex:24},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:71,tocIndex:25},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:72,tocIndex:26},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:73,tocIndex:27},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:74,tocIndex:28},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:75,tocIndex:28},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:76,tocIndex:28},{value:"Discrete classification is often used with two opposite hues to show the change from negative values ​​to center to positive values. These types of maps show the magnitude of values ​​in relation to each other.",paraId:77,tocIndex:29},{value:"Get the scale instance based on the visual channel name. Make sure the layer has been initialized before calling.",paraId:78,tocIndex:30},{value:"const scale = layer.getScale('color');\nconst color = scale(1); //Convert numerical value to color\n",paraId:79,tocIndex:30},{value:"More of a method",paraId:80,tocIndex:30},{value:"scale example usage",paraId:80,tocIndex:30},{value:"Visual coding is the process of converting data into visual form. L7 currently supports three visual channels: shape, size, and color. You can specify data fields and set different graphic attributes for different elements.",paraId:81,tocIndex:31},{value:"Data filtering method, supports callback function, maps data to true | false, visible when the result is true",paraId:82,tocIndex:32},{value:"pointLayer.filter('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return false;\n  }\n  return true;\n});\n",paraId:83,tocIndex:32},{value:"A method for mapping data values ​​to the size of graphics. For specific parameters of the size method, you can view the detailed documentation of the corresponding layer.",paraId:84,tocIndex:33},{value:"pointLayer.size(10); // constant\npointLayer.size('type'); // Use fields to map to sizes\npointLayer.size('type', [0, 10]); // Use fields to map to sizes and specify maximum and minimum values\npointLayer.size('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return 10;\n  }\n  return 5;\n});\n",paraId:85,tocIndex:33},{value:"Pass in a numeric constant, such as",paraId:86,tocIndex:34},{value:"pointLayer.size(20)",paraId:86,tocIndex:34},{value:"Map the size according to the value of the field field, using the default",paraId:87,tocIndex:35},{value:"最大值 max:10",paraId:87,tocIndex:35},{value:" and",paraId:87,tocIndex:35},{value:"最小值 min: 1",paraId:87,tocIndex:35},{value:"。",paraId:87,tocIndex:35},{value:"Use callback functions to control graph size.",paraId:88,tocIndex:36},{value:"callback",paraId:89,tocIndex:36},{value:": function callback function.",paraId:89,tocIndex:36},{value:"pointLayer.size('age', (value) => {\n  if (value === 1) {\n    return 5;\n  }\n  return 10;\n});\n",paraId:90,tocIndex:36},{value:"A method for mapping data values ​​to the colors of a graph.",paraId:91,tocIndex:37},{value:"layer.color('red'); // constant color\nlayer.color('type'); //Map the type field and use the built-in color\nlayer.color('type', ['red', 'blue']); // Specify color\nlayer.color('type', (type) => {\n  // through callback function\n  if (type === 'a') {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('type*value', (type, value) => {\n  //Multiple parameters, through callback function\n  if (type === 'a' && value > 100) {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:92,tocIndex:37},{value:"parameter:",paraId:93,tocIndex:38},{value:"value",paraId:93,tocIndex:38},{value:"：string",paraId:93,tocIndex:38},{value:"Only supports receiving one parameter, value can be:",paraId:94,tocIndex:38},{value:"The data source field name mapped to the color attribute. If this field name does not exist in the data source, it will be parsed according to constants. In this case, the color provided by L7 by default will be used.",paraId:95,tocIndex:38},{value:"You can also directly specify a specific color value, such as '#fff', 'white', 'rgba(255,0,0,0.5)', rgb(255,0,1), etc.",paraId:96,tocIndex:38},{value:"If the data is mapped to color, the transparent color will not be displayed by default. If you need to set the color, you need to set it in scale.",paraId:97,tocIndex:38},{value:"Example",paraId:98,tocIndex:38},{value:"layer.color('name'); // Mapping data fields\nlayer.color('white'); //Specify color\n",paraId:99,tocIndex:38},{value:"parameter:",paraId:100,tocIndex:39},{value:"field",paraId:101,tocIndex:39},{value:": stringfield is the name of the data source field mapped to the color attribute. It also supports specifying multiple parameters.",paraId:101,tocIndex:39},{value:"colors",paraId:102,tocIndex:39},{value:": string | array | function",paraId:102,tocIndex:39},{value:"The parameters of colors have the following conditions: If it is empty, that is, an array of colors is not specified, then the built-in global color is used; if a color needs to be specified, it needs to be passed in in array format, then the color of the classification is determined according to the color in the array.",paraId:103,tocIndex:39},{value:"layer.scale('name',{\n  type: 'quantile'\n  unknown:'#ccc' // Set invalid color\n})\nlayer.color('name'); // use identity\nlayer.color('name', ['red', 'blue']); // Use the specified color passed in\n",paraId:104,tocIndex:39},{value:"If colors is a callback function, the parameters of the callback function are the values ​​of the corresponding fields. The specific usage is as follows. When color is mapped to multiple fields, the parameters are passed in in the order in which the fields are declared:",paraId:105,tocIndex:39},{value:"layer.color('gender', (value) => {\n  if (value === 1) {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('gender*age', (gender, age) => {\n  if (age === 20 && gender == ' 男') {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:106,tocIndex:39},{value:"Usually a layer can have multiple representations. The shape method is used to specify the specific representation of the layer. Take the shape of PointLayer as an example:",paraId:107,tocIndex:40},{value:"shape('circle'); // circle\nshape('triangle'); // triangle\nshape('cylinder'); // cylinder\n",paraId:108,tocIndex:40},{value:"shape(shape)",paraId:109,tocIndex:40},{value:"parameter",paraId:110,tocIndex:40},{value:"shape",paraId:110,tocIndex:40},{value:" string",paraId:110,tocIndex:40},{value:"Only supports receiving one parameter, specifying the shape drawn by the geometric image object. The following table lists the shapes supported by the different layer geometry objects.",paraId:111,tocIndex:40},{value:"layer type",paraId:112,tocIndex:40},{value:"shape type",paraId:112,tocIndex:40},{value:"Remark",paraId:112,tocIndex:40},{value:"point",paraId:112,tocIndex:40},{value:"2d:point,circle, square, triangle,hexagon,image,text 3d:circle,triangle,hexagon,square",paraId:112,tocIndex:40},{value:"line",paraId:112,tocIndex:40},{value:"line,arc, arc3d, greatcircle",paraId:112,tocIndex:40},{value:"polygon",paraId:112,tocIndex:40},{value:"fill,line, extrude",paraId:112,tocIndex:40},{value:"shape(field, shapes)",paraId:113,tocIndex:40},{value:"shape specifies the row shape based on the field, such as specifying the icon type of PointLayer/imageLayer based on the field.",paraId:114,tocIndex:40},{value:"scene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg',\n);\nscene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\nconst imageLayer = new PointLayer()\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'longitude',\n      y: 'latitude',\n    },\n  })\n  .shape('name', ['00', '01', '02'])\n  .size(20);\nscene.addLayer(imageLayer);\n",paraId:115,tocIndex:40},{value:"Online case",paraId:116},{value:"shape(field, callback)",paraId:117},{value:"Shape also supports writing callback functions",paraId:118},{value:".shape('key', value => {\n  if(value > 10) {\n    return 'circle';\n  } else {\n    return 'triangle';\n  }\n}\n",paraId:119},{value:"The style method is usually used to describe the specific style of a layer. Most layers will support some more general properties, such as the opacity property. At the same time, each layer will also have properties that are only supported by this layer, such as only\nThe windowColor attribute supported by CityBuildingLayer. Please check the detailed documentation of each layer for how to configure the attribute for each layer.",paraId:120,tocIndex:41},{value:"opacity sets transparency, supported by most layers",paraId:121,tocIndex:41},{value:"stroke line fill color only supported by point layer",paraId:122,tocIndex:41},{value:"strokeWidth The width of the line. Only supported by point layers.",paraId:123,tocIndex:41},{value:"layer.style({\n  opacity: 0.8,\n  stroke: 'white',\n});\n",paraId:124,tocIndex:41},{value:"Style data mapping🌟",paraId:125,tocIndex:41},{value:"\nUnder normal circumstances, the style parameters will apply to all graphics on a layer. For example, if there are ten points in a PointLayer, we set opacity = 0.5, so that the transparency of the ten points is 0.5.",paraId:125,tocIndex:41},{value:"\nIn special cases, we may need to set a transparency for each point. In this case, directly setting the opacity value of the style method in the original way cannot meet the needs. For this reason, we need to provide a special assignment method.",paraId:125,tocIndex:41},{value:'\nUsually we will set separate values ​​for each graphic of the layer based on the data passed into the layer, so we call it "style data mapping".',paraId:125,tocIndex:41},{value:"\nWe support several ways of setting parameters in style to dynamically obtain values ​​from source data.",paraId:125,tocIndex:41},{value:"//Set the transparency of each point of the point layer based on the value of the v field in the data\nconst data = [\n  {\n    lng: 120,\n    lat: 30,\n    v: 0.5\n  },\n  ...\n]\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat'\n    }\n  })\n  .shape('circle')\n  .color('#f00')\n  .size({\n    // The first way to write is to get the value directly from data based on the field.\n    opacity: 'v'// opacity = 0.5\n  });\nscene.addLayer(layer);\n",paraId:126,tocIndex:41},{value:"Online case",paraId:127},{value:"from",paraId:128},{value:"L7 2.5",paraId:128},{value:"Starting from the beginning, each layer style will gradually support style data mapping. Currently, all layer styles support style data mapping.",paraId:128},{value:"style",paraId:128},{value:"The parameters are as follows:",paraId:128},{value:"layer type/shape",paraId:129},{value:"Supported style fields",paraId:129},{value:"Remark",paraId:129},{value:"pointLayer/fill",paraId:129},{value:"opacity、strokeOpacity、strokeWidth、stroke、offsets",paraId:129},{value:"shape circle、triangle...",paraId:129},{value:"pointLayer/image",paraId:129},{value:"opacity、offsets",paraId:129},{value:"offsets latitude and longitude offsets",paraId:129},{value:"pointLayer/normal",paraId:129},{value:"opacity、offsets",paraId:129},{value:"pointLayer/text",paraId:129},{value:"opacity、strokeWidth、stroke、textOffset",paraId:129},{value:"textOffset offset relative to text canvas position",paraId:129},{value:"pointLayer/extrude",paraId:129},{value:"opacity",paraId:129},{value:"polygonLayer/fill",paraId:129},{value:"opacity",paraId:129},{value:"polygonLayer/extrude",paraId:129},{value:"opacity",paraId:129},{value:"lineLayer/line",paraId:129},{value:"opacity",paraId:129},{value:"lineLayer/arc",paraId:129},{value:"opacity、thetaOffset",paraId:129},{value:"thetaOffset the curvature of the arc",paraId:129},{value:"lineLayer/arc3d",paraId:129},{value:"opacity",paraId:129},{value:"lineLayer/great_circle",paraId:129},{value:"opacity",paraId:129},{value:"Online case",paraId:130},{value:"Currently, texture methods are only supported on line layers.",paraId:131,tocIndex:42},{value:"The texture method supports passing in global icon texture resources added by the scene.addImage method.",paraId:132,tocIndex:42},{value:"// First load image resources globally\nscene.addImage(\n  'plane',\n  'https://gw.alipayobjects.com/zos/bmw-prod/0ca1668e-38c2-4010-8568-b57cb33839b9.svg',\n);\n\nconst layer = new LineLayer({\n  blend: 'normal',\n})\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(25)\n  .shape('arc')\n  .texture('plane') // Bind texture to layer\n  .color('#8C1EB2')\n  .style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:133,tocIndex:42},{value:"Online case",paraId:134},{value:"If a layer has been added and you need to modify the layer display style, you can call the graphics mapping method again, and then call",paraId:135,tocIndex:43},{value:"scene.render()",paraId:135,tocIndex:43},{value:"Just update the rendering",paraId:135,tocIndex:43},{value:"Recall the scale method",paraId:136,tocIndex:44},{value:"layer.scale('value', {\n  type: 'quantile',\n});\nscene.render();\n",paraId:137,tocIndex:44},{value:"Recall color/size/filter/shape and other methods",paraId:138,tocIndex:45},{value:"layer.color('blue');\nlayer.size(10);\n\nscene.render();\n",paraId:139,tocIndex:45},{value:"layer.style({\n  opacity: 1,\n});\n\nscene.render();\n",paraId:140,tocIndex:46},{value:"Update Source data",paraId:141,tocIndex:47},{value:"parameter:",paraId:142,tocIndex:47},{value:"data data",paraId:143,tocIndex:47},{value:"option defaults to the same as the initial configuration item. If the data format is the same, it does not need to be set.",paraId:143,tocIndex:47},{value:"Calling the setData method will automatically update the layer rendering",paraId:144,tocIndex:47},{value:"layer.setData(data);\n",paraId:145,tocIndex:47},{value:"Set layer overlay method\nparameter:",paraId:146,tocIndex:48},{value:"type blend 类型 normal ｜ additive ｜ subtractive ｜ max",paraId:147,tocIndex:48},{value:"Layer display",paraId:148,tocIndex:50},{value:"layer.show();\n",paraId:149,tocIndex:50},{value:"Layer hidden",paraId:150,tocIndex:51},{value:"layer.hide();\n",paraId:151,tocIndex:51},{value:"Is the layer visible?",paraId:152,tocIndex:52},{value:"layer.isVisible();\n",paraId:153,tocIndex:52},{value:"Set layer drawing order",paraId:154,tocIndex:53},{value:"layer.setIndex(1);\n",paraId:155,tocIndex:53},{value:"Zoom to layer extents",paraId:156,tocIndex:54},{value:"layer.fitBounds();\n",paraId:157,tocIndex:54},{value:"Set the minimum zoom level of the layer",paraId:158,tocIndex:55},{value:"layer.setMinZoom(zoom);\n",paraId:159,tocIndex:55},{value:"Set the maximum zoom level of the layer",paraId:160,tocIndex:56},{value:"layer.setMinZoom(zoom);\n",paraId:161,tocIndex:56},{value:"Set the maximum zoom level of the layer",paraId:162,tocIndex:56},{value:"parameter",paraId:163,tocIndex:56},{value:"zoom {number}",paraId:164,tocIndex:56},{value:"layer.setMinZoom(zoom);\n",paraId:165,tocIndex:56},{value:"Turn on or off mousehover element highlighting effect",paraId:166,tocIndex:58},{value:"activeOption",paraId:166,tocIndex:58},{value:"color",paraId:167,tocIndex:58},{value:": Highlight color",paraId:167,tocIndex:58},{value:"mix",paraId:167,tocIndex:58},{value:": Optional parameter, the default is 0, which means the highlight color is the specified solid color. The maximum valid value is 1, which means the highlight color is all the background color.",paraId:167,tocIndex:58},{value:"activeOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:168,tocIndex:58},{value:"// Turn on Active and use the default highlight color\nlayer.active(true);\n\n// Turn on Active custom highlight color\n\nlayer.active({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.active(false);\n",paraId:169,tocIndex:58},{value:"Set hover highlight of specified element based on element ID",paraId:170,tocIndex:59},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:171,tocIndex:59},{value:"layer.setActive(featureId);\n",paraId:172,tocIndex:59},{value:"Turn on or off mouseclick element selection highlighting effect",paraId:173,tocIndex:60},{value:"selectOption\n",paraId:173,tocIndex:60},{value:"color",paraId:174,tocIndex:60},{value:": Select highlight color",paraId:174,tocIndex:60},{value:"mix",paraId:174,tocIndex:60},{value:": Optional parameter, the default is 0, which means that the selected highlight color is the specified solid color. The maximum effective value is 1, which means that all the selected highlight colors are background colors.",paraId:174,tocIndex:60},{value:"selectOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:175,tocIndex:60},{value:"// Turn on Active and use the default highlight color\nlayer.select(true);\n\n// Turn on Active custom highlight color\n\nlayer.select({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.select(false);\n",paraId:176,tocIndex:60},{value:"Set the specified element according to the element ID click to select and highlight",paraId:177,tocIndex:61},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:178,tocIndex:61},{value:"layer.setSelect(featureId);\n",paraId:179,tocIndex:61},{value:"Allows users to actively set the autoFit parameters of layers",paraId:180,tocIndex:62},{value:"\n🌟 After setting this method, it will take effect when the layer is updated, such as triggered after setData",paraId:180,tocIndex:62},{value:"// Instructions\nlayer.setAutoFit(true);\n// Internal implementation\npublic setAutoFit(autoFit: boolean): ILayer {\n    this.updateLayerConfig({\n      autoFit,\n    });\n    return this;\n  }\n",paraId:181,tocIndex:62},{value:"Supports separately obtaining the value of a graphic after scale calculation to meet the user's need to obtain certain feature values ​​of the layer.",paraId:182,tocIndex:63},{value:"attribute value of attr scale",paraId:183,tocIndex:63},{value:"const data = [\n  { lng: 120, lat: 30, name: 'n1' },\n  { lng: 120, lat: 30, name: 'n2' },\n];\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat',\n      type: 'json',\n    },\n  })\n  .shape('circle')\n  .color('name', ['#f00', '#ff0'])\n  .size('name', [20, 40]);\n\nscene.addLayer(layer);\n\n// Draw two points on the scene at this time\n// A point with a color of yellow and a size of 40, corresponding to name n1\n// A point with a color of red and a size of 20, corresponding to name n2\n\nconst colorScale = layer.getScale('color'); // Get the scale generated by the color method\nconst color1 = colorScale('n1'); // '#ff0'\nconst color1 = colorScale('n2'); // '#f00'\n\nconst sizeScale = layer.getScale('size'); // Get the scale generated by the size method\nconst size1 = sizeScale('n1'); // 40\nconst size2 = sizeScale('n2'); // 20\n",paraId:184,tocIndex:63},{value:"Get legend configuration",paraId:185,tocIndex:64},{value:"type legend type",paraId:186,tocIndex:64},{value:"index optional default",paraId:186,tocIndex:64},{value:"layer.getLegendItems('color');\n\nlayer.getLegendItems('size');\n",paraId:187,tocIndex:64},{value:"Get the legend getLegendItems enhanced version returns more information",paraId:188,tocIndex:65},{value:"return value",paraId:189,tocIndex:65},{value:"type legend type",paraId:190,tocIndex:65},{value:"field mapping field",paraId:190,tocIndex:65},{value:"items legend items",paraId:190,tocIndex:65},{value:"layer.getLegend('color');\n\nlayer.getLegend('size');\n",paraId:191,tocIndex:65},{value:"Add Mask layer\n",paraId:192,tocIndex:67},{value:"const polygonLayer = new Polygon();\nlayer.addMask(polygonLayer);\nscene.render();\n",paraId:193,tocIndex:67},{value:"const polygonLayer = new Polygon();\nlayer.removeMask(polygonLayer);\nscene.render();\n",paraId:194,tocIndex:68},{value:"layer.disableMask();\nscene.render();\n",paraId:195,tocIndex:69},{value:"layer.disableMask();\nscene.render();\n",paraId:196,tocIndex:70},{value:"Mouse event callback parameter target",paraId:197,tocIndex:71},{value:"layer.on(eventName, (target) => console.log(target));\n",paraId:198,tocIndex:71},{value:"x: number x coordinate of the mouse at the map location",paraId:199,tocIndex:71},{value:"y: number The y coordinate of the mouse's position on the map",paraId:199,tocIndex:71},{value:"type: string mouse event type",paraId:199,tocIndex:71},{value:"lngLat: longitude object {lng:number, lat: number}; the latitude and longitude of the mouse location",paraId:199,tocIndex:71},{value:"feature: any; geographical feature information selected by the data",paraId:199,tocIndex:71},{value:"featureId: number | null; ID of the geographical feature selected in the data",paraId:199,tocIndex:71},{value:"click event",paraId:200,tocIndex:72},{value:"layer.on('click', (e) => console.log(e));\n",paraId:201,tocIndex:72},{value:"double click",paraId:202,tocIndex:73},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:203,tocIndex:73},{value:"mouse move event",paraId:204,tocIndex:74},{value:"layer.on('mousemove', (e) => console.log(e));\n",paraId:205,tocIndex:74},{value:"mouse removal",paraId:206,tocIndex:75},{value:"layer.on('mouseout', (e) => console.log(e));\n",paraId:207,tocIndex:75},{value:"mouse raised",paraId:208,tocIndex:76},{value:"layer.on('mouseup', (e) => console.log(e));\n",paraId:209,tocIndex:76},{value:"mouse pressed",paraId:210,tocIndex:77},{value:"layer.on('mousedown', (e) => console.log(e));\n",paraId:211,tocIndex:77},{value:"right click",paraId:212,tocIndex:78},{value:"layer.on('contextmenu', (e) => console.log(e));\n",paraId:213,tocIndex:78},{value:"Double click to pick element",paraId:214,tocIndex:79},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:215,tocIndex:79},{value:"No element was picked up by clicking",paraId:216,tocIndex:80},{value:"layer.on('unclick', (e) => console.log(e));\n",paraId:217,tocIndex:80},{value:"Element not picked up by mouse movement",paraId:218,tocIndex:81},{value:"layer.on('unmousemove', (e) => console.log(e));\n",paraId:219,tocIndex:81},{value:"The element is not picked up when the mouse is raised",paraId:220,tocIndex:82},{value:"layer.on('unmouseup', (e) => console.log(e));\n",paraId:221,tocIndex:82},{value:"The element is not picked up when the mouse is pressed",paraId:222,tocIndex:83},{value:"layer.on('unmousedown', (e) => console.log(e));\n",paraId:223,tocIndex:83},{value:"Select the element with the right mouse button",paraId:224,tocIndex:84},{value:"layer.on('uncontextmenu', (e) => console.log(e));\n",paraId:225,tocIndex:84},{value:"All mouse events are not picked up",paraId:226,tocIndex:85},{value:"layer.on('unpick', (e) => console.log(e));\n",paraId:227,tocIndex:85},{value:"Usage example",paraId:228,tocIndex:85},{value:"layer.on('click', (ev) => {}); // Left mouse button click event on layer\nlayer.on('mouseenter', (ev) => {}); // The mouse enters the layer element\nlayer.on('mousemove', (ev) => {}); // Triggered when the mouse moves on the layer\nlayer.on('mouseout', (ev) => {}); // Triggered when the mouse moves out of the layer element\nlayer.on('mouseup', (ev) => {}); // Triggered when the mouse is clicked and raised on the layer\nlayer.on('mousedown', (ev) => {}); // Triggered when the mouse is clicked on the layer\nlayer.on('contextmenu', (ev) => {}); // Right-click menu of layer elements\n\n//Events when the mouse is outside the layer\nlayer.on('unclick', (ev) => {}); // Click outside the layer\nlayer.on('unmousemove', (ev) => {}); // Move outside the layer\nlayer.on('unmouseup', (ev) => {}); // Mouse up outside the layer\nlayer.on('unmousedown', (ev) => {}); // Triggered when clicked outside the layer\nlayer.on('uncontextmenu', (ev) => {}); // Right-click outside the layer\nlayer.on('unpick', (ev) => {}); // All events for operations outside the layer\n",paraId:229,tocIndex:85},{value:"Parameter option",paraId:230,tocIndex:87},{value:"target current layer",paraId:231,tocIndex:87},{value:"type event type",paraId:231,tocIndex:87},{value:"Triggered after layer initialization is completed",paraId:232,tocIndex:87},{value:"layer.on('inited', (option) => {});\n",paraId:233,tocIndex:87},{value:"Add layer to scene",paraId:234,tocIndex:88},{value:"Parameter option",paraId:235,tocIndex:88},{value:"target current layer",paraId:236,tocIndex:88},{value:"type event type",paraId:236,tocIndex:88},{value:"layer.on('add', (type) => console.log(type));\n",paraId:237,tocIndex:88},{value:"Fires when a layer is removed",paraId:238,tocIndex:89},{value:"Parameter option",paraId:239,tocIndex:89},{value:"target current layer",paraId:240,tocIndex:89},{value:"type event type",paraId:240,tocIndex:89},{value:"layer.on('remove', (type) => console.log(type));\n",paraId:241,tocIndex:89},{value:"Data mapping is updated, the legend changes, mainly color and size",paraId:242,tocIndex:90},{value:"The data mapping is updated, the legend changes, and the color changes\nParameter option",paraId:243,tocIndex:91},{value:"type legend type",paraId:244,tocIndex:91},{value:"field mapping field",paraId:244,tocIndex:91},{value:"items legend items",paraId:244,tocIndex:91},{value:"layer.on('legend:color', (ev) => console.log(ev));\n",paraId:245,tocIndex:91},{value:"The data mapping is updated, the legend changes, and the size changes\nParameter option",paraId:246,tocIndex:92},{value:"type legend type",paraId:247,tocIndex:92},{value:"field mapping field",paraId:247,tocIndex:92},{value:"items legend items",paraId:247,tocIndex:92},{value:"layer.on('legend:size', (ev) => console.log(ev));\n",paraId:248,tocIndex:92},{value:"Parameter option",paraId:249,tocIndex:94},{value:"box [x1: number, y1: number, x2: number, y2: number] compared to",paraId:250,tocIndex:94},{value:"cb (...args: any[]) => void callback method passed in, returns the feature inside the box selection",paraId:250,tocIndex:94},{value:"layer.boxSelect(box, cb);\n// (x1, y1), (x2, y2) The pixel coordinates of the upper left corner and lower right corner of the selected box relative to the upper left corner of the map\n//cb is the callback function passed in. The parameter returned by the callback function is the selected feature object array. The fields of the object are related to the data passed in by the user.\n",paraId:251,tocIndex:94}]},59966:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92658);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"position",paraId:0},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:0},{value:"control slot",paraId:1},{value:"Position",paraId:2},{value:"className",paraId:0},{value:"Custom style name",paraId:0},{value:"string",paraId:0},{value:"style",paraId:0},{value:"Custom style",paraId:0},{value:"string",paraId:0},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:3,tocIndex:0}]},18325:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(81949);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"btnIcon",paraId:0},{value:"button icon",paraId:0},{value:"HTMLElement",paraId:0},{value:"|",paraId:0},{value:"SVGElement",paraId:0},{value:"btnText",paraId:0},{value:"Button content text",paraId:0},{value:"string",paraId:0},{value:"title",paraId:0},{value:"button",paraId:0},{value:"title",paraId:0},{value:"Attributes",paraId:0},{value:"string",paraId:0},{value:"vertical",paraId:0},{value:"When btnIcon has a value, whether the icons and text in the button are arranged vertically",paraId:0},{value:"boolean",paraId:0}]},94764:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(7820);const t=[{value:"Name",paraId:0},{value:"Description",paraId:0},{value:"Type",paraId:0},{value:"add",paraId:0},{value:"Event when component is added",paraId:0},{value:"(this) => void",paraId:0},{value:"remove",paraId:0},{value:"Event when component is removed",paraId:0},{value:"(this) => void",paraId:0},{value:"show",paraId:0},{value:"Events when the component is displayed",paraId:0},{value:"(this) => void",paraId:0},{value:"hide",paraId:0},{value:"Event when component is hidden",paraId:0},{value:"(this) => void",paraId:0}]},25362:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(24364);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"setOptions",paraId:0},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:0},{value:"Configuration",paraId:1},{value:"(newOption: Partial<Option>) => void",paraId:0},{value:"getOptions",paraId:0},{value:"Get current",paraId:0},{value:"Configuration",paraId:2},{value:"() => Option",paraId:0},{value:"show",paraId:0},{value:"display component",paraId:0},{value:"() => void",paraId:0},{value:"hide",paraId:0},{value:"Hidden component",paraId:0},{value:"() => void",paraId:0},{value:"getContainer",paraId:0},{value:"Get the information corresponding to the current control",paraId:0},{value:"DOM",paraId:0},{value:"container",paraId:0},{value:"() => HTMLElement",paraId:0}]},87604:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(35614);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"popperPlacement",paraId:0},{value:"The position of the bubble relative to the button",paraId:0},{value:"PopperPlacement",paraId:1},{value:"popperTrigger",paraId:0},{value:"How to trigger bubble pop-up",paraId:0},{value:"'click'",paraId:0},{value:"|",paraId:0},{value:"'hover'",paraId:0},{value:"popperClassName",paraId:0},{value:"Bubble container custom style name",paraId:0},{value:"string",paraId:0},{value:"export type PopperPlacement =\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'left-start'\n  | 'left'\n  | 'left-end'\n  | 'bottom-start'\n  | 'bottom'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end';\n",paraId:2,tocIndex:0}]},55725:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44869);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"popperShow",paraId:0},{value:"Callback when bubble is displayed",paraId:0},{value:"(this) => void",paraId:0},{value:"popperHide",paraId:0},{value:"Callback when bubble is hidden",paraId:0},{value:"(this) => void",paraId:0}]},78019:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(871);const t=[{value:"name",paraId:0},{value:"illustrate",paraId:0},{value:"type",paraId:0},{value:"selectChange",paraId:0},{value:"Fires when the selected value changes",paraId:0},{value:"`(string",paraId:0},{value:"string[]) => void`",paraId:0}]},41059:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(91650);const t=[{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:0,tocIndex:1},{value:"duration animation time unit (s) seconds",paraId:1,tocIndex:2},{value:"interval trajectory interval, value range 0 - 1",paraId:1,tocIndex:2},{value:"trailLength trail length value range 0 - 1",paraId:1,tocIndex:2},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:2,tocIndex:2},{value:"L7 The current animation parameters are relative units, and our default length of a line segment is 1",paraId:3,tocIndex:3},{value:"If interval = 0.2, a trajectory will be divided into 5 segments, if interval = 0.5, it will be two segments.",paraId:4,tocIndex:3},{value:"Online case",paraId:5}]},25905:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(72474);const t=[{value:"The line layer supports setting the width and color of the border in style",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    borderWidth: 0.35, //The default value is 0, the maximum valid value is 0.5\n    borderColor: '#888', // Default is #ccc\n  });\n",paraId:1,tocIndex:0},{value:"Online case",paraId:2}]},84002:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51912);const t=[{value:"The line layer sets the line type in style and specifies the dotted line part and the solid line part at the same time.",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1.5)\n  .shape('line')\n  .color('标准名称', ['#5B8FF9', '#5CCEA1', '#F6BD16'])\n  .active(true)\n  .style({\n    lineType: 'dash',\n    dashArray: [5, 5],\n  });\nscene.addLayer(layer);\n",paraId:1,tocIndex:0},{value:"lineType\nThe default is solid, which represents a solid line, and dash represents a dotted line.",paraId:2,tocIndex:0},{value:"dashArray[len1: number, len2: number]\nlen1 solid line length\nlen2 interval length",paraId:2,tocIndex:0},{value:"Online case",paraId:3}]},46198:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(75412);const t=[{value:"The line layer sets the color gradient by setting the start color and end color in style. The gradient color has a higher priority than the color set by the color method.",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // starting point color\n    targetColor: '#0f0', //End color\n  });\n",paraId:1,tocIndex:0},{value:"Online case",paraId:2}]},46166:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(66374);const t=[{value:"The default arc segment number of the arc layer is 30. However, sometimes users do not need so many segments. Appropriately reducing the number of segments can improve performance while ensuring the effect.",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    segmentNumber: 15,\n  });\n",paraId:1,tocIndex:0}]},90187:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(14883);const t=[{value:"The line layer supports texture mapping and various expression forms, through",paraId:0},{value:"scene.addImage",paraId:0},{value:"Methods are added to global resources using",paraId:0},{value:"texture",paraId:0},{value:"Method specifies the texture.",paraId:0},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // interval\n    duration: 1, // duration, delay\n    trailLength: 2, // streamline length\n  })\n  .style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 20, //Set the spacing of the texture\n  });\n",paraId:1},{value:"\n  ",paraId:2},{value:"\n    ",paraId:2},{value:"\n  ",paraId:2},{value:"lineTexture specifies whether to enable texture mapping capabilities",paraId:3},{value:"iconStep specifies the interval at which the texture is arranged on the line layer",paraId:3},{value:"Online case",paraId:4},{value:"✨ animate",paraId:5,tocIndex:0},{value:"\nCurrent line layer (",paraId:5,tocIndex:0},{value:"shape",paraId:5,tocIndex:0},{value:"for",paraId:5,tocIndex:0},{value:"arc",paraId:5,tocIndex:0},{value:"/",paraId:5,tocIndex:0},{value:"arc3d",paraId:5,tocIndex:0},{value:") When animation mode is turned on, the distribution of textures on the line layer will also be consistent with",paraId:5,tocIndex:0},{value:"animate",paraId:5,tocIndex:0},{value:"parameters related.",paraId:5,tocIndex:0},{value:"The number of textures arranged on a line layer is roughly duration/interval",paraId:6,tocIndex:0},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// At this time, the number of texture maps is duration / interval = 5\n",paraId:7,tocIndex:0},{value:"✨ textureBlend parameters",paraId:8,tocIndex:0},{value:"\nBy controlling the textureBlend parameter in the style method, we can control the blending of texture layers and line layers.",paraId:8,tocIndex:0},{value:"normal",paraId:9,tocIndex:0},{value:"replace",paraId:9,tocIndex:0},{value:".style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:10,tocIndex:0},{value:"Online case",paraId:11}]},71667:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(6682);const t=[{value:"thetaOffset parameter represents the arc arc arc, the default value is 0.314",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    thetaOffset: 0.35,\n  });\n",paraId:1,tocIndex:0},{value:"Online case",paraId:2}]},38483:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(86409);const t=[{value:"The line layer supports assigning a height value to each vertex and allows users to set the height scale through the vertexHeightScale property in the style method.",paraId:0,tocIndex:0},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1)\n  .shape('line')\n  .style({\n    vertexHeightScale: 30,\n  })\n  .color('#ccc');\n\nscene.addLayer(layer);\n",paraId:1,tocIndex:0},{value:"Data with height values",paraId:2,tocIndex:0},{value:'{\n"type": "FeatureCollection",\n"name": "tw",\n"crs": { "type": "name", "properties": { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" } },\n"features": [\n  {\n    "type": "Feature",\n    "properties": { },\n    "geometry": {\n      "type": "LineString", "coordinates":\n      [\n        [ 121.519153647, 25.288692533, 41.0 ],\n        [ 121.529153646999987, 25.288692533, 35.0 ],\n        [ 121.539153647, 25.288692533, 27.0 ],\n        [ 121.549153647, 25.288692533, 66.0 ],\n        [ 121.559153646999988, 25.288692533, 83.0 ],\n        [ 121.569153647, 25.288692533, 88.0 ]\n      ]\n    }\n  },\n...\n}\n',paraId:3,tocIndex:0},{value:"Online case",paraId:4}]},41442:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(91575);const t=[{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"optional",paraId:0,tocIndex:1},{value:" *default:*automatic numbering",paraId:0,tocIndex:1},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:1},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:1},{value:" ",paraId:3,tocIndex:2},{value:"bool",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"optional",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"default:",paraId:3,tocIndex:2},{value:" true",paraId:3,tocIndex:2},{value:"Is the layer visible?",paraId:4,tocIndex:2},{value:" ",paraId:5,tocIndex:3},{value:"int",paraId:5,tocIndex:3},{value:" ",paraId:5,tocIndex:3},{value:"optional",paraId:5,tocIndex:3},{value:" *default:*0",paraId:5,tocIndex:3},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:3},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:3},{value:" ",paraId:8,tocIndex:4},{value:"number",paraId:8,tocIndex:4},{value:" ",paraId:8,tocIndex:4},{value:"optional",paraId:8,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:4},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:4},{value:" ",paraId:10,tocIndex:5},{value:"number",paraId:10,tocIndex:5},{value:" ",paraId:10,tocIndex:5},{value:"optional",paraId:10,tocIndex:5},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:5},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:5},{value:" ",paraId:12,tocIndex:6},{value:"bool",paraId:12,tocIndex:6},{value:" ",paraId:12,tocIndex:6},{value:"optional",paraId:12,tocIndex:6},{value:" ",paraId:12,tocIndex:6},{value:"default:",paraId:12,tocIndex:6},{value:" false",paraId:12,tocIndex:6},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:6},{value:" ",paraId:14,tocIndex:7},{value:"bool",paraId:14,tocIndex:7},{value:" ",paraId:14,tocIndex:7},{value:"optional",paraId:14,tocIndex:7},{value:" *default:*0",paraId:14,tocIndex:7},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:7},{value:" ",paraId:16,tocIndex:8},{value:"string",paraId:16,tocIndex:8},{value:" ",paraId:16,tocIndex:8},{value:"optional",paraId:16,tocIndex:8},{value:" ",paraId:16,tocIndex:8},{value:"default:",paraId:16,tocIndex:8},{value:"'normal'",paraId:16,tocIndex:8},{value:"Layer element blending effects",paraId:17,tocIndex:8},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:8},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:8},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:8},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:8},{value:" ",paraId:19,tocIndex:9},{value:"boolean",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"optional",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"default:",paraId:19,tocIndex:9},{value:"'false'",paraId:19,tocIndex:9},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:9},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:9},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:9},{value:"Mask layer takes effect",paraId:22,tocIndex:10},{value:" ",paraId:23,tocIndex:10},{value:"array Layer",paraId:23,tocIndex:10},{value:" ",paraId:23,tocIndex:10},{value:"optional",paraId:23,tocIndex:10},{value:" ",paraId:23,tocIndex:10},{value:"default:",paraId:23,tocIndex:10},{value:"[]",paraId:23,tocIndex:10},{value:"Mask layer takes effect",paraId:24,tocIndex:11},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"bool",paraId:26,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"optional",paraId:26,tocIndex:11},{value:" ",paraId:26,tocIndex:11},{value:"default:",paraId:26,tocIndex:11},{value:" true",paraId:26,tocIndex:11},{value:"Mask layer takes effect\n",paraId:27,tocIndex:12},{value:" ",paraId:28,tocIndex:12},{value:"boolean",paraId:28,tocIndex:12},{value:" ",paraId:28,tocIndex:12},{value:"optional",paraId:28,tocIndex:12},{value:" ",paraId:28,tocIndex:12},{value:"default:",paraId:28,tocIndex:12},{value:" true",paraId:28,tocIndex:12},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:12},{value:"true",paraId:30,tocIndex:12},{value:"Show inside the mask",paraId:30,tocIndex:12},{value:"false",paraId:30,tocIndex:12},{value:"Show outside mask",paraId:30,tocIndex:12},{value:"Template layer takes effect",paraId:31,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"enumerate",paraId:31,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"optional",paraId:31,tocIndex:13},{value:" ",paraId:31,tocIndex:13},{value:"default:",paraId:31,tocIndex:13},{value:" and",paraId:31,tocIndex:13},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:13},{value:"or intersection",paraId:32,tocIndex:13},{value:"and union",paraId:32,tocIndex:13},{value:"Usage example",paraId:33,tocIndex:13},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:13},{value:"-----|---",paraId:35,tocIndex:14},{value:"Set layer data and parsing configuration",paraId:36,tocIndex:15},{value:"source(data, config)",paraId:36,tocIndex:15},{value:"。",paraId:36,tocIndex:15},{value:"data { geojson | json | csv }",paraId:37,tocIndex:15},{value:"config optional data source configuration items\n",paraId:37,tocIndex:15},{value:"parser data analysis, the default is the parsing layer geojson",paraId:38,tocIndex:15},{value:"transforms [transform, transform ] Multiple data processing transformations can be set",paraId:38,tocIndex:15},{value:"parser",paraId:39,tocIndex:15},{value:"and ",paraId:39,tocIndex:15},{value:"transforms",paraId:39,tocIndex:15},{value:" ",paraId:39,tocIndex:15},{value:"See source documentation",paraId:40,tocIndex:15},{value:"。",paraId:39,tocIndex:15},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n  transforms: [\n    {\n      type: 'map',\n      callback: function (item) {\n        const [x, y] = item.coordinates;\n        item.lat = item.lat * 1;\n        item.lng = item.lng * 1;\n        item.v = item.v * 1;\n        item.coordinates = [x * 1, y * 1];\n        return item;\n      },\n    },\n    {\n      type: 'hexagon',\n      size: 6000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:41,tocIndex:15},{value:"we are using",paraId:42,tocIndex:16},{value:"cluster",paraId:42,tocIndex:16},{value:"After configuring the aggregation graph, you can use some aggregation methods to obtain the corresponding parameters.",paraId:42,tocIndex:16},{value:"Get aggregated data for a specified zoom level",paraId:43,tocIndex:17},{value:"zoom",paraId:44,tocIndex:17},{value:"Zoom level",paraId:44,tocIndex:17},{value:"according to",paraId:45,tocIndex:18},{value:"id",paraId:45,tocIndex:18},{value:"Get the data of the aggregation node. Each aggregation node will have a unique",paraId:45,tocIndex:18},{value:"ID",paraId:45,tocIndex:18},{value:"。",paraId:45,tocIndex:18},{value:"id",paraId:46,tocIndex:18},{value:"aggregation node",paraId:46,tocIndex:18},{value:"id",paraId:46,tocIndex:18},{value:"const source = layer.getSource();\nsource.getClustersLeaves(id);\nlayer.on('click', (e) => {\n  console.log(source.getClustersLeaves(e.feature.cluster_id));\n});\n",paraId:47,tocIndex:18},{value:"Scale measures convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding. L7 currently supports Scale for continuous, discrete, and enumerated type data, and supports mapping of position, shape, size, and color coding.",paraId:48,tocIndex:19},{value:"When using L7, there is no need to configure Scale by default because L7 will infer scale based on the data type. The inference process is as follows:",paraId:49,tocIndex:19},{value:"Check whether the user has set Scale, if not:",paraId:50,tocIndex:19},{value:"Determine the field type of the first data of the field, if the corresponding field does not exist in the data:",paraId:51,tocIndex:19},{value:"Consider a constant as a fixed value",paraId:52,tocIndex:19},{value:"'linear' if numeric;",paraId:53,tocIndex:19},{value:"If it is string type 'cat';",paraId:54,tocIndex:19},{value:"Scale details",paraId:55,tocIndex:20},{value:"参数： (field: string, scaleOptions: IscaleOptions)",paraId:56,tocIndex:20},{value:"field",paraId:57,tocIndex:20},{value:"Specify the field name used for mapping in the data passed in source",paraId:57,tocIndex:20},{value:"scaleOptions",paraId:57,tocIndex:20},{value:"Column definition configuration, object type\n",paraId:57,tocIndex:20},{value:"type scale type",paraId:58,tocIndex:20},{value:"unknown unmatched color optional default transparent",paraId:58,tocIndex:20},{value:"domain value range optional",paraId:58,tocIndex:20},{value:"interface IscaleOptions {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:59,tocIndex:20},{value:"Range and domain are two very important parameters in Scale",paraId:60,tocIndex:21},{value:"domain: definition interval of map data values\nrange: range of visual values\nThe difference between different Scales lies in the different conversion methods of domain->range",paraId:61,tocIndex:21},{value:"domain: definition interval of map data values",paraId:62,tocIndex:21},{value:"range: interval definition of visual value",paraId:62,tocIndex:21},{value:"|Data Class|Measurement Type|\n|---|\n| Continuous | linear, log, pow |\n| Continuous classification | quantize quantile,threshold,diverging |\n| Classification Enumeration | cat |",paraId:63,tocIndex:21},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:64,tocIndex:22},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:65,tocIndex:22},{value:"The data value and the mapped value are the same\nFor example, the value field in the data records the color of each element, and the value is the result value s to be mapped.",paraId:66,tocIndex:23},{value:"// Set to identify\nlayer.scale('value', { type: 'identify' });\n\n// or\n\nlayer.scale('value'); // L7 can be automatically inferred as identify\n",paraId:67,tocIndex:23},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:68,tocIndex:24},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:69,tocIndex:25},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:70,tocIndex:26},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:71,tocIndex:27},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:72,tocIndex:27},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:73,tocIndex:27},{value:"Discrete classification is often used with two opposite hues to show the change from negative values ​​to center to positive values. These types of maps show the magnitude of values ​​in relation to each other.",paraId:74,tocIndex:28},{value:"Get the scale instance based on the visual channel name. Make sure the layer has been initialized before calling.",paraId:75,tocIndex:29},{value:"const scale = layer.getScale('color');\nconst color = scale(1); //Convert numerical value to color\n",paraId:76,tocIndex:29},{value:"More of a method",paraId:77,tocIndex:29},{value:"scale example usage",paraId:77,tocIndex:29},{value:"Visual coding is the process of converting data into visual form. L7 currently supports three visual channels: shape, size, and color. You can specify data fields and set different graphic attributes for different elements.",paraId:78,tocIndex:30},{value:"Data filtering method, supports callback function, maps data to true | false, visible when the result is true",paraId:79,tocIndex:31},{value:"pointLayer.filter('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return false;\n  }\n  return true;\n});\n",paraId:80,tocIndex:31},{value:"A method for mapping data values ​​to the size of graphics. For specific parameters of the size method, you can view the detailed documentation of the corresponding layer.",paraId:81,tocIndex:32},{value:"pointLayer.size(10); // constant\npointLayer.size('type'); // Use fields to map to sizes\npointLayer.size('type', [0, 10]); // Use fields to map to sizes and specify maximum and minimum values\npointLayer.size('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return 10;\n  }\n  return 5;\n});\n",paraId:82,tocIndex:32},{value:"Pass in a numeric constant, such as",paraId:83,tocIndex:33},{value:"pointLayer.size(20)",paraId:83,tocIndex:33},{value:"Map the size according to the value of the field field, using the default",paraId:84,tocIndex:34},{value:"最大值 max:10",paraId:84,tocIndex:34},{value:" and",paraId:84,tocIndex:34},{value:"最小值 min: 1",paraId:84,tocIndex:34},{value:"。",paraId:84,tocIndex:34},{value:"Use callback functions to control graph size.",paraId:85,tocIndex:35},{value:"callback",paraId:86,tocIndex:35},{value:": function callback function.",paraId:86,tocIndex:35},{value:"pointLayer.size('age', (value) => {\n  if (value === 1) {\n    return 5;\n  }\n  return 10;\n});\n",paraId:87,tocIndex:35},{value:"A method for mapping data values ​​to the colors of a graph.",paraId:88,tocIndex:36},{value:"layer.color('red'); // constant color\nlayer.color('type'); //Map the type field and use the built-in color\nlayer.color('type', ['red', 'blue']); // Specify color\nlayer.color('type', (type) => {\n  // through callback function\n  if (type === 'a') {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('type*value', (type, value) => {\n  //Multiple parameters, through callback function\n  if (type === 'a' && value > 100) {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:89,tocIndex:36},{value:"parameter:",paraId:90,tocIndex:37},{value:"value",paraId:90,tocIndex:37},{value:"：string",paraId:90,tocIndex:37},{value:"Only supports receiving one parameter, value can be:",paraId:91,tocIndex:37},{value:"The data source field name mapped to the color attribute. If this field name does not exist in the data source, it will be parsed according to constants. In this case, the color provided by L7 by default will be used.",paraId:92,tocIndex:37},{value:"You can also directly specify a specific color value, such as '#fff', 'white', 'rgba(255,0,0,0.5)', rgb(255,0,1), etc.",paraId:93,tocIndex:37},{value:"If the data is mapped to color, the transparent color will not be displayed by default. If you need to set the color, you need to set it in scale.",paraId:94,tocIndex:37},{value:"Example",paraId:95,tocIndex:37},{value:"layer.color('name'); // Mapping data fields\nlayer.color('white'); //Specify color\n",paraId:96,tocIndex:37},{value:"parameter:",paraId:97,tocIndex:38},{value:"field",paraId:98,tocIndex:38},{value:": stringfield is the name of the data source field mapped to the color attribute. It also supports specifying multiple parameters.",paraId:98,tocIndex:38},{value:"colors",paraId:99,tocIndex:38},{value:": string | array | function",paraId:99,tocIndex:38},{value:"The parameters of colors have the following conditions: If it is empty, that is, an array of colors is not specified, then the built-in global color is used; if a color needs to be specified, it needs to be passed in in array format, then the color of the classification is determined according to the color in the array.",paraId:100,tocIndex:38},{value:"layer.scale('name',{\n  type: 'quantile'\n  unknown:'#ccc' // Set invalid color\n})\nlayer.color('name'); // use identity\nlayer.color('name', ['red', 'blue']); // Use the specified color passed in\n",paraId:101,tocIndex:38},{value:"If colors is a callback function, the parameters of the callback function are the values ​​of the corresponding fields. The specific usage is as follows. When color is mapped to multiple fields, the parameters are passed in in the order in which the fields are declared:",paraId:102,tocIndex:38},{value:"layer.color('gender', (value) => {\n  if (value === 1) {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('gender*age', (gender, age) => {\n  if (age === 20 && gender == ' 男') {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:103,tocIndex:38},{value:"Usually a layer can have multiple representations. The shape method is used to specify the specific representation of the layer. Take the shape of PointLayer as an example:",paraId:104,tocIndex:39},{value:"shape('circle'); // circle\nshape('triangle'); // triangle\nshape('cylinder'); // cylinder\n",paraId:105,tocIndex:39},{value:"shape(shape)",paraId:106,tocIndex:39},{value:"parameter",paraId:107,tocIndex:39},{value:"shape",paraId:107,tocIndex:39},{value:" string",paraId:107,tocIndex:39},{value:"Only supports receiving one parameter, specifying the shape drawn by the geometric image object. The following table lists the shapes supported by the different layer geometry objects.",paraId:108,tocIndex:39},{value:"layer type",paraId:109,tocIndex:39},{value:"shape type",paraId:109,tocIndex:39},{value:"Remark",paraId:109,tocIndex:39},{value:"point",paraId:109,tocIndex:39},{value:"2d:point,circle, square, triangle,hexagon,image,text 3d:circle,triangle,hexagon,square",paraId:109,tocIndex:39},{value:"line",paraId:109,tocIndex:39},{value:"line,arc, arc3d, greatcircle",paraId:109,tocIndex:39},{value:"polygon",paraId:109,tocIndex:39},{value:"fill,line, extrude",paraId:109,tocIndex:39},{value:"shape(field, shapes)",paraId:110,tocIndex:39},{value:"shape specifies the row shape based on the field, such as specifying the icon type of PointLayer/imageLayer based on the field.",paraId:111,tocIndex:39},{value:"scene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg',\n);\nscene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\nconst imageLayer = new PointLayer()\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'longitude',\n      y: 'latitude',\n    },\n  })\n  .shape('name', ['00', '01', '02'])\n  .size(20);\nscene.addLayer(imageLayer);\n",paraId:112,tocIndex:39},{value:"Online case",paraId:113},{value:"shape(field, callback)",paraId:114},{value:"Shape also supports writing callback functions",paraId:115},{value:".shape('key', value => {\n  if(value > 10) {\n    return 'circle';\n  } else {\n    return 'triangle';\n  }\n}\n",paraId:116},{value:"The style method is usually used to describe the specific style of a layer. Most layers will support some more general properties, such as the opacity property. At the same time, each layer will also have properties that are only supported by this layer, such as only\nThe windowColor attribute supported by CityBuildingLayer. Please check the detailed documentation of each layer for how to configure the attribute for each layer.",paraId:117,tocIndex:40},{value:"opacity sets transparency, supported by most layers",paraId:118,tocIndex:40},{value:"stroke line fill color only supported by point layer",paraId:119,tocIndex:40},{value:"strokeWidth The width of the line. Only supported by point layers.",paraId:120,tocIndex:40},{value:"layer.style({\n  opacity: 0.8,\n  stroke: 'white',\n});\n",paraId:121,tocIndex:40},{value:"Style data mapping🌟",paraId:122,tocIndex:40},{value:"\nUnder normal circumstances, the style parameters will apply to all graphics on a layer. For example, if there are ten points in a PointLayer, we set opacity = 0.5, so that the transparency of the ten points is 0.5.",paraId:122,tocIndex:40},{value:"\nIn special cases, we may need to set a transparency for each point. In this case, directly setting the opacity value of the style method in the original way cannot meet the needs. For this reason, we need to provide a special assignment method.",paraId:122,tocIndex:40},{value:'\nUsually we will set separate values ​​for each graphic of the layer based on the data passed into the layer, so we call it "style data mapping".',paraId:122,tocIndex:40},{value:"\nWe support several ways of setting parameters in style to dynamically obtain values ​​from source data.",paraId:122,tocIndex:40},{value:"//Set the transparency of each point of the point layer based on the value of the v field in the data\nconst data = [\n  {\n    lng: 120,\n    lat: 30,\n    v: 0.5\n  },\n  ...\n]\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat'\n    }\n  })\n  .shape('circle')\n  .color('#f00')\n  .size({\n    // The first way to write is to get the value directly from data based on the field.\n    opacity: 'v'// opacity = 0.5\n  });\nscene.addLayer(layer);\n",paraId:123,tocIndex:40},{value:"Online case",paraId:124},{value:"from",paraId:125},{value:"L7 2.5",paraId:125},{value:"Starting from the beginning, each layer style will gradually support style data mapping. Currently, all layer styles support style data mapping.",paraId:125},{value:"style",paraId:125},{value:"The parameters are as follows:",paraId:125},{value:"layer type/shape",paraId:126},{value:"Supported style fields",paraId:126},{value:"Remark",paraId:126},{value:"pointLayer/fill",paraId:126},{value:"opacity、strokeOpacity、strokeWidth、stroke、offsets",paraId:126},{value:"shape circle、triangle...",paraId:126},{value:"pointLayer/image",paraId:126},{value:"opacity、offsets",paraId:126},{value:"offsets latitude and longitude offsets",paraId:126},{value:"pointLayer/normal",paraId:126},{value:"opacity、offsets",paraId:126},{value:"pointLayer/text",paraId:126},{value:"opacity、strokeWidth、stroke、textOffset",paraId:126},{value:"textOffset offset relative to text canvas position",paraId:126},{value:"pointLayer/extrude",paraId:126},{value:"opacity",paraId:126},{value:"polygonLayer/fill",paraId:126},{value:"opacity",paraId:126},{value:"polygonLayer/extrude",paraId:126},{value:"opacity",paraId:126},{value:"lineLayer/line",paraId:126},{value:"opacity",paraId:126},{value:"lineLayer/arc",paraId:126},{value:"opacity、thetaOffset",paraId:126},{value:"thetaOffset the curvature of the arc",paraId:126},{value:"lineLayer/arc3d",paraId:126},{value:"opacity",paraId:126},{value:"lineLayer/great_circle",paraId:126},{value:"opacity",paraId:126},{value:"Online case",paraId:127},{value:"Currently, texture methods are only supported on line layers.",paraId:128,tocIndex:41},{value:"The texture method supports passing in global icon texture resources added by the scene.addImage method.",paraId:129,tocIndex:41},{value:"// First load image resources globally\nscene.addImage(\n  'plane',\n  'https://gw.alipayobjects.com/zos/bmw-prod/0ca1668e-38c2-4010-8568-b57cb33839b9.svg',\n);\n\nconst layer = new LineLayer({\n  blend: 'normal',\n})\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(25)\n  .shape('arc')\n  .texture('plane') // Bind texture to layer\n  .color('#8C1EB2')\n  .style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:130,tocIndex:41},{value:"Online case",paraId:131},{value:"If a layer has been added and you need to modify the layer display style, you can call the graphics mapping method again, and then call",paraId:132,tocIndex:42},{value:"scene.render()",paraId:132,tocIndex:42},{value:"Just update the rendering",paraId:132,tocIndex:42},{value:"Recall the scale method",paraId:133,tocIndex:43},{value:"layer.scale('value', {\n  type: 'quantile',\n});\nscene.render();\n",paraId:134,tocIndex:43},{value:"Recall color/size/filter/shape and other methods",paraId:135,tocIndex:44},{value:"layer.color('blue');\nlayer.size(10);\n\nscene.render();\n",paraId:136,tocIndex:44},{value:"layer.style({\n  opacity: 1,\n});\n\nscene.render();\n",paraId:137,tocIndex:45},{value:"Update Source data",paraId:138,tocIndex:46},{value:"parameter:",paraId:139,tocIndex:46},{value:"data data",paraId:140,tocIndex:46},{value:"option defaults to the same as the initial configuration item. If the data format is the same, it does not need to be set.",paraId:140,tocIndex:46},{value:"Calling the setData method will automatically update the layer rendering",paraId:141,tocIndex:46},{value:"layer.setData(data);\n",paraId:142,tocIndex:46},{value:"Set layer overlay method\nparameter:",paraId:143,tocIndex:47},{value:"type blend 类型 normal ｜ additive ｜ subtractive ｜ max",paraId:144,tocIndex:47},{value:"Layer display",paraId:145,tocIndex:49},{value:"layer.show();\n",paraId:146,tocIndex:49},{value:"Layer hidden",paraId:147,tocIndex:50},{value:"layer.hide();\n",paraId:148,tocIndex:50},{value:"Is the layer visible?",paraId:149,tocIndex:51},{value:"layer.isVisible();\n",paraId:150,tocIndex:51},{value:"Set layer drawing order",paraId:151,tocIndex:52},{value:"layer.setIndex(1);\n",paraId:152,tocIndex:52},{value:"Zoom to layer extents",paraId:153,tocIndex:53},{value:"layer.fitBounds();\n",paraId:154,tocIndex:53},{value:"Set the minimum zoom level of the layer",paraId:155,tocIndex:54},{value:"layer.setMinZoom(zoom);\n",paraId:156,tocIndex:54},{value:"Set the maximum zoom level of the layer",paraId:157,tocIndex:55},{value:"layer.setMinZoom(zoom);\n",paraId:158,tocIndex:55},{value:"Set the maximum zoom level of the layer",paraId:159,tocIndex:55},{value:"parameter",paraId:160,tocIndex:55},{value:"zoom {number}",paraId:161,tocIndex:55},{value:"layer.setMinZoom(zoom);\n",paraId:162,tocIndex:55},{value:"Turn on or off mousehover element highlighting effect",paraId:163,tocIndex:57},{value:"activeOption",paraId:163,tocIndex:57},{value:"color",paraId:164,tocIndex:57},{value:": Highlight color",paraId:164,tocIndex:57},{value:"mix",paraId:164,tocIndex:57},{value:": Optional parameter, the default is 0, which means the highlight color is the specified solid color. The maximum valid value is 1, which means the highlight color is all the background color.",paraId:164,tocIndex:57},{value:"activeOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:165,tocIndex:57},{value:"// Turn on Active and use the default highlight color\nlayer.active(true);\n\n// Turn on Active custom highlight color\n\nlayer.active({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.active(false);\n",paraId:166,tocIndex:57},{value:"Set hover highlight of specified element based on element ID",paraId:167,tocIndex:58},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:168,tocIndex:58},{value:"layer.setActive(featureId);\n",paraId:169,tocIndex:58},{value:"Turn on or off mouseclick element selection highlighting effect",paraId:170,tocIndex:59},{value:"selectOption\n",paraId:170,tocIndex:59},{value:"color",paraId:171,tocIndex:59},{value:": Select highlight color",paraId:171,tocIndex:59},{value:"mix",paraId:171,tocIndex:59},{value:": Optional parameter, the default is 0, which means that the selected highlight color is the specified solid color. The maximum effective value is 1, which means that all the selected highlight colors are background colors.",paraId:171,tocIndex:59},{value:"selectOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:172,tocIndex:59},{value:"// Turn on Active and use the default highlight color\nlayer.select(true);\n\n// Turn on Active custom highlight color\n\nlayer.select({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.select(false);\n",paraId:173,tocIndex:59},{value:"Set the specified element according to the element ID click to select and highlight",paraId:174,tocIndex:60},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:175,tocIndex:60},{value:"layer.setSelect(featureId);\n",paraId:176,tocIndex:60},{value:"Allows users to actively set the autoFit parameters of layers",paraId:177,tocIndex:61},{value:"\n🌟 After setting this method, it will take effect when the layer is updated, such as triggered after setData",paraId:177,tocIndex:61},{value:"// Instructions\nlayer.setAutoFit(true);\n// Internal implementation\npublic setAutoFit(autoFit: boolean): ILayer {\n    this.updateLayerConfig({\n      autoFit,\n    });\n    return this;\n  }\n",paraId:178,tocIndex:61},{value:"Supports separately obtaining the value of a graphic after scale calculation to meet the user's need to obtain certain feature values ​​of the layer.",paraId:179,tocIndex:62},{value:"attribute value of attr scale",paraId:180,tocIndex:62},{value:"const data = [\n  { lng: 120, lat: 30, name: 'n1' },\n  { lng: 120, lat: 30, name: 'n2' },\n];\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat',\n      type: 'json',\n    },\n  })\n  .shape('circle')\n  .color('name', ['#f00', '#ff0'])\n  .size('name', [20, 40]);\n\nscene.addLayer(layer);\n\n// Draw two points on the scene at this time\n// A point with a color of yellow and a size of 40, corresponding to name n1\n// A point with a color of red and a size of 20, corresponding to name n2\n\nconst colorScale = layer.getScale('color'); // Get the scale generated by the color method\nconst color1 = colorScale('n1'); // '#ff0'\nconst color1 = colorScale('n2'); // '#f00'\n\nconst sizeScale = layer.getScale('size'); // Get the scale generated by the size method\nconst size1 = sizeScale('n1'); // 40\nconst size2 = sizeScale('n2'); // 20\n",paraId:181,tocIndex:62},{value:"Get legend configuration",paraId:182,tocIndex:63},{value:"type legend type",paraId:183,tocIndex:63},{value:"index optional default",paraId:183,tocIndex:63},{value:"layer.getLegendItems('color');\n\nlayer.getLegendItems('size');\n",paraId:184,tocIndex:63},{value:"Get the legend getLegendItems enhanced version returns more information",paraId:185,tocIndex:64},{value:"return value",paraId:186,tocIndex:64},{value:"type legend type",paraId:187,tocIndex:64},{value:"field mapping field",paraId:187,tocIndex:64},{value:"items legend items",paraId:187,tocIndex:64},{value:"layer.getLegend('color');\n\nlayer.getLegend('size');\n",paraId:188,tocIndex:64},{value:"Add Mask layer\n",paraId:189,tocIndex:66},{value:"const polygonLayer = new Polygon();\nlayer.addMask(polygonLayer);\nscene.render();\n",paraId:190,tocIndex:66},{value:"const polygonLayer = new Polygon();\nlayer.removeMask(polygonLayer);\nscene.render();\n",paraId:191,tocIndex:67},{value:"layer.disableMask();\nscene.render();\n",paraId:192,tocIndex:68},{value:"layer.disableMask();\nscene.render();\n",paraId:193,tocIndex:69},{value:"Mouse event callback parameter target",paraId:194,tocIndex:70},{value:"layer.on(eventName, (target) => console.log(target));\n",paraId:195,tocIndex:70},{value:"x: number x coordinate of the mouse at the map location",paraId:196,tocIndex:70},{value:"y: number The y coordinate of the mouse's position on the map",paraId:196,tocIndex:70},{value:"type: string mouse event type",paraId:196,tocIndex:70},{value:"lngLat: longitude object {lng:number, lat: number}; the latitude and longitude of the mouse location",paraId:196,tocIndex:70},{value:"feature: any; geographical feature information selected by the data",paraId:196,tocIndex:70},{value:"featureId: number | null; ID of the geographical feature selected in the data",paraId:196,tocIndex:70},{value:"click event",paraId:197,tocIndex:71},{value:"layer.on('click', (e) => console.log(e));\n",paraId:198,tocIndex:71},{value:"double click",paraId:199,tocIndex:72},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:200,tocIndex:72},{value:"mouse move event",paraId:201,tocIndex:73},{value:"layer.on('mousemove', (e) => console.log(e));\n",paraId:202,tocIndex:73},{value:"mouse removal",paraId:203,tocIndex:74},{value:"layer.on('mouseout', (e) => console.log(e));\n",paraId:204,tocIndex:74},{value:"mouse raised",paraId:205,tocIndex:75},{value:"layer.on('mouseup', (e) => console.log(e));\n",paraId:206,tocIndex:75},{value:"mouse pressed",paraId:207,tocIndex:76},{value:"layer.on('mousedown', (e) => console.log(e));\n",paraId:208,tocIndex:76},{value:"right click",paraId:209,tocIndex:77},{value:"layer.on('contextmenu', (e) => console.log(e));\n",paraId:210,tocIndex:77},{value:"Double click to pick element",paraId:211,tocIndex:78},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:212,tocIndex:78},{value:"No element was picked up by clicking",paraId:213,tocIndex:79},{value:"layer.on('unclick', (e) => console.log(e));\n",paraId:214,tocIndex:79},{value:"Element not picked up by mouse movement",paraId:215,tocIndex:80},{value:"layer.on('unmousemove', (e) => console.log(e));\n",paraId:216,tocIndex:80},{value:"The element is not picked up when the mouse is raised",paraId:217,tocIndex:81},{value:"layer.on('unmouseup', (e) => console.log(e));\n",paraId:218,tocIndex:81},{value:"The element is not picked up when the mouse is pressed",paraId:219,tocIndex:82},{value:"layer.on('unmousedown', (e) => console.log(e));\n",paraId:220,tocIndex:82},{value:"Select the element with the right mouse button",paraId:221,tocIndex:83},{value:"layer.on('uncontextmenu', (e) => console.log(e));\n",paraId:222,tocIndex:83},{value:"All mouse events are not picked up",paraId:223,tocIndex:84},{value:"layer.on('unpick', (e) => console.log(e));\n",paraId:224,tocIndex:84},{value:"Usage example",paraId:225,tocIndex:84},{value:"layer.on('click', (ev) => {}); // Left mouse button click event on layer\nlayer.on('mouseenter', (ev) => {}); // The mouse enters the layer element\nlayer.on('mousemove', (ev) => {}); // Triggered when the mouse moves on the layer\nlayer.on('mouseout', (ev) => {}); // Triggered when the mouse moves out of the layer element\nlayer.on('mouseup', (ev) => {}); // Triggered when the mouse is clicked and raised on the layer\nlayer.on('mousedown', (ev) => {}); // Triggered when the mouse is clicked on the layer\nlayer.on('contextmenu', (ev) => {}); // Right-click menu of layer elements\n\n//Events when the mouse is outside the layer\nlayer.on('unclick', (ev) => {}); // Click outside the layer\nlayer.on('unmousemove', (ev) => {}); // Move outside the layer\nlayer.on('unmouseup', (ev) => {}); // Mouse up outside the layer\nlayer.on('unmousedown', (ev) => {}); // Triggered when clicked outside the layer\nlayer.on('uncontextmenu', (ev) => {}); // Right-click outside the layer\nlayer.on('unpick', (ev) => {}); // All events for operations outside the layer\n",paraId:226,tocIndex:84},{value:"Parameter option",paraId:227,tocIndex:86},{value:"target current layer",paraId:228,tocIndex:86},{value:"type event type",paraId:228,tocIndex:86},{value:"Triggered after layer initialization is completed",paraId:229,tocIndex:86},{value:"layer.on('inited', (option) => {});\n",paraId:230,tocIndex:86},{value:"Add layer to scene",paraId:231,tocIndex:87},{value:"Parameter option",paraId:232,tocIndex:87},{value:"target current layer",paraId:233,tocIndex:87},{value:"type event type",paraId:233,tocIndex:87},{value:"layer.on('add', (type) => console.log(type));\n",paraId:234,tocIndex:87},{value:"Fires when a layer is removed",paraId:235,tocIndex:88},{value:"Parameter option",paraId:236,tocIndex:88},{value:"target current layer",paraId:237,tocIndex:88},{value:"type event type",paraId:237,tocIndex:88},{value:"layer.on('remove', (type) => console.log(type));\n",paraId:238,tocIndex:88},{value:"Data mapping is updated, the legend changes, mainly color and size",paraId:239,tocIndex:89},{value:"The data mapping is updated, the legend changes, and the color changes\nParameter option",paraId:240,tocIndex:90},{value:"type legend type",paraId:241,tocIndex:90},{value:"field mapping field",paraId:241,tocIndex:90},{value:"items legend items",paraId:241,tocIndex:90},{value:"layer.on('legend:color', (ev) => console.log(ev));\n",paraId:242,tocIndex:90},{value:"The data mapping is updated, the legend changes, and the size changes\nParameter option",paraId:243,tocIndex:91},{value:"type legend type",paraId:244,tocIndex:91},{value:"field mapping field",paraId:244,tocIndex:91},{value:"items legend items",paraId:244,tocIndex:91},{value:"layer.on('legend:size', (ev) => console.log(ev));\n",paraId:245,tocIndex:91},{value:"Parameter option",paraId:246,tocIndex:93},{value:"box [x1: number, y1: number, x2: number, y2: number] compared to",paraId:247,tocIndex:93},{value:"cb (...args: any[]) => void callback method passed in, returns the feature inside the box selection",paraId:247,tocIndex:93},{value:"layer.boxSelect(box, cb);\n// (x1, y1), (x2, y2) The pixel coordinates of the upper left corner and lower right corner of the selected box relative to the upper left corner of the map\n//cb is the callback function passed in. The parameter returned by the callback function is the selected feature object array. The fields of the object are related to the data passed in by the user.\n",paraId:248,tocIndex:93}]},43936:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51976);const t=[{value:"color",paraId:0},{value:"Method used to set the color of the graphic.",paraId:0},{value:"color",paraId:1,tocIndex:0},{value:"type string.",paraId:1,tocIndex:0},{value:"The color type can be written in rgb",paraId:2,tocIndex:0},{value:"rgb(200, 100, 100)",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"rgba(255, 0, 0, 1)",paraId:2,tocIndex:0},{value:"The color type can be written in hexadecimal",paraId:2,tocIndex:0},{value:"#ffffff",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"#000",paraId:2,tocIndex:0},{value:"The color type can be the writing method of color name",paraId:2,tocIndex:0},{value:"red",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"yellow",paraId:2,tocIndex:0},{value:"Layers can set color values ​​directly.",paraId:3,tocIndex:1},{value:"layer.color('#f00');\n",paraId:4,tocIndex:1},{value:"The colors of a layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as parameters.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    c: '#f00',\n  },\n]);\nlayer.color('c');\n",paraId:6,tocIndex:2},{value:"color",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.color('type', ['#f00', '#0f0', '#00f']);\n",paraId:8,tocIndex:3},{value:"color",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual color of the layer.",paraId:9,tocIndex:4},{value:"layer.color('type', (value) => {\n  switch (value) {\n    case 'water':\n      return '#f00';\n    case 'wood':\n      return '#0f0';\n  }\n});\n",paraId:10,tocIndex:4}]},24933:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(29722);const t=[{value:"Layer display",paraId:0,tocIndex:1},{value:"layer.show();\n",paraId:1,tocIndex:1},{value:"Layer hidden",paraId:2,tocIndex:2},{value:"layer.hide();\n",paraId:3,tocIndex:2},{value:"Is the layer visible?",paraId:4,tocIndex:3},{value:"layer.isVisible();\n",paraId:5,tocIndex:3},{value:"Set layer drawing order",paraId:6,tocIndex:4},{value:"layer.setIndex(1);\n",paraId:7,tocIndex:4},{value:"Zoom to layer extents",paraId:8,tocIndex:5},{value:"layer.fitBounds();\n",paraId:9,tocIndex:5},{value:"Set the minimum zoom level of the layer",paraId:10,tocIndex:6},{value:"layer.setMinZoom(zoom);\n",paraId:11,tocIndex:6},{value:"Set the maximum zoom level of the layer",paraId:12,tocIndex:7},{value:"layer.setMinZoom(zoom);\n",paraId:13,tocIndex:7},{value:"Set the maximum zoom level of the layer",paraId:14,tocIndex:7},{value:"parameter",paraId:15,tocIndex:7},{value:"zoom {number}",paraId:16,tocIndex:7},{value:"layer.setMinZoom(zoom);\n",paraId:17,tocIndex:7}]},44123:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(95435);const t=[{value:"-----|---",paraId:0},{value:"Set layer data and parsing configuration",paraId:1,tocIndex:0},{value:"source(data, config)",paraId:1,tocIndex:0},{value:"。",paraId:1,tocIndex:0},{value:"data { geojson | json | csv }",paraId:2,tocIndex:0},{value:"config optional data source configuration items\n",paraId:2,tocIndex:0},{value:"parser data analysis, the default is the parsing layer geojson",paraId:3,tocIndex:0},{value:"transforms [transform, transform ] Multiple data processing transformations can be set",paraId:3,tocIndex:0},{value:"parser",paraId:4,tocIndex:0},{value:"and ",paraId:4,tocIndex:0},{value:"transforms",paraId:4,tocIndex:0},{value:" ",paraId:4,tocIndex:0},{value:"See source documentation",paraId:5,tocIndex:0},{value:"。",paraId:4,tocIndex:0},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n  transforms: [\n    {\n      type: 'map',\n      callback: function (item) {\n        const [x, y] = item.coordinates;\n        item.lat = item.lat * 1;\n        item.lng = item.lng * 1;\n        item.v = item.v * 1;\n        item.coordinates = [x * 1, y * 1];\n        return item;\n      },\n    },\n    {\n      type: 'hexagon',\n      size: 6000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:6,tocIndex:0},{value:"we are using",paraId:7,tocIndex:1},{value:"cluster",paraId:7,tocIndex:1},{value:"After configuring the aggregation graph, you can use some aggregation methods to obtain the corresponding parameters.",paraId:7,tocIndex:1},{value:"Get aggregated data for a specified zoom level",paraId:8,tocIndex:2},{value:"zoom",paraId:9,tocIndex:2},{value:"Zoom level",paraId:9,tocIndex:2},{value:"according to",paraId:10,tocIndex:3},{value:"id",paraId:10,tocIndex:3},{value:"Get the data of the aggregation node. Each aggregation node will have a unique",paraId:10,tocIndex:3},{value:"ID",paraId:10,tocIndex:3},{value:"。",paraId:10,tocIndex:3},{value:"id",paraId:11,tocIndex:3},{value:"aggregation node",paraId:11,tocIndex:3},{value:"id",paraId:11,tocIndex:3},{value:"const source = layer.getSource();\nsource.getClustersLeaves(id);\nlayer.on('click', (e) => {\n  console.log(source.getClustersLeaves(e.feature.cluster_id));\n});\n",paraId:12,tocIndex:3},{value:"Scale measures convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding. L7 currently supports Scale for continuous, discrete, and enumerated type data, and supports mapping of position, shape, size, and color coding.",paraId:13,tocIndex:4},{value:"When using L7, there is no need to configure Scale by default because L7 will infer scale based on the data type. The inference process is as follows:",paraId:14,tocIndex:4},{value:"Check whether the user has set Scale, if not:",paraId:15,tocIndex:4},{value:"Determine the field type of the first data of the field, if the corresponding field does not exist in the data:",paraId:16,tocIndex:4},{value:"Consider a constant as a fixed value",paraId:17,tocIndex:4},{value:"'linear' if numeric;",paraId:18,tocIndex:4},{value:"If it is string type 'cat';",paraId:19,tocIndex:4},{value:"Scale details",paraId:20,tocIndex:5},{value:"参数： (field: string, scaleOptions: IscaleOptions)",paraId:21,tocIndex:5},{value:"field",paraId:22,tocIndex:5},{value:"Specify the field name used for mapping in the data passed in source",paraId:22,tocIndex:5},{value:"scaleOptions",paraId:22,tocIndex:5},{value:"Column definition configuration, object type\n",paraId:22,tocIndex:5},{value:"type scale type",paraId:23,tocIndex:5},{value:"unknown unmatched color optional default transparent",paraId:23,tocIndex:5},{value:"domain value range optional",paraId:23,tocIndex:5},{value:"interface IscaleOptions {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:24,tocIndex:5},{value:"Range and domain are two very important parameters in Scale",paraId:25,tocIndex:6},{value:"domain: definition interval of map data values\nrange: range of visual values\nThe difference between different Scales lies in the different conversion methods of domain->range",paraId:26,tocIndex:6},{value:"domain: definition interval of map data values",paraId:27,tocIndex:6},{value:"range: interval definition of visual value",paraId:27,tocIndex:6},{value:"|Data Class|Measurement Type|\n|---|\n| Continuous | linear, log, pow |\n| Continuous classification | quantize quantile,threshold,diverging |\n| Classification Enumeration | cat |",paraId:28,tocIndex:6},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:29,tocIndex:7},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:30,tocIndex:7},{value:"The data value and the mapped value are the same\nFor example, the value field in the data records the color of each element, and the value is the result value s to be mapped.",paraId:31,tocIndex:8},{value:"// Set to identify\nlayer.scale('value', { type: 'identify' });\n\n// or\n\nlayer.scale('value'); // L7 can be automatically inferred as identify\n",paraId:32,tocIndex:8},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:33,tocIndex:9},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:34,tocIndex:10},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:35,tocIndex:11},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:36,tocIndex:12},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:37,tocIndex:12},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:38,tocIndex:12},{value:"Discrete classification is often used with two opposite hues to show the change from negative values ​​to center to positive values. These types of maps show the magnitude of values ​​in relation to each other.",paraId:39,tocIndex:13},{value:"Get the scale instance based on the visual channel name. Make sure the layer has been initialized before calling.",paraId:40,tocIndex:14},{value:"const scale = layer.getScale('color');\nconst color = scale(1); //Convert numerical value to color\n",paraId:41,tocIndex:14},{value:"More of a method",paraId:42,tocIndex:14},{value:"scale example usage",paraId:42,tocIndex:14},{value:"Visual coding is the process of converting data into visual form. L7 currently supports three visual channels: shape, size, and color. You can specify data fields and set different graphic attributes for different elements.",paraId:43,tocIndex:15},{value:"Data filtering method, supports callback function, maps data to true | false, visible when the result is true",paraId:44,tocIndex:16},{value:"pointLayer.filter('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return false;\n  }\n  return true;\n});\n",paraId:45,tocIndex:16},{value:"A method for mapping data values ​​to the size of graphics. For specific parameters of the size method, you can view the detailed documentation of the corresponding layer.",paraId:46,tocIndex:17},{value:"pointLayer.size(10); // constant\npointLayer.size('type'); // Use fields to map to sizes\npointLayer.size('type', [0, 10]); // Use fields to map to sizes and specify maximum and minimum values\npointLayer.size('type', (type) => {\n  // Callback\n  if (type === 'a') {\n    return 10;\n  }\n  return 5;\n});\n",paraId:47,tocIndex:17},{value:"Pass in a numeric constant, such as",paraId:48,tocIndex:18},{value:"pointLayer.size(20)",paraId:48,tocIndex:18},{value:"Map the size according to the value of the field field, using the default",paraId:49,tocIndex:19},{value:"最大值 max:10",paraId:49,tocIndex:19},{value:" and",paraId:49,tocIndex:19},{value:"最小值 min: 1",paraId:49,tocIndex:19},{value:"。",paraId:49,tocIndex:19},{value:"Use callback functions to control graph size.",paraId:50,tocIndex:20},{value:"callback",paraId:51,tocIndex:20},{value:": function callback function.",paraId:51,tocIndex:20},{value:"pointLayer.size('age', (value) => {\n  if (value === 1) {\n    return 5;\n  }\n  return 10;\n});\n",paraId:52,tocIndex:20},{value:"A method for mapping data values ​​to the colors of a graph.",paraId:53,tocIndex:21},{value:"layer.color('red'); // constant color\nlayer.color('type'); //Map the type field and use the built-in color\nlayer.color('type', ['red', 'blue']); // Specify color\nlayer.color('type', (type) => {\n  // through callback function\n  if (type === 'a') {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('type*value', (type, value) => {\n  //Multiple parameters, through callback function\n  if (type === 'a' && value > 100) {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:54,tocIndex:21},{value:"parameter:",paraId:55,tocIndex:22},{value:"value",paraId:55,tocIndex:22},{value:"：string",paraId:55,tocIndex:22},{value:"Only supports receiving one parameter, value can be:",paraId:56,tocIndex:22},{value:"The data source field name mapped to the color attribute. If this field name does not exist in the data source, it will be parsed according to constants. In this case, the color provided by L7 by default will be used.",paraId:57,tocIndex:22},{value:"You can also directly specify a specific color value, such as '#fff', 'white', 'rgba(255,0,0,0.5)', rgb(255,0,1), etc.",paraId:58,tocIndex:22},{value:"If the data is mapped to color, the transparent color will not be displayed by default. If you need to set the color, you need to set it in scale.",paraId:59,tocIndex:22},{value:"Example",paraId:60,tocIndex:22},{value:"layer.color('name'); // Mapping data fields\nlayer.color('white'); //Specify color\n",paraId:61,tocIndex:22},{value:"parameter:",paraId:62,tocIndex:23},{value:"field",paraId:63,tocIndex:23},{value:": stringfield is the name of the data source field mapped to the color attribute. It also supports specifying multiple parameters.",paraId:63,tocIndex:23},{value:"colors",paraId:64,tocIndex:23},{value:": string | array | function",paraId:64,tocIndex:23},{value:"The parameters of colors have the following conditions: If it is empty, that is, an array of colors is not specified, then the built-in global color is used; if a color needs to be specified, it needs to be passed in in array format, then the color of the classification is determined according to the color in the array.",paraId:65,tocIndex:23},{value:"layer.scale('name',{\n  type: 'quantile'\n  unknown:'#ccc' // Set invalid color\n})\nlayer.color('name'); // use identity\nlayer.color('name', ['red', 'blue']); // Use the specified color passed in\n",paraId:66,tocIndex:23},{value:"If colors is a callback function, the parameters of the callback function are the values ​​of the corresponding fields. The specific usage is as follows. When color is mapped to multiple fields, the parameters are passed in in the order in which the fields are declared:",paraId:67,tocIndex:23},{value:"layer.color('gender', (value) => {\n  if (value === 1) {\n    return 'red';\n  }\n  return 'blue';\n});\nlayer.color('gender*age', (gender, age) => {\n  if (age === 20 && gender == ' 男') {\n    return 'red';\n  }\n  return 'blue';\n});\n",paraId:68,tocIndex:23},{value:"Usually a layer can have multiple representations. The shape method is used to specify the specific representation of the layer. Take the shape of PointLayer as an example:",paraId:69,tocIndex:24},{value:"shape('circle'); // circle\nshape('triangle'); // triangle\nshape('cylinder'); // cylinder\n",paraId:70,tocIndex:24},{value:"shape(shape)",paraId:71,tocIndex:24},{value:"parameter",paraId:72,tocIndex:24},{value:"shape",paraId:72,tocIndex:24},{value:" string",paraId:72,tocIndex:24},{value:"Only supports receiving one parameter, specifying the shape drawn by the geometric image object. The following table lists the shapes supported by the different layer geometry objects.",paraId:73,tocIndex:24},{value:"layer type",paraId:74,tocIndex:24},{value:"shape type",paraId:74,tocIndex:24},{value:"Remark",paraId:74,tocIndex:24},{value:"point",paraId:74,tocIndex:24},{value:"2d:point,circle, square, triangle,hexagon,image,text 3d:circle,triangle,hexagon,square",paraId:74,tocIndex:24},{value:"line",paraId:74,tocIndex:24},{value:"line,arc, arc3d, greatcircle",paraId:74,tocIndex:24},{value:"polygon",paraId:74,tocIndex:24},{value:"fill,line, extrude",paraId:74,tocIndex:24},{value:"shape(field, shapes)",paraId:75,tocIndex:24},{value:"shape specifies the row shape based on the field, such as specifying the icon type of PointLayer/imageLayer based on the field.",paraId:76,tocIndex:24},{value:"scene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg',\n);\nscene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\nconst imageLayer = new PointLayer()\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'longitude',\n      y: 'latitude',\n    },\n  })\n  .shape('name', ['00', '01', '02'])\n  .size(20);\nscene.addLayer(imageLayer);\n",paraId:77,tocIndex:24},{value:"Online case",paraId:78},{value:"shape(field, callback)",paraId:79},{value:"Shape also supports writing callback functions",paraId:80},{value:".shape('key', value => {\n  if(value > 10) {\n    return 'circle';\n  } else {\n    return 'triangle';\n  }\n}\n",paraId:81}]},14963:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(41102);const t=[{value:"Parameter option",paraId:0,tocIndex:1},{value:"target current layer",paraId:1,tocIndex:1},{value:"type event type",paraId:1,tocIndex:1},{value:"Triggered after layer initialization is completed",paraId:2,tocIndex:1},{value:"layer.on('inited', (option) => {});\n",paraId:3,tocIndex:1},{value:"Add layer to scene",paraId:4,tocIndex:2},{value:"Parameter option",paraId:5,tocIndex:2},{value:"target current layer",paraId:6,tocIndex:2},{value:"type event type",paraId:6,tocIndex:2},{value:"layer.on('add', (type) => console.log(type));\n",paraId:7,tocIndex:2},{value:"Fires when a layer is removed",paraId:8,tocIndex:3},{value:"Parameter option",paraId:9,tocIndex:3},{value:"target current layer",paraId:10,tocIndex:3},{value:"type event type",paraId:10,tocIndex:3},{value:"layer.on('remove', (type) => console.log(type));\n",paraId:11,tocIndex:3},{value:"Data mapping is updated, the legend changes, mainly color and size",paraId:12,tocIndex:4},{value:"The data mapping is updated, the legend changes, and the color changes\nParameter option",paraId:13,tocIndex:5},{value:"type legend type",paraId:14,tocIndex:5},{value:"field mapping field",paraId:14,tocIndex:5},{value:"items legend items",paraId:14,tocIndex:5},{value:"layer.on('legend:color', (ev) => console.log(ev));\n",paraId:15,tocIndex:5},{value:"The data mapping is updated, the legend changes, and the size changes\nParameter option",paraId:16,tocIndex:6},{value:"type legend type",paraId:17,tocIndex:6},{value:"field mapping field",paraId:17,tocIndex:6},{value:"items legend items",paraId:17,tocIndex:6},{value:"layer.on('legend:size', (ev) => console.log(ev));\n",paraId:18,tocIndex:6},{value:"Parameter option",paraId:19,tocIndex:8},{value:"box [x1: number, y1: number, x2: number, y2: number] compared to",paraId:20,tocIndex:8},{value:"cb (...args: any[]) => void callback method passed in, returns the feature inside the box selection",paraId:20,tocIndex:8},{value:"layer.boxSelect(box, cb);\n// (x1, y1), (x2, y2) The pixel coordinates of the upper left corner and lower right corner of the selected box relative to the upper left corner of the map\n//cb is the callback function passed in. The parameter returned by the callback function is the selected feature object array. The fields of the object are related to the data passed in by the user.\n",paraId:21,tocIndex:8}]},24579:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(97442);const t=[{value:"Turn on or off mousehover element highlighting effect",paraId:0,tocIndex:1},{value:"activeOption",paraId:0,tocIndex:1},{value:"color",paraId:1,tocIndex:1},{value:": Highlight color",paraId:1,tocIndex:1},{value:"mix",paraId:1,tocIndex:1},{value:": Optional parameter, the default is 0, which means the highlight color is the specified solid color. The maximum valid value is 1, which means the highlight color is all the background color.",paraId:1,tocIndex:1},{value:"activeOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:2,tocIndex:1},{value:"// Turn on Active and use the default highlight color\nlayer.active(true);\n\n// Turn on Active custom highlight color\n\nlayer.active({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.active(false);\n",paraId:3,tocIndex:1},{value:"Set hover highlight of specified element based on element ID",paraId:4,tocIndex:2},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:5,tocIndex:2},{value:"layer.setActive(featureId);\n",paraId:6,tocIndex:2},{value:"Turn on or off mouseclick element selection highlighting effect",paraId:7,tocIndex:3},{value:"selectOption\n",paraId:7,tocIndex:3},{value:"color",paraId:8,tocIndex:3},{value:": Select highlight color",paraId:8,tocIndex:3},{value:"mix",paraId:8,tocIndex:3},{value:": Optional parameter, the default is 0, which means that the selected highlight color is the specified solid color. The maximum effective value is 1, which means that all the selected highlight colors are background colors.",paraId:8,tocIndex:3},{value:"selectOption: {\n  color: '#f00';\n  mix: 0.6;\n}\n",paraId:9,tocIndex:3},{value:"// Turn on Active and use the default highlight color\nlayer.select(true);\n\n// Turn on Active custom highlight color\n\nlayer.select({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.select(false);\n",paraId:10,tocIndex:3},{value:"Set the specified element according to the element ID click to select and highlight",paraId:11,tocIndex:4},{value:"🌟 Specifying element highlighting is not equal to layer highlighting. A layer contains multiple elements. Generally, a layer has as many elements as there are single pieces of data in the data array passed to source.",paraId:12,tocIndex:4},{value:"layer.setSelect(featureId);\n",paraId:13,tocIndex:4},{value:"Allows users to actively set the autoFit parameters of layers",paraId:14,tocIndex:5},{value:"\n🌟 After setting this method, it will take effect when the layer is updated, such as triggered after setData",paraId:14,tocIndex:5},{value:"// Instructions\nlayer.setAutoFit(true);\n// Internal implementation\npublic setAutoFit(autoFit: boolean): ILayer {\n    this.updateLayerConfig({\n      autoFit,\n    });\n    return this;\n  }\n",paraId:15,tocIndex:5},{value:"Supports separately obtaining the value of a graphic after scale calculation to meet the user's need to obtain certain feature values ​​of the layer.",paraId:16,tocIndex:6},{value:"attribute value of attr scale",paraId:17,tocIndex:6},{value:"const data = [\n  { lng: 120, lat: 30, name: 'n1' },\n  { lng: 120, lat: 30, name: 'n2' },\n];\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat',\n      type: 'json',\n    },\n  })\n  .shape('circle')\n  .color('name', ['#f00', '#ff0'])\n  .size('name', [20, 40]);\n\nscene.addLayer(layer);\n\n// Draw two points on the scene at this time\n// A point with a color of yellow and a size of 40, corresponding to name n1\n// A point with a color of red and a size of 20, corresponding to name n2\n\nconst colorScale = layer.getScale('color'); // Get the scale generated by the color method\nconst color1 = colorScale('n1'); // '#ff0'\nconst color1 = colorScale('n2'); // '#f00'\n\nconst sizeScale = layer.getScale('size'); // Get the scale generated by the size method\nconst size1 = sizeScale('n1'); // 40\nconst size2 = sizeScale('n2'); // 20\n",paraId:18,tocIndex:6},{value:"Get legend configuration",paraId:19,tocIndex:7},{value:"type legend type",paraId:20,tocIndex:7},{value:"index optional default",paraId:20,tocIndex:7},{value:"layer.getLegendItems('color');\n\nlayer.getLegendItems('size');\n",paraId:21,tocIndex:7},{value:"Get the legend getLegendItems enhanced version returns more information",paraId:22,tocIndex:8},{value:"return value",paraId:23,tocIndex:8},{value:"type legend type",paraId:24,tocIndex:8},{value:"field mapping field",paraId:24,tocIndex:8},{value:"items legend items",paraId:24,tocIndex:8},{value:"layer.getLegend('color');\n\nlayer.getLegend('size');\n",paraId:25,tocIndex:8}]},56027:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(5807);const t=[{value:"The style method is usually used to describe the specific style of a layer. Most layers will support some more general properties, such as the opacity property. At the same time, each layer will also have properties that are only supported by this layer, such as only\nThe windowColor attribute supported by CityBuildingLayer. Please check the detailed documentation of each layer for how to configure the attribute for each layer.",paraId:0,tocIndex:0},{value:"opacity sets transparency, supported by most layers",paraId:1,tocIndex:0},{value:"stroke line fill color only supported by point layer",paraId:2,tocIndex:0},{value:"strokeWidth The width of the line. Only supported by point layers.",paraId:3,tocIndex:0},{value:"layer.style({\n  opacity: 0.8,\n  stroke: 'white',\n});\n",paraId:4,tocIndex:0},{value:"Style data mapping🌟",paraId:5,tocIndex:0},{value:"\nUnder normal circumstances, the style parameters will apply to all graphics on a layer. For example, if there are ten points in a PointLayer, we set opacity = 0.5, so that the transparency of the ten points is 0.5.",paraId:5,tocIndex:0},{value:"\nIn special cases, we may need to set a transparency for each point. In this case, directly setting the opacity value of the style method in the original way cannot meet the needs. For this reason, we need to provide a special assignment method.",paraId:5,tocIndex:0},{value:'\nUsually we will set separate values ​​for each graphic of the layer based on the data passed into the layer, so we call it "style data mapping".',paraId:5,tocIndex:0},{value:"\nWe support several ways of setting parameters in style to dynamically obtain values ​​from source data.",paraId:5,tocIndex:0},{value:"//Set the transparency of each point of the point layer based on the value of the v field in the data\nconst data = [\n  {\n    lng: 120,\n    lat: 30,\n    v: 0.5\n  },\n  ...\n]\nconst layer = new PointLayer()\n  .source(data, {\n    parser: {\n      x: 'lng',\n      y: 'lat'\n    }\n  })\n  .shape('circle')\n  .color('#f00')\n  .size({\n    // The first way to write is to get the value directly from data based on the field.\n    opacity: 'v'// opacity = 0.5\n  });\nscene.addLayer(layer);\n",paraId:6,tocIndex:0},{value:"Online case",paraId:7},{value:"from",paraId:8},{value:"L7 2.5",paraId:8},{value:"Starting from the beginning, each layer style will gradually support style data mapping. Currently, all layer styles support style data mapping.",paraId:8},{value:"style",paraId:8},{value:"The parameters are as follows:",paraId:8},{value:"layer type/shape",paraId:9},{value:"Supported style fields",paraId:9},{value:"Remark",paraId:9},{value:"pointLayer/fill",paraId:9},{value:"opacity、strokeOpacity、strokeWidth、stroke、offsets",paraId:9},{value:"shape circle、triangle...",paraId:9},{value:"pointLayer/image",paraId:9},{value:"opacity、offsets",paraId:9},{value:"offsets latitude and longitude offsets",paraId:9},{value:"pointLayer/normal",paraId:9},{value:"opacity、offsets",paraId:9},{value:"pointLayer/text",paraId:9},{value:"opacity、strokeWidth、stroke、textOffset",paraId:9},{value:"textOffset offset relative to text canvas position",paraId:9},{value:"pointLayer/extrude",paraId:9},{value:"opacity",paraId:9},{value:"polygonLayer/fill",paraId:9},{value:"opacity",paraId:9},{value:"polygonLayer/extrude",paraId:9},{value:"opacity",paraId:9},{value:"lineLayer/line",paraId:9},{value:"opacity",paraId:9},{value:"lineLayer/arc",paraId:9},{value:"opacity、thetaOffset",paraId:9},{value:"thetaOffset the curvature of the arc",paraId:9},{value:"lineLayer/arc3d",paraId:9},{value:"opacity",paraId:9},{value:"lineLayer/great_circle",paraId:9},{value:"opacity",paraId:9},{value:"Online case",paraId:10}]},8438:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(53544);const t=[{value:"Currently, texture methods are only supported on line layers.",paraId:0,tocIndex:0},{value:"The texture method supports passing in global icon texture resources added by the scene.addImage method.",paraId:1,tocIndex:0},{value:"// First load image resources globally\nscene.addImage(\n  'plane',\n  'https://gw.alipayobjects.com/zos/bmw-prod/0ca1668e-38c2-4010-8568-b57cb33839b9.svg',\n);\n\nconst layer = new LineLayer({\n  blend: 'normal',\n})\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(25)\n  .shape('arc')\n  .texture('plane') // Bind texture to layer\n  .color('#8C1EB2')\n  .style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:2,tocIndex:0},{value:"Online case",paraId:3}]},27435:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(70810);const t=[{value:"If a layer has been added and you need to modify the layer display style, you can call the graphics mapping method again, and then call",paraId:0,tocIndex:0},{value:"scene.render()",paraId:0,tocIndex:0},{value:"Just update the rendering",paraId:0,tocIndex:0},{value:"Recall the scale method",paraId:1,tocIndex:1},{value:"layer.scale('value', {\n  type: 'quantile',\n});\nscene.render();\n",paraId:2,tocIndex:1},{value:"Recall color/size/filter/shape and other methods",paraId:3,tocIndex:2},{value:"layer.color('blue');\nlayer.size(10);\n\nscene.render();\n",paraId:4,tocIndex:2},{value:"layer.style({\n  opacity: 1,\n});\n\nscene.render();\n",paraId:5,tocIndex:3},{value:"Update Source data",paraId:6,tocIndex:4},{value:"parameter:",paraId:7,tocIndex:4},{value:"data data",paraId:8,tocIndex:4},{value:"option defaults to the same as the initial configuration item. If the data format is the same, it does not need to be set.",paraId:8,tocIndex:4},{value:"Calling the setData method will automatically update the layer rendering",paraId:9,tocIndex:4},{value:"layer.setData(data);\n",paraId:10,tocIndex:4},{value:"Set layer overlay method\nparameter:",paraId:11,tocIndex:5},{value:"type blend 类型 normal ｜ additive ｜ subtractive ｜ max",paraId:12,tocIndex:5}]},59980:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92763);const t=[{value:"Add Mask layer\n",paraId:0,tocIndex:1},{value:"const polygonLayer = new Polygon();\nlayer.addMask(polygonLayer);\nscene.render();\n",paraId:1,tocIndex:1},{value:"const polygonLayer = new Polygon();\nlayer.removeMask(polygonLayer);\nscene.render();\n",paraId:2,tocIndex:2},{value:"layer.disableMask();\nscene.render();\n",paraId:3,tocIndex:3},{value:"layer.disableMask();\nscene.render();\n",paraId:4,tocIndex:4}]},6217:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(98858);const t=[{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:0},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:1},{value:"Mask layer takes effect",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:0},{value:"array Layer",paraId:3,tocIndex:0},{value:" ",paraId:3,tocIndex:0},{value:"optional",paraId:3,tocIndex:0},{value:" ",paraId:3,tocIndex:0},{value:"default:",paraId:3,tocIndex:0},{value:"[]",paraId:3,tocIndex:0},{value:"Mask layer takes effect",paraId:4,tocIndex:1},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:5,tocIndex:1},{value:" ",paraId:6,tocIndex:1},{value:"bool",paraId:6,tocIndex:1},{value:" ",paraId:6,tocIndex:1},{value:"optional",paraId:6,tocIndex:1},{value:" ",paraId:6,tocIndex:1},{value:"default:",paraId:6,tocIndex:1},{value:" true",paraId:6,tocIndex:1},{value:"Mask layer takes effect\n",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:2},{value:"boolean",paraId:8,tocIndex:2},{value:" ",paraId:8,tocIndex:2},{value:"optional",paraId:8,tocIndex:2},{value:" ",paraId:8,tocIndex:2},{value:"default:",paraId:8,tocIndex:2},{value:" true",paraId:8,tocIndex:2},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:9,tocIndex:2},{value:"true",paraId:10,tocIndex:2},{value:"Show inside the mask",paraId:10,tocIndex:2},{value:"false",paraId:10,tocIndex:2},{value:"Show outside mask",paraId:10,tocIndex:2},{value:"Template layer takes effect",paraId:11,tocIndex:3},{value:" ",paraId:11,tocIndex:3},{value:"enumerate",paraId:11,tocIndex:3},{value:" ",paraId:11,tocIndex:3},{value:"optional",paraId:11,tocIndex:3},{value:" ",paraId:11,tocIndex:3},{value:"default:",paraId:11,tocIndex:3},{value:" and",paraId:11,tocIndex:3},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:11,tocIndex:3},{value:"or intersection",paraId:12,tocIndex:3},{value:"and union",paraId:12,tocIndex:3},{value:"Usage example",paraId:13,tocIndex:3},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:14,tocIndex:3}]},3087:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(26094);const t=[{value:"Mouse event callback parameter target",paraId:0,tocIndex:0},{value:"layer.on(eventName, (target) => console.log(target));\n",paraId:1,tocIndex:0},{value:"x: number x coordinate of the mouse at the map location",paraId:2,tocIndex:0},{value:"y: number The y coordinate of the mouse's position on the map",paraId:2,tocIndex:0},{value:"type: string mouse event type",paraId:2,tocIndex:0},{value:"lngLat: longitude object {lng:number, lat: number}; the latitude and longitude of the mouse location",paraId:2,tocIndex:0},{value:"feature: any; geographical feature information selected by the data",paraId:2,tocIndex:0},{value:"featureId: number | null; ID of the geographical feature selected in the data",paraId:2,tocIndex:0},{value:"click event",paraId:3,tocIndex:1},{value:"layer.on('click', (e) => console.log(e));\n",paraId:4,tocIndex:1},{value:"double click",paraId:5,tocIndex:2},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:6,tocIndex:2},{value:"mouse move event",paraId:7,tocIndex:3},{value:"layer.on('mousemove', (e) => console.log(e));\n",paraId:8,tocIndex:3},{value:"mouse removal",paraId:9,tocIndex:4},{value:"layer.on('mouseout', (e) => console.log(e));\n",paraId:10,tocIndex:4},{value:"mouse raised",paraId:11,tocIndex:5},{value:"layer.on('mouseup', (e) => console.log(e));\n",paraId:12,tocIndex:5},{value:"mouse pressed",paraId:13,tocIndex:6},{value:"layer.on('mousedown', (e) => console.log(e));\n",paraId:14,tocIndex:6},{value:"right click",paraId:15,tocIndex:7},{value:"layer.on('contextmenu', (e) => console.log(e));\n",paraId:16,tocIndex:7},{value:"Double click to pick element",paraId:17,tocIndex:8},{value:"layer.on('dblclick', (e) => console.log(e));\n",paraId:18,tocIndex:8},{value:"No element was picked up by clicking",paraId:19,tocIndex:9},{value:"layer.on('unclick', (e) => console.log(e));\n",paraId:20,tocIndex:9},{value:"Element not picked up by mouse movement",paraId:21,tocIndex:10},{value:"layer.on('unmousemove', (e) => console.log(e));\n",paraId:22,tocIndex:10},{value:"The element is not picked up when the mouse is raised",paraId:23,tocIndex:11},{value:"layer.on('unmouseup', (e) => console.log(e));\n",paraId:24,tocIndex:11},{value:"The element is not picked up when the mouse is pressed",paraId:25,tocIndex:12},{value:"layer.on('unmousedown', (e) => console.log(e));\n",paraId:26,tocIndex:12},{value:"Select the element with the right mouse button",paraId:27,tocIndex:13},{value:"layer.on('uncontextmenu', (e) => console.log(e));\n",paraId:28,tocIndex:13},{value:"All mouse events are not picked up",paraId:29,tocIndex:14},{value:"layer.on('unpick', (e) => console.log(e));\n",paraId:30,tocIndex:14},{value:"Usage example",paraId:31,tocIndex:14},{value:"layer.on('click', (ev) => {}); // Left mouse button click event on layer\nlayer.on('mouseenter', (ev) => {}); // The mouse enters the layer element\nlayer.on('mousemove', (ev) => {}); // Triggered when the mouse moves on the layer\nlayer.on('mouseout', (ev) => {}); // Triggered when the mouse moves out of the layer element\nlayer.on('mouseup', (ev) => {}); // Triggered when the mouse is clicked and raised on the layer\nlayer.on('mousedown', (ev) => {}); // Triggered when the mouse is clicked on the layer\nlayer.on('contextmenu', (ev) => {}); // Right-click menu of layer elements\n\n//Events when the mouse is outside the layer\nlayer.on('unclick', (ev) => {}); // Click outside the layer\nlayer.on('unmousemove', (ev) => {}); // Move outside the layer\nlayer.on('unmouseup', (ev) => {}); // Mouse up outside the layer\nlayer.on('unmousedown', (ev) => {}); // Triggered when clicked outside the layer\nlayer.on('uncontextmenu', (ev) => {}); // Right-click outside the layer\nlayer.on('unpick', (ev) => {}); // All events for operations outside the layer\n",paraId:32,tocIndex:14}]},57889:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51576);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},99556:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(65853);const t=[{value:"type type supports `linear','quantize','custom','cat'",paraId:0,tocIndex:0},{value:"colors color array",paraId:0,tocIndex:0},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:0,tocIndex:0},{value:"⚠️ 2.13 new features",paraId:1,tocIndex:0},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:2,tocIndex:1},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:3,tocIndex:1},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:4,tocIndex:2},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:5,tocIndex:2},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:6,tocIndex:3},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:7,tocIndex:3},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:8,tocIndex:4},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:9,tocIndex:4}]},38654:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44290);const t=[{value:"style",paraId:0},{value:"Method is used to configure the style of the layer,",paraId:0},{value:"The single-channel drawing result is controlled by a single numerical value, such as a grayscale image. The color corresponding to the numerical value can be configured by expressing",paraId:1},{value:"rampColors",paraId:1},{value:"Ribbon control.",paraId:1},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:2},{value:"style",paraId:3,tocIndex:0},{value:"type",paraId:3,tocIndex:0},{value:"describe",paraId:3,tocIndex:0},{value:"default value",paraId:3,tocIndex:0},{value:"opacity",paraId:3,tocIndex:0},{value:"number",paraId:3,tocIndex:0},{value:"Graphic transparency",paraId:3,tocIndex:0},{value:"1",paraId:3,tocIndex:0},{value:"clampLow",paraId:3,tocIndex:0},{value:"boolean",paraId:3,tocIndex:0},{value:"Set as",paraId:3,tocIndex:0},{value:"true",paraId:3,tocIndex:0},{value:", lower than",paraId:3,tocIndex:0},{value:"domain",paraId:3,tocIndex:0},{value:"data will not be displayed",paraId:3,tocIndex:0},{value:"false",paraId:3,tocIndex:0},{value:"clampHigh",paraId:3,tocIndex:0},{value:"boolean",paraId:3,tocIndex:0},{value:"Set as",paraId:3,tocIndex:0},{value:"true",paraId:3,tocIndex:0},{value:", higher than",paraId:3,tocIndex:0},{value:"domain",paraId:3,tocIndex:0},{value:"data will not be displayed",paraId:3,tocIndex:0},{value:"false",paraId:3,tocIndex:0},{value:"domain",paraId:3,tocIndex:0},{value:"[number, number]",paraId:3,tocIndex:0},{value:"Data mapping interval",paraId:3,tocIndex:0},{value:"[ 0, 8000 ]",paraId:3,tocIndex:0},{value:"noDataValue",paraId:3,tocIndex:0},{value:"number",paraId:3,tocIndex:0},{value:"Values ​​that will not be displayed",paraId:3,tocIndex:0},{value:"-9999999",paraId:3,tocIndex:0},{value:"rampColors",paraId:3,tocIndex:0},{value:"IRampColors",paraId:3,tocIndex:0},{value:"The color ramp for the range mapping color",paraId:3,tocIndex:0},{value:"/",paraId:3,tocIndex:0},{value:"type type supports `linear','quantize','custom','cat'",paraId:4,tocIndex:1},{value:"colors color array",paraId:4,tocIndex:1},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:4,tocIndex:1},{value:"⚠️ 2.13 new features",paraId:5,tocIndex:1},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:6,tocIndex:2},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:7,tocIndex:2},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:8,tocIndex:3},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:9,tocIndex:3},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:10,tocIndex:4},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:11,tocIndex:4},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:12,tocIndex:5},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:13,tocIndex:5}]},3974:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(37406);const t=[{value:"The single-channel drawing result is controlled by a single numerical value, such as a grayscale image. The color corresponding to the numerical value can be configured by expressing",paraId:0},{value:"rampColors",paraId:0},{value:"Ribbon control.",paraId:0},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:1},{value:"style",paraId:2,tocIndex:0},{value:"type",paraId:2,tocIndex:0},{value:"describe",paraId:2,tocIndex:0},{value:"default value",paraId:2,tocIndex:0},{value:"opacity",paraId:2,tocIndex:0},{value:"number",paraId:2,tocIndex:0},{value:"Graphic transparency",paraId:2,tocIndex:0},{value:"1",paraId:2,tocIndex:0},{value:"clampLow",paraId:2,tocIndex:0},{value:"boolean",paraId:2,tocIndex:0},{value:"Set as",paraId:2,tocIndex:0},{value:"true",paraId:2,tocIndex:0},{value:", lower than",paraId:2,tocIndex:0},{value:"domain",paraId:2,tocIndex:0},{value:"data will not be displayed",paraId:2,tocIndex:0},{value:"false",paraId:2,tocIndex:0},{value:"clampHigh",paraId:2,tocIndex:0},{value:"boolean",paraId:2,tocIndex:0},{value:"Set as",paraId:2,tocIndex:0},{value:"true",paraId:2,tocIndex:0},{value:", higher than",paraId:2,tocIndex:0},{value:"domain",paraId:2,tocIndex:0},{value:"data will not be displayed",paraId:2,tocIndex:0},{value:"false",paraId:2,tocIndex:0},{value:"domain",paraId:2,tocIndex:0},{value:"[number, number]",paraId:2,tocIndex:0},{value:"Data mapping interval",paraId:2,tocIndex:0},{value:"[ 0, 8000 ]",paraId:2,tocIndex:0},{value:"noDataValue",paraId:2,tocIndex:0},{value:"number",paraId:2,tocIndex:0},{value:"Values ​​that will not be displayed",paraId:2,tocIndex:0},{value:"-9999999",paraId:2,tocIndex:0},{value:"rampColors",paraId:2,tocIndex:0},{value:"IRampColors",paraId:2,tocIndex:0},{value:"The color ramp for the range mapping color",paraId:2,tocIndex:0},{value:"/",paraId:2,tocIndex:0},{value:"type type supports `linear','quantize','custom','cat'",paraId:3,tocIndex:1},{value:"colors color array",paraId:3,tocIndex:1},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:3,tocIndex:1},{value:"⚠️ 2.13 new features",paraId:4,tocIndex:1},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:5,tocIndex:2},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:6,tocIndex:2},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:7,tocIndex:3},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:8,tocIndex:3},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:9,tocIndex:4},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:10,tocIndex:4},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:11,tocIndex:5},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:12,tocIndex:5}]},93666:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(10738);const t=[{value:"scale",paraId:0},{value:"Method sets the data field mapping method, which is used to convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding.",paraId:0},{value:"field",paraId:1,tocIndex:0},{value:"Specify the field name used for mapping in the data passed in source",paraId:1,tocIndex:0},{value:"scaleConfig",paraId:1,tocIndex:0},{value:"Column definition configuration, object type",paraId:1,tocIndex:0},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:2,tocIndex:0},{value:"scale",paraId:3,tocIndex:1},{value:"The types can be divided into",paraId:3,tocIndex:1},{value:"3",paraId:3,tocIndex:1},{value:"kind",paraId:3,tocIndex:1},{value:"11",paraId:3,tocIndex:1},{value:"species, different",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"The difference is that",paraId:3,tocIndex:1},{value:"domain->range",paraId:3,tocIndex:1},{value:"The conversion method is different.",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"and",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"yes",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"two very important parameters.",paraId:3,tocIndex:1},{value:"domain: definition interval of map data values",paraId:4,tocIndex:1},{value:"range: interval definition of visual value",paraId:4,tocIndex:1},{value:"type of data",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow、time、sequential、quantize、quantile、threshold",paraId:5,tocIndex:1},{value:"Classification",paraId:5,tocIndex:1},{value:"cat、time",paraId:5,tocIndex:1},{value:"constant",paraId:5,tocIndex:1},{value:"identity",paraId:5,tocIndex:1},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:6,tocIndex:2},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:7,tocIndex:2},{value:"Constant measure A field is a constant that does not change.",paraId:8,tocIndex:3},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:9,tocIndex:4},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:10,tocIndex:5},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:11,tocIndex:6},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:12,tocIndex:7},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:13,tocIndex:7},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:14,tocIndex:7},{value:"A uniform non-rational B-spline interpolator function that returns the given array of colors to be converted to RGB colors.",paraId:15,tocIndex:8},{value:"const scaleColors = d3interpolate.interpolateRgbBasis(colors);\n",paraId:16,tocIndex:8},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  range?: any[];\n  neutral?: number;\n  field?: string;\n  unknown?: string;\n  ticks?: any[];\n  nice?: boolean;\n  clamp?: boolean;\n  format?: () => any;\n}\n",paraId:17,tocIndex:9}]},2926:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(3291);const t=[{value:"The layer data uses the latitude and longitude format, and the data source supports three data formats: JSON, GeoJSON, and CSV.",paraId:0},{value:"GeoJSON",paraId:1},{value:"CSV",paraId:2},{value:"JSON",paraId:3},{value:"🌟 Usually each type of data requires a corresponding parser to parse the data",paraId:4}]},8511:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(68039);const t=[{value:"The default style configuration is a constant value. Some configurations also support data mapping. The mapping definition is the same as the color and size parameters.",paraId:0,tocIndex:0},{value:"field: mapping field",paraId:1,tocIndex:0},{value:"value: mapping interval or custom callback function",paraId:1,tocIndex:0},{value:"like:",paraId:2,tocIndex:0},{value:"layer.style({\n    opacity:{\n        field:'name'\n        value:[0.1,0.5,1],\n\n    }\n})\n",paraId:3,tocIndex:0}]},60800:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(47981);const t=[{value:" ",paraId:0,tocIndex:1},{value:"number",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:1,tocIndex:1},{value:"Map initial center latitude and longitude {Lnglat}",paraId:2,tocIndex:2},{value:"Map initial pitch angle {number} default 0",paraId:3,tocIndex:3},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:4,tocIndex:4},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:5,tocIndex:5},{value:"Whether the map can be rotated {Boolean} default true",paraId:6,tocIndex:6},{value:"Scene unified agent, see",paraId:7,tocIndex:7},{value:"Scene document",paraId:8,tocIndex:7},{value:"or",paraId:9,tocIndex:7},{value:"scene.map directly calls the map instance method",paraId:10,tocIndex:7}]},80941:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(8131);const t=[{value:"format",paraId:0,tocIndex:2},{value:"Method used to extract band data from the incoming raster file binary data.",paraId:0,tocIndex:2},{value:"The first parameter is the raster file binary data",paraId:1,tocIndex:2},{value:"The second parameter is the band that should be extracted from the raster file specified by the first parameter.",paraId:2,tocIndex:2},{value:"format",paraId:3,tocIndex:2},{value:"Is a",paraId:3,tocIndex:2},{value:"async",paraId:3,tocIndex:2},{value:"method.",paraId:3,tocIndex:2},{value:"normalized index",paraId:4,tocIndex:3},{value:"{\n  type: 'nd';\n}\n",paraId:5,tocIndex:3},{value:"Example 1",paraId:6,tocIndex:4},{value:"// band1 * 0.5\n{\n  operation: ['*', ['band', 1], 0.5],\n};\n",paraId:7,tocIndex:4},{value:"Example 2 Nested use",paraId:8,tocIndex:4},{value:"// band0 * 0.2 + band1\n{\n  operation:['+', ['*', ['band', 0], 0.2], ['band', 1]]]\n};\n",paraId:9,tocIndex:4},{value:"Example 3 Normalized Index",paraId:10,tocIndex:4},{value:"// Vegetation index calculation\n{\n  operation: [\n    '/',\n    ['-', ['band', 1], ['band', 0]], // R > NIR\n    ['+', ['band', 1], ['band', 0]],\n  ];\n}\n",paraId:11,tocIndex:4},{value:"operation expression type",paraId:12,tocIndex:4},{value:"*",paraId:13,tocIndex:4},{value:"['*', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value1 * value2",paraId:13,tocIndex:4},{value:"/",paraId:13,tocIndex:4},{value:"['/', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value1 / value2",paraId:13,tocIndex:4},{value:"+",paraId:13,tocIndex:4},{value:"['+', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value1 + value2",paraId:13,tocIndex:4},{value:"-",paraId:13,tocIndex:4},{value:"['-', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value2 - value1",paraId:13,tocIndex:4},{value:"%",paraId:13,tocIndex:4},{value:"['%', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value1 % value2",paraId:13,tocIndex:4},{value:"^",paraId:13,tocIndex:4},{value:"['^', value1, value2]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"value1 ^ value2",paraId:13,tocIndex:4},{value:"abs",paraId:13,tocIndex:4},{value:"['abs', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.abs(value1)",paraId:13,tocIndex:4},{value:"floor ",paraId:13,tocIndex:4},{value:"['floor', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.floor(value1)",paraId:13,tocIndex:4},{value:"round ",paraId:13,tocIndex:4},{value:"['round', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.round(value1)",paraId:13,tocIndex:4},{value:"ceil ",paraId:13,tocIndex:4},{value:"['ceil', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.ceil(value1)",paraId:13,tocIndex:4},{value:"sin ",paraId:13,tocIndex:4},{value:"['sin', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.sin(value1)",paraId:13,tocIndex:4},{value:"cos ",paraId:13,tocIndex:4},{value:"['cos', value1]",paraId:13,tocIndex:4},{value:"return",paraId:13,tocIndex:4},{value:"Math.cos(value1)",paraId:13,tocIndex:4},{value:"atan ",paraId:13,tocIndex:4},{value:"['atan', value1, value2]",paraId:13,tocIndex:4},{value:"Return `n1===-1?Math.atan(n1):",paraId:13,tocIndex:4}]},66276:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(33698);const t=[{value:"Raster data is the visualization of data raster. The main source of raster data is satellite remote sensing data, such as digital elevation map, vegetation distribution map and night light map.",paraId:0},{value:"data data",paraId:1},{value:"option configuration item\n",paraId:1},{value:"parser data parsing parameters",paraId:2},{value:"data The parsed data, which is an array",paraId:3,tocIndex:0},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:4,tocIndex:0},{value:"Taking geotiff as an example, the data needs to be parsed first and input to the source as data.",paraId:5,tocIndex:0},{value:"import * as GeoTIFF from 'geotiff';\n\nasync function getTiffData() {\n  async function getTiffData() {\n    const response = await fetch(\n      'https://gw.alipayobjects.com/zos/antvdemo/assets/light_clip/lightF182013.tiff',\n    );\n    const arrayBuffer = await response.arrayBuffer();\n    const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n    const image = await tiff.getImage();\n    const width = image.getWidth();\n    const height = image.getHeight();\n    const values = await image.readRasters();\n    return {\n      data: values[0],\n      width,\n      height,\n    };\n  }\n}\nconst tiffdata = await getTiffData();\nlayer.source(tiffdata.data, {\n  parser: {\n    type: 'raster',\n    width: tiffdata.width,\n    height: tiffdata.height,\n    extent: [73.4821902409999979, 3.8150178409999995, 135.1066187319999869, 57.6300459959999998],\n  },\n});\n",paraId:6,tocIndex:0},{value:"type: raster",paraId:7,tocIndex:1},{value:"extent: the latitude and longitude range of the raster [minlng, minlat,maxLng, maxLat]",paraId:7,tocIndex:1},{value:"width data width",paraId:7,tocIndex:1},{value:"height data height",paraId:7,tocIndex:1},{value:"Add raster data to the map based on its latitude and longitude range.",paraId:8,tocIndex:1},{value:"layer.source(rasterData, {\n  parser: {\n    type: 'raster',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:9,tocIndex:1},{value:"Raster ndi",paraId:10}]},36329:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(73566);const t=[{value:"Multi-band supports two data methods. The raster data coordinate system only supports 3857 projected rasters.",paraId:0,tocIndex:0},{value:"Single file multiple bands",paraId:1,tocIndex:0},{value:"Multiple single-band files form multi-band",paraId:1,tocIndex:0},{value:"data is unparsed tiff arraybuffer data, which is standardized by format in parser",paraId:2,tocIndex:1},{value:"const url1 = 'https://gw.alipayobjects.com/zos/raptor/1667832825992/LC08_3857_clip_2.tif';\n  async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  return arrayBuffer;\n  }\n}\nlayer.source(\n    [\n    {\n        data: tiffdata,\n        bands: [6, 5, 2].map((v) => v - 1),\n    },\n    ],\n    {\n    parser: {\n        type: 'rasterRgb',\n        format: async (data, bands) => {\n        const tiff = await GeoTIFF.fromArrayBuffer(data);\n        const image1 = await tiff.getImage();\n        const value = await image1.readRasters();\n        return bands.map((band) => {\n            return {\n            rasterData: value[band],\n            width: value.width,\n            height: value.height,\n            };\n        });\n        },\n        operation: {\n        type: 'rgb',\n        },\n        extent: [\n        130.39565357746957, 46.905730725742366, 130.73364094187343,\n        47.10217234153133,\n        ],\n    },\n    },\n)\n",paraId:3,tocIndex:1},{value:"type: raster",paraId:4,tocIndex:2},{value:"extent: the latitude and longitude range of the raster [minlng, minlat,maxLng, maxLat]",paraId:4,tocIndex:2},{value:"Add raster data to the map based on its latitude and longitude range.",paraId:5,tocIndex:2},{value:"layer.source(rasterData, {\n  parser: {\n    type: 'raster',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:6,tocIndex:2},{value:"Users can directly pass in the binary data of the raster file.",paraId:7,tocIndex:2},{value:"Supports transferring data from multiple files.",paraId:8,tocIndex:2},{value:"Supports specifying the bands to be extracted from a raster file.",paraId:8,tocIndex:2},{value:"interface IBandsData {\n  data: ArrayBuffer; // Request the binary data of the loaded raster file\n  bands?: number[]; // Specify the bands to load the raster file\n}\n//Load the data of band 0 by default\nconst source = new Source({ data: tiffData });\n//Specify to load the data of tiffData 0 band\n//Specify to load the data of band 0 and 1 of tiffData2\nconst source2 = new Source([\n  { data: tiffData, bands: [0] },\n  { data: tiffData2, bands: [0, 1] },\n]);\n",paraId:9,tocIndex:2},{value:" ",paraId:10,tocIndex:3},{value:"IParser",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"required",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"Provides the necessary parameters and methods for working with raster data.",paraId:11,tocIndex:3},{value:"interface IParser {\n  type: string;\n  format: IRasterFormat;\n  operation: IOperation;\n  extent: number[];\n}\n",paraId:12,tocIndex:3},{value:" ",paraId:13,tocIndex:4},{value:"string",paraId:13,tocIndex:4},{value:" ",paraId:13,tocIndex:4},{value:"required",paraId:13,tocIndex:4},{value:" ",paraId:13,tocIndex:4},{value:"When the output result is single-channel data, the value is raster",paraId:14,tocIndex:4},{value:"When the output result is multi-channel color, the value is rasterRgb.",paraId:14,tocIndex:4},{value:" ",paraId:15,tocIndex:5},{value:"IFormat",paraId:15,tocIndex:5},{value:" ",paraId:15,tocIndex:5},{value:"required",paraId:15,tocIndex:5},{value:" ",paraId:15,tocIndex:5},{value:"format",paraId:16,tocIndex:5},{value:"Method used to extract band data from the incoming raster file binary data.",paraId:16,tocIndex:5},{value:"The first parameter is the raster file binary data.",paraId:17,tocIndex:5},{value:"The second parameter is the band that should be extracted from the raster file specified by the first parameter. The method parameter is what we pass",paraId:17,tocIndex:5},{value:"source",paraId:17,tocIndex:5},{value:"parameters passed",paraId:17,tocIndex:5},{value:"data",paraId:17,tocIndex:5},{value:"numerical value.",paraId:17,tocIndex:5},{value:"format",paraId:17,tocIndex:5},{value:"Is a",paraId:17,tocIndex:5},{value:"async",paraId:17,tocIndex:5},{value:"method.",paraId:17,tocIndex:5},{value:"interface IRasterData {\n  rasterData: HTMLImageElement | Uint8Array | ImageBitmap | null | undefined;\n  width: number;\n  height: number;\n}\ntype IRasterFormat = (\n  data: ArrayBuffer,\n  bands: number[],\n) => Promise<IRasterData | IRasterData[]>;\n\nconst source = new Source(data, {\n  parser: {\n    format: async (data, bands) => {\n      ...\n      return {\n        rasterData: bandData,\n        width: 256;\n        height: 256;\n      }\n    }\n  }\n})\n",paraId:18,tocIndex:5},{value:"format",paraId:19,tocIndex:5},{value:"The return value of the method is raster data (",paraId:19,tocIndex:5},{value:"rasterData",paraId:19,tocIndex:5},{value:") and the size",paraId:19,tocIndex:5},{value:"width",paraId:19,tocIndex:5},{value:"、",paraId:19,tocIndex:5},{value:"height",paraId:19,tocIndex:5},{value:"parameter.",paraId:19,tocIndex:5},{value:"format",paraId:19,tocIndex:5},{value:"The method can return multiple copies of data, indicating that multiple band data are extracted from the current raster file.",paraId:19,tocIndex:5},{value:" ",paraId:20,tocIndex:6},{value:"IOperation",paraId:20,tocIndex:6},{value:" ",paraId:20,tocIndex:6},{value:"Optional",paraId:20,tocIndex:6},{value:" ",paraId:20,tocIndex:6},{value:"When loading multi-band data we can pass",paraId:21,tocIndex:6},{value:"operation",paraId:21,tocIndex:6},{value:"Configure the operation of band data.",paraId:21,tocIndex:6},{value:"🌟 We don’t need to configure it",paraId:22,tocIndex:6},{value:"operation",paraId:22,tocIndex:6},{value:", the first band data extracted from the first raster file is used by default.",paraId:22,tocIndex:6},{value:"operation",paraId:23,tocIndex:6},{value:"can be a function,",paraId:23,tocIndex:6},{value:"allbands",paraId:23,tocIndex:6},{value:"is the collection of all band data we extracted from all raster files.",paraId:23,tocIndex:6},{value:"const parser = {\n  operation: (allBands) => {\n    // operation can be a function, allbands is the collection of all band data we extract from all raster files,\n    // When setting up allbands, it is [band0]\n    //The return value of the function is pure band data. Here we directly return the first band data.\n    return allBands[0].rasterData;\n  },\n};\n",paraId:24,tocIndex:6},{value:"operation",paraId:25,tocIndex:6},{value:"Can be a calculation expression in the form of an array.",paraId:25,tocIndex:6},{value:"//The following expression can be paraphrased as band1 * 0.5, which means multiplying the values ​​of band 1 by 0.5 and returning\nconst parser = {\n  operation: ['*', ['band', 1], 0.5],\n};\n",paraId:26,tocIndex:6},{value:"operation",paraId:27,tocIndex:6},{value:"Can be used nested:",paraId:27,tocIndex:6},{value:"['+', ['*', ['band', 0], 0.2], ['band', 1]]]",paraId:27,tocIndex:6},{value:", the return result is:",paraId:27,tocIndex:6},{value:"band0 * 0.2 + band1",paraId:27,tocIndex:6},{value:"。",paraId:27,tocIndex:6},{value:"operation",paraId:28,tocIndex:6},{value:"The result can be specified directly:",paraId:28,tocIndex:6},{value:"['band', 0]",paraId:28,tocIndex:6},{value:"。",paraId:28,tocIndex:6},{value:"operation",paraId:29,tocIndex:6},{value:"The following mathematical operations are supported.",paraId:29,tocIndex:6},{value:"/** Mathematical operations Perform mathematical operations based on calculation expressions\n * * * Math operators:\n * `['*', value1, value2]` returns `value1 * value2`\n * `['/', value1, value2]` returns `value1 / value2`\n * `['+', value1, value2]` returns `value1 + value2`\n * `['-', value1, value2]` returns `value2 - value1`\n * `['%', value1, value2]` returns `value1 % value2`\n * `['^', value1, value2]` returns `value1 ^ value2`\n * `['abs', value1]` returns `Math.abs(value1)`\n * `['floor', value1]` returns `Math.floor(value1)`\n * `['round', value1]` returns `Math.round(value1)`\n * `['ceil', value1]` returns `Math.ceil(value1)`\n * `['sin', value1]` returns `Math.sin(value1)`\n * `['cos', value1]` returns `Math.cos(value1)`\n * `['atan', value1, value2]` returns `n1===-1?Math.atan(n1): Math.atan2(n1, n2)`\n */\n",paraId:30,tocIndex:6},{value:" ",paraId:31,tocIndex:7},{value:"number[]",paraId:31,tocIndex:7},{value:" ",paraId:31,tocIndex:7},{value:"required",paraId:31,tocIndex:7},{value:" ",paraId:31,tocIndex:7},{value:"extent",paraId:32,tocIndex:7},{value:"It describes the geographical interval covered by the raster data, and the numerical value specifies the longitude and latitude interval (lower left corner and upper right corner) of the area.",paraId:32,tocIndex:7},{value:"When using multi-band data, we support drawing color remote sensing images based on multi-band data, such as the false color image below.",paraId:33,tocIndex:8},{value:"\n  ",paraId:34},{value:"\n    ",paraId:34},{value:"\n  ",paraId:34},{value:"When drawing multi-channel images, multi-band data needs to be loaded",paraId:35,tocIndex:9},{value:"Provides necessary parameters and methods for using raster data, specific uses and multi-band rasters.",paraId:36,tocIndex:10},{value:"parser",paraId:36,tocIndex:10},{value:"be consistent.",paraId:36,tocIndex:10},{value:" ",paraId:37,tocIndex:11},{value:"string",paraId:37,tocIndex:11},{value:" ",paraId:37,tocIndex:11},{value:"required",paraId:37,tocIndex:11},{value:" ",paraId:37,tocIndex:11},{value:"When the output result is multi-channel color, the value is",paraId:38,tocIndex:11},{value:"rasterRgb",paraId:38,tocIndex:11},{value:"。",paraId:38,tocIndex:11},{value:" ",paraId:39,tocIndex:12},{value:"IFormat",paraId:39,tocIndex:12},{value:" ",paraId:39,tocIndex:12},{value:"required",paraId:39,tocIndex:12},{value:" ",paraId:39,tocIndex:12},{value:"When drawing multi-channel images, use the general",paraId:40,tocIndex:12},{value:"format",paraId:40,tocIndex:12},{value:"function.",paraId:40,tocIndex:12},{value:" ",paraId:41,tocIndex:13},{value:"IOperation",paraId:41,tocIndex:13},{value:" ",paraId:41,tocIndex:13},{value:"required",paraId:41,tocIndex:13},{value:" ",paraId:41,tocIndex:13},{value:"In order to draw multi-channel images, we must provide",paraId:42,tocIndex:13},{value:"operation",paraId:42,tocIndex:13},{value:"Configure specified multi-channel data.",paraId:42,tocIndex:13},{value:"When rendering a color multi-channel raster, you need to use an additional parser. At the same time, the color raster layer no longer supports parameters such as domain and rampColor. The rendering result is directly controlled by the numerical results of the r, g, and b channels calculated by the band.",paraId:43,tocIndex:13},{value:"Colored rasters are no longer compatible with the old data value transfer method (pass in the parsed raster data directly.",paraId:44,tocIndex:13},{value:"const source = new Source(data, { // Colored rasters and single-channel rasters use the same rules\n  parser: {\n    type: 'rasterRgb', // use independent type type\n    format: async (data, bands) {...}, // Colored rasters and single-channel rasters use the same format\n    // operation is an object, specifying calculation expressions for the three rgb channels respectively.\n    // operation must be configured\n    operation: {\n      r: ['*', ['band', 1], 0.5],\n      g: ['band', 1],\n      b: undefined // The channel of the default configuration expression will take the value of band 0 by default\n    }\n  }\n",paraId:45,tocIndex:13}]},13466:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(85962);const t=[{value:"raster-ndi(Normalized Difference Indices) source is to calculate the normalized index of multi-band data, such as calculating NDVI/NDWI and other indices.",paraId:0},{value:"data data",paraId:1},{value:"option configuration item\n",paraId:1},{value:"parser data parsing parameters\n",paraId:2},{value:"type parsing type",paraId:3},{value:"ndi",paraId:3},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'ndi',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3], // start from zero\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:4},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:5,tocIndex:0},{value:"data is an array type",paraId:6,tocIndex:0},{value:"RasterDataType[]",paraId:6,tocIndex:0},{value:"If it is a multi-band Tiff, you can directly use geotiff,js to read all bands.",paraId:7,tocIndex:0},{value:"If it is a single file and single band data, it needs to be read separately and merged into one data.",paraId:7,tocIndex:0},{value:"Single file multi-band reading example",paraId:8,tocIndex:0},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:9,tocIndex:0},{value:"type parsing type 'rgb'",paraId:10,tocIndex:1},{value:"必选",paraId:10,tocIndex:1},{value:"bands ",paraId:11,tocIndex:1},{value:"[number,number] 指定需要归一化的波段,data 数组长度需要大于等于 2  ",paraId:11,tocIndex:1},{value:"Required`",paraId:11,tocIndex:1},{value:"Note: The bands serial number starts from zero (5, 4 in landsat 8, the band should be set to 4, 3)",paraId:12,tocIndex:1},{value:"width length",paraId:13,tocIndex:1},{value:"必选",paraId:13,tocIndex:1},{value:"height width",paraId:14,tocIndex:1},{value:"必选",paraId:14,tocIndex:1},{value:"Raster ndi",paraId:15}]},28199:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(49852);const t=[{value:"raster-rgb source synthesizes multi-band data into RGB data for display. For example, for LandSat8 data, we can perform RGB combination display according to the 5,4,3 or 4,3,2 bands.",paraId:0},{value:"data data",paraId:1},{value:"option configuration item\n",paraId:1},{value:"parser data parsing parameters\n",paraId:2},{value:"type parsing type",paraId:3},{value:"rgb",paraId:3},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'rgb',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3, 2], // 从零开始\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:4},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:5,tocIndex:0},{value:"data is an array type",paraId:6,tocIndex:0},{value:"RasterDataType[]",paraId:6,tocIndex:0},{value:"If it is a multi-band Tiff, you can directly use geotiff,js to read all bands.",paraId:7,tocIndex:0},{value:"If it is a single file and single band data, it needs to be read separately and merged into one data.",paraId:7,tocIndex:0},{value:"Single file multi-band reading example",paraId:8,tocIndex:0},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:9,tocIndex:0},{value:"type parsing type 'rgb'",paraId:10,tocIndex:1},{value:"必选",paraId:10,tocIndex:1},{value:"bands ",paraId:11,tocIndex:1},{value:"[number,number,number] 指定 R/G/B 通道对应的数据索引,data 数组长度需要大于等于 3  ",paraId:11,tocIndex:1},{value:"Required`",paraId:11,tocIndex:1},{value:"Note: The bands serial number starts from zero (bands 5, 4, and 3 in landsat 8 should be set to 4, 3, 2)",paraId:12,tocIndex:1},{value:"width length",paraId:13,tocIndex:1},{value:"必选",paraId:13,tocIndex:1},{value:"height width",paraId:14,tocIndex:1},{value:"必选",paraId:14,tocIndex:1},{value:"countCut color stretching parameter",paraId:15,tocIndex:1},{value:"[number,number]",paraId:15,tocIndex:1},{value:"Value is percentage, default value",paraId:15,tocIndex:1},{value:"[2,98]",paraId:15,tocIndex:1},{value:" ",paraId:15,tocIndex:1},{value:"可选",paraId:15,tocIndex:1},{value:"Raster RGB",paraId:16}]},39907:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(35145);const t=[{value:"Tile data set, which can obtain tile information and tile status within the current field of view",paraId:0,tocIndex:1},{value:"const source = layer1.getSource();\nconst tileSet = source.tileset;\n",paraId:1,tocIndex:1},{value:"Whether the tiles are loaded",paraId:2,tocIndex:3},{value:"Current tile object",paraId:3,tocIndex:4},{value:"The current tile level; where once is not equal to the zoom level of the map",paraId:4,tocIndex:5},{value:"Map dragging, triggered when new tiles need to be loaded",paraId:5,tocIndex:7},{value:"tileSet.on('tiles-load-start', () => {\n  console.log('tile start');\n});\n",paraId:6,tocIndex:7},{value:"Triggered after all tile resources that need to be loaded are loaded.",paraId:7,tocIndex:8},{value:"tileSet.on('tiles-load-finished', () => {\n  console.log('tile finished');\n});\n",paraId:8,tocIndex:8},{value:"Reloading the tile will re-request the data, which is suitable for dynamic tile scenarios, such as the tile data is updated, or the data of the tile Join is updated.",paraId:9,tocIndex:10},{value:"source.reloadAllTile();\n",paraId:10,tocIndex:10},{value:"Reload a specific tile",paraId:11,tocIndex:11},{value:"parameter",paraId:12,tocIndex:11},{value:"z zoom level",paraId:13,tocIndex:11},{value:"x tile x coordinate",paraId:13,tocIndex:11},{value:"y tile has coordinates",paraId:13,tocIndex:11},{value:"source.reloadTileById(z, x, y);\n",paraId:14,tocIndex:11},{value:"Update tiles based on latitude and longitude range",paraId:15,tocIndex:12},{value:"parameter",paraId:16,tocIndex:12},{value:"extent: latitude and longitude range [minLng,minLat,maxLng,maxLat]",paraId:17,tocIndex:12},{value:"zoom: zoom level",paraId:17,tocIndex:12},{value:"Update tiles based on longitude and latitude, convert longitude and latitude coordinates into tile coordinates and update",paraId:18,tocIndex:13},{value:"lng longitude",paraId:19,tocIndex:13},{value:"latitude",paraId:19,tocIndex:13},{value:"zoom zoom level",paraId:19,tocIndex:13},{value:"source.reloadTileByLnglat(112, 30, 10);\n",paraId:20,tocIndex:13}]},77375:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(18654);const t=[{value:"The map control refers to hovering around the map, and you can perform operations on the map, layers and other elements.",paraId:0},{value:"information presentation",paraId:0},{value:"or",paraId:0},{value:"interaction",paraId:0},{value:"s component.",paraId:0},{value:"import { Scene, Zoom } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  //Instantiate the Zoom control, you can pass in the control configuration in the constructor\n  const zoom = new Zoom({\n    position: 'leftbottom',\n    className: 'my-test-class',\n  });\n\n  //Add the instantiated control to L7\n  scene.addControl(zoom);\n});\n",paraId:1,tocIndex:0},{value:"After the control is instantiated, if you need to update the configuration, you can call the control instance's",paraId:2,tocIndex:1},{value:"setOptions",paraId:2,tocIndex:1},{value:"method, and pass in the configuration object that needs to be updated.",paraId:2,tocIndex:1},{value:"const zoom = new Zoom({\n  position: 'leftbottom',\n});\n\nconst onPositionChange = () => {\n  // Pass in the configuration object that needs to be updated through setOptions\n  zoom.setOptions({\n    position: 'topright',\n  });\n};\n",paraId:3,tocIndex:1},{value:"Currently the controls in L7 support inserting into the map",paraId:4,tocIndex:2},{value:"Upper left, lower left, upper right, lower right, upper, left, lower, right",paraId:4,tocIndex:2},{value:"Eight position slots or user-defined",paraId:4,tocIndex:2},{value:"DOM",paraId:4,tocIndex:2},{value:", and support between multiple controls in the same map slot",paraId:4,tocIndex:2},{value:"Horizontal",paraId:4,tocIndex:2},{value:"and",paraId:4,tocIndex:2},{value:"portrait",paraId:4,tocIndex:2},{value:"arrangement.",paraId:4,tocIndex:2},{value:"When initializing all control classes, you can pass in",paraId:5,tocIndex:2},{value:"position",paraId:5,tocIndex:2},{value:"Parameters to set the corresponding slot and arrangement of the control.",paraId:5,tocIndex:2},{value:"name",paraId:6,tocIndex:3},{value:"illustrate",paraId:6,tocIndex:3},{value:"type",paraId:6,tocIndex:3},{value:"position",paraId:6,tocIndex:3},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:6,tocIndex:3},{value:"control slot",paraId:7,tocIndex:3},{value:"Position",paraId:8,tocIndex:3},{value:"className",paraId:6,tocIndex:3},{value:"Custom style name",paraId:6,tocIndex:3},{value:"string",paraId:6,tocIndex:3},{value:"style",paraId:6,tocIndex:3},{value:"Custom style",paraId:6,tocIndex:3},{value:"string",paraId:6,tocIndex:3},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:9,tocIndex:4},{value:"name",paraId:10,tocIndex:5},{value:"illustrate",paraId:10,tocIndex:5},{value:"type",paraId:10,tocIndex:5},{value:"setOptions",paraId:10,tocIndex:5},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:10,tocIndex:5},{value:"Configuration",paraId:11,tocIndex:5},{value:"(newOption: Partial<Option>) => void",paraId:10,tocIndex:5},{value:"getOptions",paraId:10,tocIndex:5},{value:"Get current",paraId:10,tocIndex:5},{value:"Configuration",paraId:12,tocIndex:5},{value:"() => Option",paraId:10,tocIndex:5},{value:"show",paraId:10,tocIndex:5},{value:"display component",paraId:10,tocIndex:5},{value:"() => void",paraId:10,tocIndex:5},{value:"hide",paraId:10,tocIndex:5},{value:"Hidden component",paraId:10,tocIndex:5},{value:"() => void",paraId:10,tocIndex:5},{value:"getContainer",paraId:10,tocIndex:5},{value:"Get the information corresponding to the current control",paraId:10,tocIndex:5},{value:"DOM",paraId:10,tocIndex:5},{value:"container",paraId:10,tocIndex:5},{value:"() => HTMLElement",paraId:10,tocIndex:5},{value:"Name",paraId:13,tocIndex:6},{value:"Description",paraId:13,tocIndex:6},{value:"Type",paraId:13,tocIndex:6},{value:"add",paraId:13,tocIndex:6},{value:"Event when component is added",paraId:13,tocIndex:6},{value:"(this) => void",paraId:13,tocIndex:6},{value:"remove",paraId:13,tocIndex:6},{value:"Event when component is removed",paraId:13,tocIndex:6},{value:"(this) => void",paraId:13,tocIndex:6},{value:"show",paraId:13,tocIndex:6},{value:"Events when the component is displayed",paraId:13,tocIndex:6},{value:"(this) => void",paraId:13,tocIndex:6},{value:"hide",paraId:13,tocIndex:6},{value:"Event when component is hidden",paraId:13,tocIndex:6},{value:"(this) => void",paraId:13,tocIndex:6}]},84202:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(80611);const t=[{value:"Take a screenshot of the current map part and generate a picture",paraId:0},{value:"Base64",paraId:0},{value:"String.",paraId:0},{value:"Example",paraId:1},{value:"The captured targets when taking screenshots only include:",paraId:2},{value:"map base map",paraId:3},{value:"Layers (excluding MarkerLayer)",paraId:3},{value:"Note: Since the current map base map corresponds to",paraId:4},{value:"Canvas",paraId:4},{value:"The buffer is enabled by default, so the basemap portion of the map cannot be captured by default.",paraId:4},{value:"Therefore, if the developer needs the complete screenshot capability, the following parameters should be passed when initializing the map instance to turn it off.",paraId:5},{value:"Canvas",paraId:5},{value:"buffer.",paraId:5},{value:"new GaodeMapV2({\n  WebGLParams: {\n    preserveDrawingBuffer: true,\n  },\n});\n\nnew Mapbox({\n  preserveDrawingBuffer: true,\n});\n",paraId:6},{value:"import { Scene, ExportImage } from '@antv/l7';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMapV2({\n    // Close the map buffer, otherwise the map part cannot be captured when taking screenshots\n    WebGLParams: {\n      preserveDrawingBuffer: true,\n    },\n  }),\n});\n\nscene.on('loaded', () => {\n  const zoom = new ExportImage({\n    onExport: (base64: string) => {\n      // download(base64)\n    },\n  });\n  scene.addControl(zoom);\n});\n",paraId:7,tocIndex:1},{value:"name",paraId:8,tocIndex:2},{value:"illustrate",paraId:8,tocIndex:2},{value:"type",paraId:8,tocIndex:2},{value:"imageType",paraId:8,tocIndex:2},{value:"Screenshot image format",paraId:8,tocIndex:2},{value:"'png'",paraId:8,tocIndex:2},{value:"|",paraId:8,tocIndex:2},{value:"'jpeg'",paraId:8,tocIndex:2},{value:"onExport",paraId:8,tocIndex:2},{value:"After the screenshot is successfully taken, it is used to receive the picture",paraId:8,tocIndex:2},{value:"Base64",paraId:8,tocIndex:2},{value:"String callback function",paraId:8,tocIndex:2},{value:"(base64: string) => void",paraId:8,tocIndex:2},{value:"名称",paraId:9,tocIndex:2},{value:"说明",paraId:9,tocIndex:2},{value:"类型",paraId:9,tocIndex:2},{value:"btnIcon",paraId:9,tocIndex:2},{value:"按钮图标",paraId:9,tocIndex:2},{value:"HTMLElement",paraId:9,tocIndex:2},{value:" | ",paraId:9,tocIndex:2},{value:"SVGElement",paraId:9,tocIndex:2},{value:"btnText",paraId:9,tocIndex:2},{value:"按钮内容文本",paraId:9,tocIndex:2},{value:"string",paraId:9,tocIndex:2},{value:"title",paraId:9,tocIndex:2},{value:"按钮的 ",paraId:9,tocIndex:2},{value:"title",paraId:9,tocIndex:2},{value:" 属性",paraId:9,tocIndex:2},{value:"string",paraId:9,tocIndex:2},{value:"vertical",paraId:9,tocIndex:2},{value:"在 btnIcon 有值的情况下，按钮内的图标和文案是否纵向排列",paraId:9,tocIndex:2},{value:"boolean",paraId:9,tocIndex:2},{value:"名称",paraId:10,tocIndex:2},{value:"说明",paraId:10,tocIndex:2},{value:"类型",paraId:10,tocIndex:2},{value:"position",paraId:10,tocIndex:2},{value:"控件被添加到地图中的位置以及排列方式，详情可见 ",paraId:10,tocIndex:2},{value:"控件插槽",paraId:11,tocIndex:2},{value:"Position",paraId:12,tocIndex:2},{value:"className",paraId:10,tocIndex:2},{value:"自定义样式名",paraId:10,tocIndex:2},{value:"string",paraId:10,tocIndex:2},{value:"style",paraId:10,tocIndex:2},{value:"自定义样式",paraId:10,tocIndex:2},{value:"string",paraId:10,tocIndex:2},{value:"export type Position =\n  | 'topleft' // ↖ 左上角，纵向排列\n  | 'lefttop' // ↖ 左上角，横向排列\n  | 'topright' // ↗ 右上角，纵向排列\n  | 'righttop' // ↗ 右上角，横向排列\n  | 'bottomleft' // ↙ 左下角，纵向排列\n  | 'leftbottom' // ↙ 左下角，横向排列\n  | 'bottomright' // ↘ 右下角，纵向排列\n  | 'rightbottom' // ↘ 右下角，横向排列\n  | 'topcenter' // ↑ 上方中央，横向排列\n  | 'bottomcenter' // ↓ 下方中间，横向排列\n  | 'leftcenter' // ← 左边中间，纵向排列\n  | 'rightcenter' // → 右边中间，纵向排列\n  | Element; // 传入 DOM 作为当前控件的容器\n",paraId:13,tocIndex:3},{value:"name",paraId:14,tocIndex:4},{value:"illustrate",paraId:14,tocIndex:4},{value:"type",paraId:14,tocIndex:4},{value:"getImage",paraId:14,tocIndex:4},{value:"Get the Base64 string of the screenshot",paraId:14,tocIndex:4},{value:"() => Promise<string>",paraId:14,tocIndex:4},{value:"name",paraId:15,tocIndex:4},{value:"illustrate",paraId:15,tocIndex:4},{value:"type",paraId:15,tocIndex:4},{value:"setOptions",paraId:15,tocIndex:4},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:15,tocIndex:4},{value:"Configuration",paraId:16,tocIndex:4},{value:"(newOption: Partial<Option>) => void",paraId:15,tocIndex:4},{value:"getOptions",paraId:15,tocIndex:4},{value:"Get current",paraId:15,tocIndex:4},{value:"Configuration",paraId:17,tocIndex:4},{value:"() => Option",paraId:15,tocIndex:4},{value:"show",paraId:15,tocIndex:4},{value:"display component",paraId:15,tocIndex:4},{value:"() => void",paraId:15,tocIndex:4},{value:"hide",paraId:15,tocIndex:4},{value:"Hidden component",paraId:15,tocIndex:4},{value:"() => void",paraId:15,tocIndex:4},{value:"getContainer",paraId:15,tocIndex:4},{value:"Get the information corresponding to the current control",paraId:15,tocIndex:4},{value:"DOM",paraId:15,tocIndex:4},{value:"container",paraId:15,tocIndex:4},{value:"() => HTMLElement",paraId:15,tocIndex:4},{value:"Name",paraId:18,tocIndex:5},{value:"Description",paraId:18,tocIndex:5},{value:"Type",paraId:18,tocIndex:5},{value:"add",paraId:18,tocIndex:5},{value:"Event when component is added",paraId:18,tocIndex:5},{value:"(this) => void",paraId:18,tocIndex:5},{value:"remove",paraId:18,tocIndex:5},{value:"Event when component is removed",paraId:18,tocIndex:5},{value:"(this) => void",paraId:18,tocIndex:5},{value:"show",paraId:18,tocIndex:5},{value:"Events when the component is displayed",paraId:18,tocIndex:5},{value:"(this) => void",paraId:18,tocIndex:5},{value:"hide",paraId:18,tocIndex:5},{value:"Event when component is hidden",paraId:18,tocIndex:5},{value:"(this) => void",paraId:18,tocIndex:5}]},28838:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51819);const t=[{value:"Used to control map areas",paraId:0},{value:"full screen",paraId:0},{value:"and",paraId:0},{value:"Exit Full Screen",paraId:0},{value:"control button control.",paraId:0},{value:"Example",paraId:1},{value:"import { Scene, Fullscreen } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const fullscreen = new Fullscreen({\n    btnText: '全屏',\n    exitBtnText: '退出全屏',\n  });\n  scene.addControl(fullscreen);\n});\n",paraId:2},{value:"name",paraId:3,tocIndex:1},{value:"illustrate",paraId:3,tocIndex:1},{value:"type",paraId:3,tocIndex:1},{value:"btnIcon",paraId:3,tocIndex:1},{value:"button icon",paraId:3,tocIndex:1},{value:"HTMLElement",paraId:3,tocIndex:1},{value:"|",paraId:3,tocIndex:1},{value:"SVGElement",paraId:3,tocIndex:1},{value:"btnText",paraId:3,tocIndex:1},{value:"Button content text",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"title",paraId:3,tocIndex:1},{value:"button",paraId:3,tocIndex:1},{value:"title",paraId:3,tocIndex:1},{value:"Attributes",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"vertical",paraId:3,tocIndex:1},{value:"When btnIcon has a value, whether the icons and text in the button are arranged vertically",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"name",paraId:4,tocIndex:1},{value:"illustrate",paraId:4,tocIndex:1},{value:"type",paraId:4,tocIndex:1},{value:"exitBtnIcon",paraId:4,tocIndex:1},{value:"Exit full screen button icon",paraId:4,tocIndex:1},{value:"HTMLElement",paraId:4,tocIndex:1},{value:"|",paraId:4,tocIndex:1},{value:"SVGElement",paraId:4,tocIndex:1},{value:"exitBtnText",paraId:4,tocIndex:1},{value:"Text for exit full screen button",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"exitTitle",paraId:4,tocIndex:1},{value:"Exit full screen button text",paraId:4,tocIndex:1},{value:"title",paraId:4,tocIndex:1},{value:"Attributes",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"name",paraId:5,tocIndex:1},{value:"illustrate",paraId:5,tocIndex:1},{value:"type",paraId:5,tocIndex:1},{value:"position",paraId:5,tocIndex:1},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:5,tocIndex:1},{value:"control slot",paraId:6,tocIndex:1},{value:"Position",paraId:7,tocIndex:1},{value:"className",paraId:5,tocIndex:1},{value:"Custom style name",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"style",paraId:5,tocIndex:1},{value:"Custom style",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:8,tocIndex:2},{value:"name",paraId:9,tocIndex:3},{value:"illustrate",paraId:9,tocIndex:3},{value:"type",paraId:9,tocIndex:3},{value:"toggleFullscreen",paraId:9,tocIndex:3},{value:"Enter/exit the full screen state of the full screen map section",paraId:9,tocIndex:3},{value:"() => void",paraId:9,tocIndex:3},{value:"name",paraId:10,tocIndex:3},{value:"illustrate",paraId:10,tocIndex:3},{value:"type",paraId:10,tocIndex:3},{value:"setOptions",paraId:10,tocIndex:3},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:10,tocIndex:3},{value:"Configuration",paraId:11,tocIndex:3},{value:"(newOption: Partial<Option>) => void",paraId:10,tocIndex:3},{value:"getOptions",paraId:10,tocIndex:3},{value:"Get current",paraId:10,tocIndex:3},{value:"Configuration",paraId:12,tocIndex:3},{value:"() => Option",paraId:10,tocIndex:3},{value:"show",paraId:10,tocIndex:3},{value:"display component",paraId:10,tocIndex:3},{value:"() => void",paraId:10,tocIndex:3},{value:"hide",paraId:10,tocIndex:3},{value:"Hidden component",paraId:10,tocIndex:3},{value:"() => void",paraId:10,tocIndex:3},{value:"getContainer",paraId:10,tocIndex:3},{value:"Get the information corresponding to the current control",paraId:10,tocIndex:3},{value:"DOM",paraId:10,tocIndex:3},{value:"container",paraId:10,tocIndex:3},{value:"() => HTMLElement",paraId:10,tocIndex:3},{value:"name",paraId:13,tocIndex:4},{value:"illustrate",paraId:13,tocIndex:4},{value:"type",paraId:13,tocIndex:4},{value:"fullscreenChange",paraId:13,tocIndex:4},{value:"Triggered when the full screen state changes",paraId:13,tocIndex:4},{value:"(isFullscreen: boolean) => void",paraId:13,tocIndex:4},{value:"Name",paraId:14,tocIndex:4},{value:"Description",paraId:14,tocIndex:4},{value:"Type",paraId:14,tocIndex:4},{value:"add",paraId:14,tocIndex:4},{value:"Event when component is added",paraId:14,tocIndex:4},{value:"(this) => void",paraId:14,tocIndex:4},{value:"remove",paraId:14,tocIndex:4},{value:"Event when component is removed",paraId:14,tocIndex:4},{value:"(this) => void",paraId:14,tocIndex:4},{value:"show",paraId:14,tocIndex:4},{value:"Events when the component is displayed",paraId:14,tocIndex:4},{value:"(this) => void",paraId:14,tocIndex:4},{value:"hide",paraId:14,tocIndex:4},{value:"Event when component is hidden",paraId:14,tocIndex:4},{value:"(this) => void",paraId:14,tocIndex:4}]},78600:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(4640);const t=[{value:"using browser environment",paraId:0},{value:"nagigator",paraId:0},{value:"of",paraId:0},{value:"getlocation",paraId:0},{value:"Method, use the browser to turn on the location sensing capability to obtain the longitude and latitude of the current user.",paraId:0},{value:"Example",paraId:1},{value:"Notice:",paraId:2},{value:"When using this capability, the user will be required to authenticate the browser to enable location awareness.",paraId:3},{value:"The coordinates currently obtained by the browser are",paraId:3},{value:"WGS84",paraId:3},{value:"The geographical coordinate system will be biased when used on the Gaode map, so it can be used",paraId:3},{value:"transform",paraId:3},{value:"Configure the coordinate system conversion.",paraId:3},{value:"import { Scene, GeoLocate } from '@antv/l7';\nimport gcoord from 'gcoord';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const geoLocate = new GeoLocate({\n    transform: (position) => {\n      //Convert the coordinates obtained based on the WGS84 geographical coordinate system into the GCJ02 coordinate system\n      return gcoord.transform(position, gcoord.WGS84, gcoord.GCJ02);\n    },\n  });\n  scene.addControl(geoLocate);\n});\n",paraId:4,tocIndex:1},{value:"name",paraId:5,tocIndex:2},{value:"illustrate",paraId:5,tocIndex:2},{value:"type",paraId:5,tocIndex:2},{value:"transform",paraId:5,tocIndex:2},{value:"Format passed",paraId:5,tocIndex:2},{value:"getlocation",paraId:5,tocIndex:2},{value:"The function of the obtained longitude and latitude can be used to convert the geographical coordinate system",paraId:5,tocIndex:2},{value:"(position: [number, number]) => [number, number]",paraId:5,tocIndex:2},{value:"name",paraId:6,tocIndex:2},{value:"illustrate",paraId:6,tocIndex:2},{value:"type",paraId:6,tocIndex:2},{value:"btnIcon",paraId:6,tocIndex:2},{value:"button icon",paraId:6,tocIndex:2},{value:"HTMLElement",paraId:6,tocIndex:2},{value:"|",paraId:6,tocIndex:2},{value:"SVGElement",paraId:6,tocIndex:2},{value:"btnText",paraId:6,tocIndex:2},{value:"Button content text",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"title",paraId:6,tocIndex:2},{value:"button",paraId:6,tocIndex:2},{value:"title",paraId:6,tocIndex:2},{value:"Attributes",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"vertical",paraId:6,tocIndex:2},{value:"When btnIcon has a value, whether the icons and text in the button are arranged vertically",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"name",paraId:7,tocIndex:2},{value:"illustrate",paraId:7,tocIndex:2},{value:"type",paraId:7,tocIndex:2},{value:"position",paraId:7,tocIndex:2},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:7,tocIndex:2},{value:"control slot",paraId:8,tocIndex:2},{value:"Position",paraId:9,tocIndex:2},{value:"className",paraId:7,tocIndex:2},{value:"Custom style name",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:"style",paraId:7,tocIndex:2},{value:"Custom style",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:10,tocIndex:3},{value:"name",paraId:11,tocIndex:4},{value:"illustrate",paraId:11,tocIndex:4},{value:"type",paraId:11,tocIndex:4},{value:"getGeoLocation",paraId:11,tocIndex:4},{value:"Get the latitude and longitude of the current user's location",paraId:11,tocIndex:4},{value:"() => Promise<[number, number]>",paraId:11,tocIndex:4},{value:"name",paraId:12,tocIndex:4},{value:"illustrate",paraId:12,tocIndex:4},{value:"type",paraId:12,tocIndex:4},{value:"setOptions",paraId:12,tocIndex:4},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:12,tocIndex:4},{value:"Configuration",paraId:13,tocIndex:4},{value:"(newOption: Partial<Option>) => void",paraId:12,tocIndex:4},{value:"getOptions",paraId:12,tocIndex:4},{value:"Get current",paraId:12,tocIndex:4},{value:"Configuration",paraId:14,tocIndex:4},{value:"() => Option",paraId:12,tocIndex:4},{value:"show",paraId:12,tocIndex:4},{value:"display component",paraId:12,tocIndex:4},{value:"() => void",paraId:12,tocIndex:4},{value:"hide",paraId:12,tocIndex:4},{value:"Hidden component",paraId:12,tocIndex:4},{value:"() => void",paraId:12,tocIndex:4},{value:"getContainer",paraId:12,tocIndex:4},{value:"Get the information corresponding to the current control",paraId:12,tocIndex:4},{value:"DOM",paraId:12,tocIndex:4},{value:"container",paraId:12,tocIndex:4},{value:"() => HTMLElement",paraId:12,tocIndex:4},{value:"Name",paraId:15,tocIndex:5},{value:"Description",paraId:15,tocIndex:5},{value:"Type",paraId:15,tocIndex:5},{value:"add",paraId:15,tocIndex:5},{value:"Event when component is added",paraId:15,tocIndex:5},{value:"(this) => void",paraId:15,tocIndex:5},{value:"remove",paraId:15,tocIndex:5},{value:"Event when component is removed",paraId:15,tocIndex:5},{value:"(this) => void",paraId:15,tocIndex:5},{value:"show",paraId:15,tocIndex:5},{value:"Events when the component is displayed",paraId:15,tocIndex:5},{value:"(this) => void",paraId:15,tocIndex:5},{value:"hide",paraId:15,tocIndex:5},{value:"Event when component is hidden",paraId:15,tocIndex:5},{value:"(this) => void",paraId:15,tocIndex:5}]},36531:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(11465);const t=[{value:"LayerPopup is a bubble encapsulated based on Popup and is specifically used to display layer element information.",paraId:0},{value:"LayerPopup is designed to allow developers to quickly generate bubbles for displaying layer information through configuration. Developers can pass in the layers that need to display information bubbles and the fields that need to be displayed.",paraId:1,tocIndex:0},{value:"LayerPopup will listen to the mouse events of the target layer by itself. When the user clicks/hoveres on an element of the target layer, the Popup will automatically open and display the field value of the element.",paraId:2,tocIndex:0},{value:"Example",paraId:3,tocIndex:1},{value:"Custom content examples",paraId:4,tocIndex:1},{value:"import { Scene, LayerPopup, PointLayer } from '@antv/l7';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMapV2({\n    // ...\n  }),\n});\n\nscene.on('loaded', () => {\n  const pointLayer = new PointLayer();\n  pointLayer.source(\n    [\n      {\n        lng: 120,\n        lat: 30,\n        name: 'Test 1',\n      },\n    ],\n    {\n      parser: {\n        type: 'json',\n        x: 'lng',\n        y: 'lat',\n      },\n    },\n  );\n  scene.addLayer(pointLayer);\n  const layerPopup = new LayerPopup({\n    items: [\n      {\n        layer: pointLayer,\n        fields: [\n          {\n            field: 'name',\n            formatValue: (name?: string) => name.trim() ?? '-',\n          },\n        ],\n      },\n    ],\n    trigger: 'hover',\n  });\n  scene.addPopup(popup);\n});\n",paraId:5,tocIndex:1},{value:"name",paraId:6,tocIndex:2},{value:"illustrate",paraId:6,tocIndex:2},{value:"type",paraId:6,tocIndex:2},{value:"default value",paraId:6,tocIndex:2},{value:"items",paraId:6,tocIndex:2},{value:"The layer configuration array of Popup needs to be displayed, and each option type is visible",paraId:6,tocIndex:2},{value:"LayerPopupConfigItem",paraId:7,tocIndex:2},{value:"Array<LayerPopupConfigItem>",paraId:6,tocIndex:2},{value:"[]",paraId:6,tocIndex:2},{value:"trigger",paraId:6,tocIndex:2},{value:"How the mouse triggers Popup display",paraId:6,tocIndex:2},{value:"'hover' | 'click'",paraId:6,tocIndex:2},{value:"'hover'",paraId:6,tocIndex:2},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"layer",paraId:8,tocIndex:3},{value:"Need to display the Popup's target layer instance, or its",paraId:8,tocIndex:3},{value:"id",paraId:8,tocIndex:3},{value:"or",paraId:8,tocIndex:3},{value:"name",paraId:8,tocIndex:3},{value:"BaseLayer",paraId:8,tocIndex:3},{value:"|",paraId:8,tocIndex:3},{value:"string",paraId:8,tocIndex:3},{value:"fields",paraId:8,tocIndex:3},{value:"Array of fields that need to be displayed, supporting the incoming field key value string, or detailed configuration for the field",paraId:8,tocIndex:3},{value:"LayerField",paraId:9,tocIndex:3},{value:"string",paraId:8,tocIndex:3},{value:"|",paraId:8,tocIndex:3},{value:"LayerField",paraId:8,tocIndex:3},{value:"customContent",paraId:8,tocIndex:3},{value:"Custom bubble content supports two ways of directly passing in custom content or returning custom content through a callback function.",paraId:8,tocIndex:3},{value:"fields",paraId:8,tocIndex:3},{value:"Under coexistence, the configuration is read first and rendered.",paraId:8,tocIndex:3},{value:"ElementType | ((feature: any) => ElementType)",paraId:8,tocIndex:3},{value:"title",paraId:8,tocIndex:3},{value:"Custom bubble title supports two ways of directly passing in custom content or returning custom content through a callback function.",paraId:8,tocIndex:3},{value:"ElementType | ((feature: any) => ElementType)",paraId:8,tocIndex:3},{value:"name",paraId:10,tocIndex:4},{value:"illustrate",paraId:10,tocIndex:4},{value:"type",paraId:10,tocIndex:4},{value:"field",paraId:10,tocIndex:4},{value:"The key value string of the field",paraId:10,tocIndex:4},{value:"string",paraId:10,tocIndex:4},{value:"formatField",paraId:10,tocIndex:4},{value:"Format the displayed key field",paraId:10,tocIndex:4},{value:"ElementType | ((field: string, feature: any) => ElementType)",paraId:10,tocIndex:4},{value:"formatValue",paraId:10,tocIndex:4},{value:"Format the displayed value value",paraId:10,tocIndex:4},{value:"ElementType | ((value: any, feature: any) => ElementType)",paraId:10,tocIndex:4},{value:"getValue",paraId:10,tocIndex:4},{value:"Customize the way to get the value",paraId:10,tocIndex:4},{value:"(feature: any) => any",paraId:10,tocIndex:4},{value:"type ElementType = HTMLElement | HTMLElement[] | DocumentFragment | Text | string;\n",paraId:11,tocIndex:5},{value:"name",paraId:12,tocIndex:6},{value:"illustrate",paraId:12,tocIndex:6},{value:"type",paraId:12,tocIndex:6},{value:"getOptions",paraId:12,tocIndex:6},{value:"Get the current Popup configuration",paraId:12,tocIndex:6},{value:"() => IPopupOption",paraId:12,tocIndex:6},{value:"setOptions",paraId:12,tocIndex:6},{value:"Update current Popup configuration",paraId:12,tocIndex:6},{value:"(newOption: Partial<IPopupOption>) => this",paraId:12,tocIndex:6},{value:"show",paraId:12,tocIndex:6},{value:"Show Popup",paraId:12,tocIndex:6},{value:"() => this",paraId:12,tocIndex:6},{value:"hide",paraId:12,tocIndex:6},{value:"Hide Popup",paraId:12,tocIndex:6},{value:"() => this",paraId:12,tocIndex:6},{value:"setLngLat",paraId:12,tocIndex:6},{value:"Set the latitude and longitude of the Popup anchor point",paraId:12,tocIndex:6},{value:"(lngLat: { lng: number; lat: number } | [number, number]) => this",paraId:12,tocIndex:6},{value:"panToPopup",paraId:12,tocIndex:6},{value:"Pan the map to the current Popup location",paraId:12,tocIndex:6},{value:"() => this",paraId:12,tocIndex:6},{value:"name",paraId:13,tocIndex:7},{value:"illustrate",paraId:13,tocIndex:7},{value:"type",paraId:13,tocIndex:7},{value:"open",paraId:13,tocIndex:7},{value:"Fired when Popup is added",paraId:13,tocIndex:7},{value:"() => void",paraId:13,tocIndex:7},{value:"close",paraId:13,tocIndex:7},{value:"Triggered when Popup is removed",paraId:13,tocIndex:7},{value:"() => void",paraId:13,tocIndex:7},{value:"show",paraId:13,tocIndex:7},{value:"Triggered when Popup is displayed",paraId:13,tocIndex:7},{value:"() => void",paraId:13,tocIndex:7},{value:"hide",paraId:13,tocIndex:7},{value:"Triggered when Popup is hidden",paraId:13,tocIndex:7},{value:"() => void",paraId:13,tocIndex:7}]},50773:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(86454);const t=[{value:"Used to control the target layer group",paraId:0},{value:"show",paraId:0},{value:"and",paraId:0},{value:"hide",paraId:0},{value:"operate.",paraId:0},{value:"Notice",paraId:1,tocIndex:0},{value:": The layer name displayed in the control will read the layer's name by default.",paraId:1,tocIndex:0},{value:"name",paraId:1,tocIndex:0},{value:"property, so the user needs to pass in the corresponding name of the layer when initializing the layer.",paraId:1,tocIndex:0},{value:"Example",paraId:2},{value:"import { Scene, LayerSwitch } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const layer = new PointLayer({\n    name: '自定义图层名称',\n  });\n  scene.addLayer(layer);\n\n  const layerSwitch = new LayerSwitch({\n    layers: [layer],\n  });\n  scene.addControl(layerSwitch);\n});\n",paraId:3},{value:"name",paraId:4,tocIndex:2},{value:"illustrate",paraId:4,tocIndex:2},{value:"type",paraId:4,tocIndex:2},{value:"layers",paraId:4,tocIndex:2},{value:"need to be controlled",paraId:4,tocIndex:2},{value:"layer",paraId:4,tocIndex:2},{value:"Array, supports passing in layer example or layer id. If not passed, all layers in the current L7 will be read by default.",paraId:4,tocIndex:2},{value:"Array<ILayer | string>",paraId:4,tocIndex:2},{value:"name",paraId:5,tocIndex:2},{value:"illustrate",paraId:5,tocIndex:2},{value:"type",paraId:5,tocIndex:2},{value:"popperPlacement",paraId:5,tocIndex:2},{value:"The position of the bubble relative to the button",paraId:5,tocIndex:2},{value:"PopperPlacement",paraId:6,tocIndex:2},{value:"popperTrigger",paraId:5,tocIndex:2},{value:"How to trigger bubble pop-up",paraId:5,tocIndex:2},{value:"'click'",paraId:5,tocIndex:2},{value:"|",paraId:5,tocIndex:2},{value:"'hover'",paraId:5,tocIndex:2},{value:"popperClassName",paraId:5,tocIndex:2},{value:"Bubble container custom style name",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"export type PopperPlacement =\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'left-start'\n  | 'left'\n  | 'left-end'\n  | 'bottom-start'\n  | 'bottom'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end';\n",paraId:7,tocIndex:3},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"btnIcon",paraId:8,tocIndex:3},{value:"button icon",paraId:8,tocIndex:3},{value:"HTMLElement",paraId:8,tocIndex:3},{value:"|",paraId:8,tocIndex:3},{value:"SVGElement",paraId:8,tocIndex:3},{value:"btnText",paraId:8,tocIndex:3},{value:"Button content text",paraId:8,tocIndex:3},{value:"string",paraId:8,tocIndex:3},{value:"title",paraId:8,tocIndex:3},{value:"button",paraId:8,tocIndex:3},{value:"title",paraId:8,tocIndex:3},{value:"Attributes",paraId:8,tocIndex:3},{value:"string",paraId:8,tocIndex:3},{value:"vertical",paraId:8,tocIndex:3},{value:"When btnIcon has a value, whether the icons and text in the button are arranged vertically",paraId:8,tocIndex:3},{value:"boolean",paraId:8,tocIndex:3},{value:"name",paraId:9,tocIndex:3},{value:"illustrate",paraId:9,tocIndex:3},{value:"type",paraId:9,tocIndex:3},{value:"position",paraId:9,tocIndex:3},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:9,tocIndex:3},{value:"control slot",paraId:10,tocIndex:3},{value:"Position",paraId:11,tocIndex:3},{value:"className",paraId:9,tocIndex:3},{value:"Custom style name",paraId:9,tocIndex:3},{value:"string",paraId:9,tocIndex:3},{value:"style",paraId:9,tocIndex:3},{value:"Custom style",paraId:9,tocIndex:3},{value:"string",paraId:9,tocIndex:3},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:12,tocIndex:4},{value:"name",paraId:13,tocIndex:5},{value:"illustrate",paraId:13,tocIndex:5},{value:"type",paraId:13,tocIndex:5},{value:"setOptions",paraId:13,tocIndex:5},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:13,tocIndex:5},{value:"Configuration",paraId:14,tocIndex:5},{value:"(newOption: Partial<Option>) => void",paraId:13,tocIndex:5},{value:"getOptions",paraId:13,tocIndex:5},{value:"Get current",paraId:13,tocIndex:5},{value:"Configuration",paraId:15,tocIndex:5},{value:"() => Option",paraId:13,tocIndex:5},{value:"show",paraId:13,tocIndex:5},{value:"display component",paraId:13,tocIndex:5},{value:"() => void",paraId:13,tocIndex:5},{value:"hide",paraId:13,tocIndex:5},{value:"Hidden component",paraId:13,tocIndex:5},{value:"() => void",paraId:13,tocIndex:5},{value:"getContainer",paraId:13,tocIndex:5},{value:"Get the information corresponding to the current control",paraId:13,tocIndex:5},{value:"DOM",paraId:13,tocIndex:5},{value:"container",paraId:13,tocIndex:5},{value:"() => HTMLElement",paraId:13,tocIndex:5},{value:"Name",paraId:16,tocIndex:6},{value:"Description",paraId:16,tocIndex:6},{value:"Type",paraId:16,tocIndex:6},{value:"add",paraId:16,tocIndex:6},{value:"Event when component is added",paraId:16,tocIndex:6},{value:"(this) => void",paraId:16,tocIndex:6},{value:"remove",paraId:16,tocIndex:6},{value:"Event when component is removed",paraId:16,tocIndex:6},{value:"(this) => void",paraId:16,tocIndex:6},{value:"show",paraId:16,tocIndex:6},{value:"Events when the component is displayed",paraId:16,tocIndex:6},{value:"(this) => void",paraId:16,tocIndex:6},{value:"hide",paraId:16,tocIndex:6},{value:"Event when component is hidden",paraId:16,tocIndex:6},{value:"(this) => void",paraId:16,tocIndex:6},{value:"name",paraId:17,tocIndex:6},{value:"illustrate",paraId:17,tocIndex:6},{value:"type",paraId:17,tocIndex:6},{value:"popperShow",paraId:17,tocIndex:6},{value:"Callback when bubble is displayed",paraId:17,tocIndex:6},{value:"(this) => void",paraId:17,tocIndex:6},{value:"popperHide",paraId:17,tocIndex:6},{value:"Callback when bubble is hidden",paraId:17,tocIndex:6},{value:"(this) => void",paraId:17,tocIndex:6},{value:"name",paraId:18,tocIndex:6},{value:"illustrate",paraId:18,tocIndex:6},{value:"type",paraId:18,tocIndex:6},{value:"selectChange",paraId:18,tocIndex:6},{value:"Fires when the selected value changes",paraId:18,tocIndex:6},{value:"`(string",paraId:18,tocIndex:6},{value:"string[]) => void`",paraId:18,tocIndex:6}]},41568:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(14710);const t=[{value:"A control used to display logo images on the map, and supports click-to-jump hyperlinks.",paraId:0},{value:"Currently, L7 will display this control in the lower left corner of the map by default. If it needs to be hidden, it can be configured when the Scene is instantiated:",paraId:1,tocIndex:0},{value:"import { Scene } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n\n  // Close the default L7 Logo\n  logoVisible: false,\n});\n",paraId:2,tocIndex:0},{value:"Example",paraId:3},{value:"import { Scene, Logo } from '@antv/l7';\n\nconst scene = new Scene({\n  //...\n  logoVisible: false,\n});\n\nscene.on('loaded', () => {\n  const logo = new Logo({\n    // 图片 url\n    img: 'https://gw.alipayobjects.com/mdn/rms_816329/afts/img/A*GRb1TKp4HcMAAAAAAAAAAAAAARQnAQ',\n    // 跳转地址\n    href: 'https://l7.antv.antgroup.com',\n  });\n  scene.addControl(logo);\n});\n",paraId:4},{value:"name",paraId:5,tocIndex:2},{value:"illustrate",paraId:5,tocIndex:2},{value:"type",paraId:5,tocIndex:2},{value:"img",paraId:5,tocIndex:2},{value:"Logo display image url",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"href",paraId:5,tocIndex:2},{value:"Click the logo to jump to the hyperlink. If it is not uploaded, the image will be displayed. Clicking will not jump.",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"name",paraId:6,tocIndex:2},{value:"illustrate",paraId:6,tocIndex:2},{value:"type",paraId:6,tocIndex:2},{value:"position",paraId:6,tocIndex:2},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:6,tocIndex:2},{value:"control slot",paraId:7,tocIndex:2},{value:"Position",paraId:8,tocIndex:2},{value:"className",paraId:6,tocIndex:2},{value:"Custom style name",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"style",paraId:6,tocIndex:2},{value:"Custom style",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:9,tocIndex:3},{value:"name",paraId:10,tocIndex:4},{value:"illustrate",paraId:10,tocIndex:4},{value:"type",paraId:10,tocIndex:4},{value:"setOptions",paraId:10,tocIndex:4},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:10,tocIndex:4},{value:"Configuration",paraId:11,tocIndex:4},{value:"(newOption: Partial<Option>) => void",paraId:10,tocIndex:4},{value:"getOptions",paraId:10,tocIndex:4},{value:"Get current",paraId:10,tocIndex:4},{value:"Configuration",paraId:12,tocIndex:4},{value:"() => Option",paraId:10,tocIndex:4},{value:"show",paraId:10,tocIndex:4},{value:"display component",paraId:10,tocIndex:4},{value:"() => void",paraId:10,tocIndex:4},{value:"hide",paraId:10,tocIndex:4},{value:"Hidden component",paraId:10,tocIndex:4},{value:"() => void",paraId:10,tocIndex:4},{value:"getContainer",paraId:10,tocIndex:4},{value:"Get the information corresponding to the current control",paraId:10,tocIndex:4},{value:"DOM",paraId:10,tocIndex:4},{value:"container",paraId:10,tocIndex:4},{value:"() => HTMLElement",paraId:10,tocIndex:4},{value:"Name",paraId:13,tocIndex:5},{value:"Description",paraId:13,tocIndex:5},{value:"Type",paraId:13,tocIndex:5},{value:"add",paraId:13,tocIndex:5},{value:"Event when component is added",paraId:13,tocIndex:5},{value:"(this) => void",paraId:13,tocIndex:5},{value:"remove",paraId:13,tocIndex:5},{value:"Event when component is removed",paraId:13,tocIndex:5},{value:"(this) => void",paraId:13,tocIndex:5},{value:"show",paraId:13,tocIndex:5},{value:"Events when the component is displayed",paraId:13,tocIndex:5},{value:"(this) => void",paraId:13,tocIndex:5},{value:"hide",paraId:13,tocIndex:5},{value:"Event when component is hidden",paraId:13,tocIndex:5},{value:"(this) => void",paraId:13,tocIndex:5}]},18136:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(24457);const t=[{value:"This control is used to switch the theme style of the map basemap.",paraId:0},{value:"MapTheme will display the corresponding default theme options by default based on the current map basemap type (such as Mapbox, GaodeMapV2), and you can also pass in custom theme options.",paraId:1,tocIndex:0},{value:"Example",paraId:2},{value:"import { Scene, MapTheme } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const mapTheme = new MapTheme({});\n  scene.addControl(mapTheme);\n});\n",paraId:3},{value:"name",paraId:4,tocIndex:2},{value:"illustrate",paraId:4,tocIndex:2},{value:"type",paraId:4,tocIndex:2},{value:"options",paraId:4,tocIndex:2},{value:"User-defined map theme options, the type of each option is visible",paraId:4,tocIndex:2},{value:"IControlOptionItem",paraId:5,tocIndex:2},{value:"Array<IControlOptionItem>",paraId:4,tocIndex:2},{value:"export type IControlOptionItem = {\n  //The text corresponding to the theme option\n  text: string;\n  //The theme option corresponds to the key value of the map theme style\n  value: string;\n  //Theme options correspond to the pictures displayed\n  img?: string;\n};\n",paraId:6,tocIndex:3},{value:"名称",paraId:7,tocIndex:3},{value:"说明",paraId:7,tocIndex:3},{value:"类型",paraId:7,tocIndex:3},{value:"popperPlacement",paraId:7,tocIndex:3},{value:"气泡相对于按钮的位置",paraId:7,tocIndex:3},{value:"PopperPlacement",paraId:8,tocIndex:3},{value:"popperTrigger",paraId:7,tocIndex:3},{value:"气泡弹出的触发方式",paraId:7,tocIndex:3},{value:"'click'",paraId:7,tocIndex:3},{value:" | ",paraId:7,tocIndex:3},{value:"'hover'",paraId:7,tocIndex:3},{value:"popperClassName",paraId:7,tocIndex:3},{value:"气泡容器自定义样式名",paraId:7,tocIndex:3},{value:"string",paraId:7,tocIndex:3},{value:"export type PopperPlacement =\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'left-start'\n  | 'left'\n  | 'left-end'\n  | 'bottom-start'\n  | 'bottom'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end';\n",paraId:9,tocIndex:4},{value:"name",paraId:10,tocIndex:4},{value:"illustrate",paraId:10,tocIndex:4},{value:"type",paraId:10,tocIndex:4},{value:"btnIcon",paraId:10,tocIndex:4},{value:"button icon",paraId:10,tocIndex:4},{value:"HTMLElement",paraId:10,tocIndex:4},{value:"|",paraId:10,tocIndex:4},{value:"SVGElement",paraId:10,tocIndex:4},{value:"btnText",paraId:10,tocIndex:4},{value:"Button content text",paraId:10,tocIndex:4},{value:"string",paraId:10,tocIndex:4},{value:"title",paraId:10,tocIndex:4},{value:"button",paraId:10,tocIndex:4},{value:"title",paraId:10,tocIndex:4},{value:"Attributes",paraId:10,tocIndex:4},{value:"string",paraId:10,tocIndex:4},{value:"vertical",paraId:10,tocIndex:4},{value:"When btnIcon has a value, whether the icons and text in the button are arranged vertically",paraId:10,tocIndex:4},{value:"boolean",paraId:10,tocIndex:4},{value:"name",paraId:11,tocIndex:4},{value:"illustrate",paraId:11,tocIndex:4},{value:"type",paraId:11,tocIndex:4},{value:"position",paraId:11,tocIndex:4},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:11,tocIndex:4},{value:"control slot",paraId:12,tocIndex:4},{value:"Position",paraId:13,tocIndex:4},{value:"className",paraId:11,tocIndex:4},{value:"Custom style name",paraId:11,tocIndex:4},{value:"string",paraId:11,tocIndex:4},{value:"style",paraId:11,tocIndex:4},{value:"Custom style",paraId:11,tocIndex:4},{value:"string",paraId:11,tocIndex:4},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:14,tocIndex:5},{value:"name",paraId:15,tocIndex:6},{value:"illustrate",paraId:15,tocIndex:6},{value:"type",paraId:15,tocIndex:6},{value:"setOptions",paraId:15,tocIndex:6},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:15,tocIndex:6},{value:"Configuration",paraId:16,tocIndex:6},{value:"(newOption: Partial<Option>) => void",paraId:15,tocIndex:6},{value:"getOptions",paraId:15,tocIndex:6},{value:"Get current",paraId:15,tocIndex:6},{value:"Configuration",paraId:17,tocIndex:6},{value:"() => Option",paraId:15,tocIndex:6},{value:"show",paraId:15,tocIndex:6},{value:"display component",paraId:15,tocIndex:6},{value:"() => void",paraId:15,tocIndex:6},{value:"hide",paraId:15,tocIndex:6},{value:"Hidden component",paraId:15,tocIndex:6},{value:"() => void",paraId:15,tocIndex:6},{value:"getContainer",paraId:15,tocIndex:6},{value:"Get the information corresponding to the current control",paraId:15,tocIndex:6},{value:"DOM",paraId:15,tocIndex:6},{value:"container",paraId:15,tocIndex:6},{value:"() => HTMLElement",paraId:15,tocIndex:6},{value:"Name",paraId:18,tocIndex:7},{value:"Description",paraId:18,tocIndex:7},{value:"Type",paraId:18,tocIndex:7},{value:"add",paraId:18,tocIndex:7},{value:"Event when component is added",paraId:18,tocIndex:7},{value:"(this) => void",paraId:18,tocIndex:7},{value:"remove",paraId:18,tocIndex:7},{value:"Event when component is removed",paraId:18,tocIndex:7},{value:"(this) => void",paraId:18,tocIndex:7},{value:"show",paraId:18,tocIndex:7},{value:"Events when the component is displayed",paraId:18,tocIndex:7},{value:"(this) => void",paraId:18,tocIndex:7},{value:"hide",paraId:18,tocIndex:7},{value:"Event when component is hidden",paraId:18,tocIndex:7},{value:"(this) => void",paraId:18,tocIndex:7},{value:"name",paraId:19,tocIndex:7},{value:"illustrate",paraId:19,tocIndex:7},{value:"type",paraId:19,tocIndex:7},{value:"popperShow",paraId:19,tocIndex:7},{value:"Callback when bubble is displayed",paraId:19,tocIndex:7},{value:"(this) => void",paraId:19,tocIndex:7},{value:"popperHide",paraId:19,tocIndex:7},{value:"Callback when bubble is hidden",paraId:19,tocIndex:7},{value:"(this) => void",paraId:19,tocIndex:7},{value:"name",paraId:20,tocIndex:7},{value:"illustrate",paraId:20,tocIndex:7},{value:"type",paraId:20,tocIndex:7},{value:"selectChange",paraId:20,tocIndex:7},{value:"Fires when the selected value changes",paraId:20,tocIndex:7},{value:"`(string",paraId:20,tocIndex:7},{value:"string[]) => void`",paraId:20,tocIndex:7}]},22999:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(70668);const t=[{value:"Marker 地图标注 目前只支持 2D dom 标注",paraId:0},{value:"Marker",paraId:1,tocIndex:0},{value:"const Marker = new L7.Marker(option)",paraId:2,tocIndex:0},{value:"color        ",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"设置默认 marker 的颜色",paraId:3,tocIndex:1},{value:"element    ",paraId:3,tocIndex:1},{value:"DOM|string",paraId:3,tocIndex:1},{value:"    自定义 marker DOM 节点，可以是 dom 实例，也可以是 dom id",paraId:3,tocIndex:1},{value:"anchor     ",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"  锚点位置   支持 center, top, top-left, top-right, bottom, bottom-left,bottom-                        right,left, right",paraId:3,tocIndex:1},{value:"offsets    ",paraId:3,tocIndex:1},{value:"Array",paraId:3,tocIndex:1},{value:"  偏移量  [ 0, 0 ] 分别表示 X, Y 的偏移量",paraId:3,tocIndex:1},{value:"scene.addMarker(marker);\n",paraId:4,tocIndex:2},{value:"设置 marker 经纬度位置",paraId:5,tocIndex:4},{value:"移除 marker",paraId:6,tocIndex:5},{value:"获取 marker dom Element",paraId:7,tocIndex:6},{value:"获取 marker 经纬度坐标",paraId:8,tocIndex:7},{value:"开启或者关闭 marker 弹出框",paraId:9,tocIndex:8},{value:"为 marker 设置 popup",paraId:10,tocIndex:9},{value:"获取 marker 弹出框",paraId:11,tocIndex:10},{value:"const marker = new L7.Marker({color:'blue'})",paraId:12,tocIndex:12},{value:"var el = document.createElement('label');\nel.className = 'labelclass';\nel.textContent = data[i].v;\nel.style.background = getColor(data[i].v);\nnew L7.Marker({\n  element: el,\n}).setLnglat([data[i].x * 1, data[i].y]);\n",paraId:13,tocIndex:13},{value:"var popup = new L7.Popup({\n  anchor: 'left',\n}).setText(item.name);\n\nnew L7.Marker({\n  element: el,\n})\n  .setLnglat(item.coordinates)\n  .setPopup(popup);\n",paraId:14,tocIndex:14},{value:"demo1",paraId:15}]},52448:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(96108);const t=[{value:"MarkerLayer is an upgraded version of Marker. Marker is an independent map annotation, while MarkerLayer manages a large amount of Marker data in a unified manner.",paraId:0},{value:"technical differences",paraId:1},{value:"Marker DOM draws a map element",paraId:2},{value:"MarkerLayer manages multiple DomMarkers in a unified manner",paraId:2},{value:"PointLayer draws elements via WebGL.",paraId:2},{value:"Functional differences",paraId:3},{value:"The MarkerLayer element is highly customizable, and any combination of HTML+CSS can be drawn on the map.",paraId:4},{value:"PointLayer is relatively weak in customization and has relatively high implementation costs. It has the advantage of being able to draw a large amount of data and has relatively good performance.",paraId:4},{value:"import { Marker, MarkerLayer } from '@antv/l7';\n",paraId:5,tocIndex:0},{value:"const markerLayer = new MarkerLayer(option);\n\n//Call the addMarker method to add multiple Markers to the Layer\n\nscene.addMarkerLayer(markerLayer);\n",paraId:6,tocIndex:1},{value:"cluster aggregation",paraId:7,tocIndex:2},{value:"boolean",paraId:7,tocIndex:2},{value:"default",paraId:7,tocIndex:2},{value:"false",paraId:7,tocIndex:2},{value:"clusterOption aggregation configuration",paraId:8,tocIndex:2},{value:"field ",paraId:9,tocIndex:2},{value:"string",paraId:9,tocIndex:2},{value:"Aggregate statistical fields",paraId:9,tocIndex:2},{value:"method ",paraId:9,tocIndex:2},{value:"sum| max| min| mean",paraId:9,tocIndex:2},{value:"radius aggregate radius number default 40",paraId:9,tocIndex:2},{value:"minZoom: minimum aggregate zoom level number default 0",paraId:9,tocIndex:2},{value:"maxZoom: maximum aggregate zoom level number default 16",paraId:9,tocIndex:2},{value:"element ",paraId:9,tocIndex:2},{value:"function",paraId:9,tocIndex:2},{value:"Set the style of the aggregate Marker through the callback function and return the dom element\nThe callback function contains the following parameters\n",paraId:9,tocIndex:2},{value:"point_count defaults to the number of aggregated elements",paraId:10,tocIndex:2},{value:"clusterData ",paraId:10,tocIndex:2},{value:"Array",paraId:10,tocIndex:2},{value:"Aggregate raw data of nodes",paraId:10,tocIndex:2},{value:"point_sum aggregate sum calculated based on field and method",paraId:10,tocIndex:2},{value:"point_max aggregate maximum value calculated based on field and method",paraId:10,tocIndex:2},{value:"point_min aggregate minimum value calculated based on field and method",paraId:10,tocIndex:2},{value:"point_mean aggregated mean calculated based on field and method",paraId:10,tocIndex:2},{value:"parameter",paraId:11,tocIndex:4},{value:"marker ",paraId:12,tocIndex:4},{value:"IMarker",paraId:12,tocIndex:4},{value:"Markers that need to be added",paraId:12,tocIndex:4},{value:"Add Marker",paraId:13,tocIndex:4},{value:"Instantiate a Marker through the Marker object",paraId:14,tocIndex:4},{value:"const marker = new Marker().setLnglat(); // To add a Marker, you must set the longitude and latitude before adding it\nmarkerLayer.addMarker(marker);\n",paraId:15,tocIndex:4},{value:"Add attribute information to Marker,",paraId:16,tocIndex:4},{value:"If the aggregation parameter sets the statistics configuration item",paraId:17,tocIndex:4},{value:"field| method",paraId:17,tocIndex:4},{value:"Need to add attribute information to Marker",paraId:17,tocIndex:4},{value:"extData via Marker",paraId:18,tocIndex:4},{value:"Configuration items",paraId:19,tocIndex:4},{value:"Set Marker property information",paraId:18,tocIndex:4},{value:"const marker = new Marker({\n  extData: nodes.features[i].properties,\n}).setLnglat({\n  lng: coordinates[0],\n  lat: coordinates[1],\n});\n",paraId:20,tocIndex:4},{value:"Remove Marker from MarkerLayer",paraId:21,tocIndex:5},{value:"Get all Markers in MarkerLayer",paraId:22,tocIndex:6},{value:"Clear all markers",paraId:23,tocIndex:7},{value:"Add MarkerLayer",paraId:24,tocIndex:10},{value:"scene.addMarkerLayer(layer);\n",paraId:25,tocIndex:10},{value:"Remove MarkerLayer",paraId:26,tocIndex:11},{value:"scene.removeMarkerLayer(layer);\n",paraId:27,tocIndex:11},{value:"markerLayer ",paraId:28},{value:"markerLayer aggregation",paraId:29}]},44777:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(90824);const t=[{value:"Used to display the longitude and latitude corresponding to the current cursor on the map in real time.",paraId:0},{value:"Example",paraId:1},{value:"import { Scene, MouseLocation } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const mouseLocation = new MouseLocation({\n    transform: (position) => {\n      return position;\n    },\n  });\n  scene.addControl(mouseLocation);\n});\n",paraId:2},{value:"name",paraId:3,tocIndex:1},{value:"illustrate",paraId:3,tocIndex:1},{value:"type",paraId:3,tocIndex:1},{value:"transform",paraId:3,tocIndex:1},{value:"Callback function to convert the longitude and latitude of the cursor",paraId:3,tocIndex:1},{value:"(position: [number, number]) => [number, number]",paraId:3,tocIndex:1},{value:"name",paraId:4,tocIndex:1},{value:"illustrate",paraId:4,tocIndex:1},{value:"type",paraId:4,tocIndex:1},{value:"position",paraId:4,tocIndex:1},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:4,tocIndex:1},{value:"control slot",paraId:5,tocIndex:1},{value:"Position",paraId:6,tocIndex:1},{value:"className",paraId:4,tocIndex:1},{value:"Custom style name",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"style",paraId:4,tocIndex:1},{value:"Custom style",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:7,tocIndex:2},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"setOptions",paraId:8,tocIndex:3},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:8,tocIndex:3},{value:"Configuration",paraId:9,tocIndex:3},{value:"(newOption: Partial<Option>) => void",paraId:8,tocIndex:3},{value:"getOptions",paraId:8,tocIndex:3},{value:"Get current",paraId:8,tocIndex:3},{value:"Configuration",paraId:10,tocIndex:3},{value:"() => Option",paraId:8,tocIndex:3},{value:"show",paraId:8,tocIndex:3},{value:"display component",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"hide",paraId:8,tocIndex:3},{value:"Hidden component",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"getContainer",paraId:8,tocIndex:3},{value:"Get the information corresponding to the current control",paraId:8,tocIndex:3},{value:"DOM",paraId:8,tocIndex:3},{value:"container",paraId:8,tocIndex:3},{value:"() => HTMLElement",paraId:8,tocIndex:3},{value:"name",paraId:11,tocIndex:4},{value:"illustrate",paraId:11,tocIndex:4},{value:"type",paraId:11,tocIndex:4},{value:"locationChange",paraId:11,tocIndex:4},{value:"Triggered when the longitude and latitude of the cursor changes",paraId:11,tocIndex:4},{value:"(position: [number, number]) => void",paraId:11,tocIndex:4},{value:"Name",paraId:12,tocIndex:4},{value:"Description",paraId:12,tocIndex:4},{value:"Type",paraId:12,tocIndex:4},{value:"add",paraId:12,tocIndex:4},{value:"Event when component is added",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"remove",paraId:12,tocIndex:4},{value:"Event when component is removed",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"show",paraId:12,tocIndex:4},{value:"Events when the component is displayed",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"hide",paraId:12,tocIndex:4},{value:"Event when component is hidden",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4}]},69823:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(80478);const t=[{value:"Popup is a bubble used to specify the latitude and longitude location on the map and display customized content.",paraId:0},{value:"The anchor point position of Popup is expressed by longitude and latitude. When the map is zoomed/panned, Popup will automatically calculate the coordinates relative to the current map and automatically shift. In other words, if a developer needs to",paraId:1,tocIndex:0},{value:"Specify latitude and longitude location",paraId:1,tocIndex:0},{value:"To display information bubbles, you can consider using the Popup component to achieve the corresponding effect.",paraId:1,tocIndex:0},{value:"Developers can customize the main display content of Popup:",paraId:2,tocIndex:0},{value:"Plain text can pass",paraId:3,tocIndex:0},{value:"text",paraId:3,tocIndex:0},{value:"configure or",paraId:3,tocIndex:0},{value:"setText",paraId:3,tocIndex:0},{value:"Method controls the Popup's display text.",paraId:3,tocIndex:0},{value:"Custom DOM can be created via",paraId:3,tocIndex:0},{value:"html",paraId:3,tocIndex:0},{value:"configure or",paraId:3,tocIndex:0},{value:"setHTML",paraId:3,tocIndex:0},{value:"Method supports passing in HTML strings or DOM elements or arrays to control the display content of the Popup.",paraId:3,tocIndex:0},{value:"Example",paraId:4},{value:"import { Scene, Popup } from '@antv/l7';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMapV2({\n    // ...\n  }),\n});\n\nscene.on('loaded', () => {\n  const popup = new Popup({\n    //Initial anchor point latitude and longitude\n    lngLat: {\n      lng: 120,\n      lat: 30,\n    },\n    // Popup title\n    title: 'Popup Title',\n    // Popup content\n    html: 'Popup Content',\n  });\n  scene.addPopup(popup);\n\n  //Update Popup anchor point latitude and longitude\n  popup.setLngLat({\n    lng: 130,\n    lat: 40,\n  });\n\n  //Update Popup content\n  popup.setHTML('New Popup Content');\n});\n",paraId:5},{value:"name",paraId:6,tocIndex:2},{value:"illustrate",paraId:6,tocIndex:2},{value:"type",paraId:6,tocIndex:2},{value:"default value",paraId:6,tocIndex:2},{value:"lngLat",paraId:6,tocIndex:2},{value:"The latitude and longitude where the Popup is located",paraId:6,tocIndex:2},{value:"{ lng: number; lat: number }",paraId:6,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"text",paraId:6,tocIndex:2},{value:"Text content displayed by Popup content",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"html",paraId:6,tocIndex:2},{value:"Custom HTML for Popup content display, you can pass HTML string, DOM object or array",paraId:6,tocIndex:2},{value:"ElementType",paraId:7,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"title",paraId:6,tocIndex:2},{value:"Custom HTML displayed in the Popup title, you can pass HTML string, DOM object or array",paraId:6,tocIndex:2},{value:"ElementType",paraId:8,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"closeOnClick",paraId:6,tocIndex:2},{value:"Whether to close the current Popup when clicking on the map area",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"false",paraId:6,tocIndex:2},{value:"closeOnEsc",paraId:6,tocIndex:2},{value:"Whether to close the current Popup when clicking the Esc key",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"false",paraId:6,tocIndex:2},{value:"maxWidth",paraId:6,tocIndex:2},{value:"Popup's maximum width",paraId:6,tocIndex:2},{value:"string",paraId:6,tocIndex:2},{value:"240px",paraId:6,tocIndex:2},{value:"anchor",paraId:6,tocIndex:2},{value:"The position of the Popup arrow can control the placement of the Popup relative to the latitude and longitude points.",paraId:6,tocIndex:2},{value:"AnchorType",paraId:9,tocIndex:2},{value:"'bottom'",paraId:6,tocIndex:2},{value:"offsets",paraId:6,tocIndex:2},{value:"Popup offset relative to anchor point",paraId:6,tocIndex:2},{value:"[number, number]",paraId:6,tocIndex:2},{value:"[0, 0]",paraId:6,tocIndex:2},{value:"autoPan",paraId:6,tocIndex:2},{value:"When the Popup is displayed or its location changes, whether the map should automatically pan to the location of the Popup",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"false",paraId:6,tocIndex:2},{value:"autoClose",paraId:6,tocIndex:2},{value:"Whether to automatically close the current bubble when there are other Popups displayed",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"true",paraId:6,tocIndex:2},{value:"followCursor",paraId:6,tocIndex:2},{value:"Whether Popup follows the cursor movement, if set to",paraId:6,tocIndex:2},{value:"true",paraId:6,tocIndex:2},{value:",but",paraId:6,tocIndex:2},{value:"lngLat",paraId:6,tocIndex:2},{value:"Invalid configuration",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"false",paraId:6,tocIndex:2},{value:"closeButton",paraId:6,tocIndex:2},{value:"Whether to display the close Popup icon",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"true",paraId:6,tocIndex:2},{value:"closeButtonOffsets",paraId:6,tocIndex:2},{value:"Turn off relative offset of Popup icons",paraId:6,tocIndex:2},{value:"[number, number]",paraId:6,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"stopPropagation",paraId:6,tocIndex:2},{value:"Whether mouse events on Popup should be prevented from bubbling",paraId:6,tocIndex:2},{value:"boolean",paraId:6,tocIndex:2},{value:"true",paraId:6,tocIndex:2},{value:"type ElementType = HTMLElement | HTMLElement[] | DocumentFragment | Text | string;\n",paraId:10,tocIndex:3},{value:"type AnchorType =\n  | 'center'\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'right';\n",paraId:11,tocIndex:4},{value:"name",paraId:12,tocIndex:5},{value:"illustrate",paraId:12,tocIndex:5},{value:"type",paraId:12,tocIndex:5},{value:"getOptions",paraId:12,tocIndex:5},{value:"Get the current Popup configuration",paraId:12,tocIndex:5},{value:"() => IPopupOption",paraId:12,tocIndex:5},{value:"setOptions",paraId:12,tocIndex:5},{value:"Update current Popup configuration",paraId:12,tocIndex:5},{value:"(newOption: Partial<IPopupOption>) => this",paraId:12,tocIndex:5},{value:"show",paraId:12,tocIndex:5},{value:"Show Popup",paraId:12,tocIndex:5},{value:"() => this",paraId:12,tocIndex:5},{value:"hide",paraId:12,tocIndex:5},{value:"Hide Popup",paraId:12,tocIndex:5},{value:"() => this",paraId:12,tocIndex:5},{value:"getIsShow",paraId:12,tocIndex:5},{value:"Determine whether the current bubble is displayed",paraId:12,tocIndex:5},{value:"() => boolean",paraId:12,tocIndex:5},{value:"setTitle",paraId:12,tocIndex:5},{value:"Set the HTML displayed by the Popup title",paraId:12,tocIndex:5},{value:"(title: ElementType) => this",paraId:12,tocIndex:5},{value:"setHTML",paraId:12,tocIndex:5},{value:"Set the HTML for Popup content display",paraId:12,tocIndex:5},{value:"(html: ElementType) => this",paraId:12,tocIndex:5},{value:"setText",paraId:12,tocIndex:5},{value:"Set the text displayed by Popup content",paraId:12,tocIndex:5},{value:"(text: string) => this",paraId:12,tocIndex:5},{value:"setLngLat",paraId:12,tocIndex:5},{value:"Set the latitude and longitude of the Popup anchor point",paraId:12,tocIndex:5},{value:"(lngLat: { lng: number; lat: number } | [number, number]) => this",paraId:12,tocIndex:5},{value:"panToPopup",paraId:12,tocIndex:5},{value:"Pan the map to the current Popup location",paraId:12,tocIndex:5},{value:"() => this",paraId:12,tocIndex:5},{value:"name",paraId:13,tocIndex:6},{value:"illustrate",paraId:13,tocIndex:6},{value:"type",paraId:13,tocIndex:6},{value:"open",paraId:13,tocIndex:6},{value:"Fired when Popup is added",paraId:13,tocIndex:6},{value:"() => void",paraId:13,tocIndex:6},{value:"close",paraId:13,tocIndex:6},{value:"Triggered when Popup is removed",paraId:13,tocIndex:6},{value:"() => void",paraId:13,tocIndex:6},{value:"show",paraId:13,tocIndex:6},{value:"Triggered when Popup is displayed",paraId:13,tocIndex:6},{value:"() => void",paraId:13,tocIndex:6},{value:"hide",paraId:13,tocIndex:6},{value:"Triggered when Popup is hidden",paraId:13,tocIndex:6},{value:"() => void",paraId:13,tocIndex:6}]},85754:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(47596);const t=[{value:"This control displays the ratio of distances on the map to the corresponding distances on the ground.",paraId:0},{value:"Example",paraId:1},{value:"import { Scene, Scale } from '@antv/l7';\n\nconst scene = new Scene({\n  //...\n});\n\nscene.on('loaded', () => {\n  const scale = new Scale({\n    zoomInTitle: '放大',\n    zoomOutTitle: '缩小',\n  });\n  scene.addControl(scale);\n});\n",paraId:2},{value:"name",paraId:3,tocIndex:1},{value:"illustrate",paraId:3,tocIndex:1},{value:"type",paraId:3,tocIndex:1},{value:"default value",paraId:3,tocIndex:1},{value:"lockWidth",paraId:3,tocIndex:1},{value:"Whether to fix the container width",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"true",paraId:3,tocIndex:1},{value:"maxWidth",paraId:3,tocIndex:1},{value:"The maximum width of the component's container",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"100",paraId:3,tocIndex:1},{value:"metric",paraId:3,tocIndex:1},{value:"exhibit",paraId:3,tocIndex:1},{value:"km",paraId:3,tocIndex:1},{value:"format scale",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"true",paraId:3,tocIndex:1},{value:"imperial",paraId:3,tocIndex:1},{value:"exhibit",paraId:3,tocIndex:1},{value:"mile",paraId:3,tocIndex:1},{value:"format scale",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"updateWhenIdle",paraId:3,tocIndex:1},{value:"Whether to only update the scale after dragging and zooming are complete",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"name",paraId:4,tocIndex:1},{value:"illustrate",paraId:4,tocIndex:1},{value:"type",paraId:4,tocIndex:1},{value:"position",paraId:4,tocIndex:1},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:4,tocIndex:1},{value:"control slot",paraId:5,tocIndex:1},{value:"Position",paraId:6,tocIndex:1},{value:"className",paraId:4,tocIndex:1},{value:"Custom style name",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"style",paraId:4,tocIndex:1},{value:"Custom style",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:7,tocIndex:2},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"setOptions",paraId:8,tocIndex:3},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:8,tocIndex:3},{value:"Configuration",paraId:9,tocIndex:3},{value:"(newOption: Partial<Option>) => void",paraId:8,tocIndex:3},{value:"getOptions",paraId:8,tocIndex:3},{value:"Get current",paraId:8,tocIndex:3},{value:"Configuration",paraId:10,tocIndex:3},{value:"() => Option",paraId:8,tocIndex:3},{value:"show",paraId:8,tocIndex:3},{value:"display component",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"hide",paraId:8,tocIndex:3},{value:"Hidden component",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"getContainer",paraId:8,tocIndex:3},{value:"Get the information corresponding to the current control",paraId:8,tocIndex:3},{value:"DOM",paraId:8,tocIndex:3},{value:"container",paraId:8,tocIndex:3},{value:"() => HTMLElement",paraId:8,tocIndex:3},{value:"Name",paraId:11,tocIndex:4},{value:"Description",paraId:11,tocIndex:4},{value:"Type",paraId:11,tocIndex:4},{value:"add",paraId:11,tocIndex:4},{value:"Event when component is added",paraId:11,tocIndex:4},{value:"(this) => void",paraId:11,tocIndex:4},{value:"remove",paraId:11,tocIndex:4},{value:"Event when component is removed",paraId:11,tocIndex:4},{value:"(this) => void",paraId:11,tocIndex:4},{value:"show",paraId:11,tocIndex:4},{value:"Events when the component is displayed",paraId:11,tocIndex:4},{value:"(this) => void",paraId:11,tocIndex:4},{value:"hide",paraId:11,tocIndex:4},{value:"Event when component is hidden",paraId:11,tocIndex:4},{value:"(this) => void",paraId:11,tocIndex:4}]},8376:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(58073);const t=[{value:"Swipe is a control that add a split screen to compare two map overlays.",paraId:0},{value:"Layers can be added to left (top) or right (bottom) side of the map. Layers that are not added are displayed on both sides.",paraId:1,tocIndex:0},{value:"Example",paraId:2},{value:"import { Scene, Swipe } from '@antv/l7';\n\nconst scene = new Scene({\n  // ...\n});\n\nscene.on('loaded', () => {\n  const swipe = new Swipe({\n    orientation: 'vertical',\n    ratio: 0.5,\n    layers: [],\n    rightLayers: [],\n  });\n  scene.addControl(swipe);\n});\n",paraId:3},{value:"name",paraId:4,tocIndex:2},{value:"illustrate",paraId:4,tocIndex:2},{value:"type",paraId:4,tocIndex:2},{value:"orientation",paraId:4,tocIndex:2},{value:"vertical or horizontal, default vertical",paraId:4,tocIndex:2},{value:"'vertical'｜'horizontal'",paraId:4,tocIndex:2},{value:"ratio",paraId:4,tocIndex:2},{value:"swipe [0,1], default 0.5",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:"layers",paraId:4,tocIndex:2},{value:"layers to swipe",paraId:4,tocIndex:2},{value:"ILayer[]",paraId:4,tocIndex:2},{value:"rightLayers",paraId:4,tocIndex:2},{value:"layers to swipe on right side",paraId:4,tocIndex:2},{value:"ILayer[]",paraId:4,tocIndex:2},{value:"className",paraId:4,tocIndex:2},{value:"control class name",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:"style",paraId:4,tocIndex:2},{value:"control style",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:"name",paraId:5,tocIndex:3},{value:"illustrate",paraId:5,tocIndex:3},{value:"type",paraId:5,tocIndex:3},{value:"setOptions",paraId:5,tocIndex:3},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:5,tocIndex:3},{value:"Configuration",paraId:6,tocIndex:3},{value:"(newOption: Partial<Option>) => void",paraId:5,tocIndex:3},{value:"getOptions",paraId:5,tocIndex:3},{value:"Get current",paraId:5,tocIndex:3},{value:"Configuration",paraId:7,tocIndex:3},{value:"() => Option",paraId:5,tocIndex:3},{value:"show",paraId:5,tocIndex:3},{value:"display component",paraId:5,tocIndex:3},{value:"() => void",paraId:5,tocIndex:3},{value:"hide",paraId:5,tocIndex:3},{value:"Hidden component",paraId:5,tocIndex:3},{value:"() => void",paraId:5,tocIndex:3},{value:"getContainer",paraId:5,tocIndex:3},{value:"Get the information corresponding to the current control",paraId:5,tocIndex:3},{value:"DOM",paraId:5,tocIndex:3},{value:"container",paraId:5,tocIndex:3},{value:"() => HTMLElement",paraId:5,tocIndex:3},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"addLayer",paraId:8,tocIndex:3},{value:"Add a layer to clip.",paraId:8,tocIndex:3},{value:"(layer: ILayer ｜ ILayer[], addRight: boolean = false) => void",paraId:8,tocIndex:3},{value:"removeLayer",paraId:8,tocIndex:3},{value:"Remove a layer to clip",paraId:8,tocIndex:3},{value:"(layer: ILayer ｜ ILayer[]) => void",paraId:8,tocIndex:3},{value:"removeLayers",paraId:8,tocIndex:3},{value:"Remove all layers",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"Name",paraId:9,tocIndex:4},{value:"Description",paraId:9,tocIndex:4},{value:"Type",paraId:9,tocIndex:4},{value:"add",paraId:9,tocIndex:4},{value:"Event when component is added",paraId:9,tocIndex:4},{value:"(this) => void",paraId:9,tocIndex:4},{value:"remove",paraId:9,tocIndex:4},{value:"Event when component is removed",paraId:9,tocIndex:4},{value:"(this) => void",paraId:9,tocIndex:4},{value:"show",paraId:9,tocIndex:4},{value:"Events when the component is displayed",paraId:9,tocIndex:4},{value:"(this) => void",paraId:9,tocIndex:4},{value:"hide",paraId:9,tocIndex:4},{value:"Event when component is hidden",paraId:9,tocIndex:4},{value:"(this) => void",paraId:9,tocIndex:4},{value:"name",paraId:10,tocIndex:4},{value:"illustrate",paraId:10,tocIndex:4},{value:"type",paraId:10,tocIndex:4},{value:"moving",paraId:10,tocIndex:4},{value:"swipe moving event",paraId:10,tocIndex:4},{value:"(data: {size: number[], ratio: number[]}) => void",paraId:10,tocIndex:4}]},18823:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(67037);const t=[{value:"Used to control the map",paraId:0},{value:"enlarge",paraId:0},{value:"and",paraId:0},{value:"zoom out",paraId:0},{value:"control, and when the map reaches the maximum or minimum zoom ratio, the corresponding zoom button is disabled.",paraId:0},{value:"Example",paraId:1},{value:"import { Scene, Zoom } from '@antv/l7';\n\nconst scene = new Scene({\n  //...\n});\n\nscene.on('loaded', () => {\n  const zoom = new Zoom({\n    zoomInTitle: '放大',\n    zoomOutTitle: '缩小',\n  });\n  scene.addControl(zoom);\n});\n",paraId:2},{value:"name",paraId:3,tocIndex:1},{value:"illustrate",paraId:3,tocIndex:1},{value:"type",paraId:3,tocIndex:1},{value:"zoomInText",paraId:3,tocIndex:1},{value:"Enlarge button display content",paraId:3,tocIndex:1},{value:"Element",paraId:3,tocIndex:1},{value:"|",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"zoomInTitle",paraId:3,tocIndex:1},{value:"magnify button",paraId:3,tocIndex:1},{value:"title",paraId:3,tocIndex:1},{value:"Attributes",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"zoomOutText",paraId:3,tocIndex:1},{value:"Reduce button display content",paraId:3,tocIndex:1},{value:"Element",paraId:3,tocIndex:1},{value:"|",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"zoomOutTitle",paraId:3,tocIndex:1},{value:"shrink button",paraId:3,tocIndex:1},{value:"title",paraId:3,tocIndex:1},{value:"Attributes",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"showZoom",paraId:3,tocIndex:1},{value:"Whether to display the current real-time zoom value of the map, rounded down by default",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"name",paraId:4,tocIndex:1},{value:"illustrate",paraId:4,tocIndex:1},{value:"type",paraId:4,tocIndex:1},{value:"position",paraId:4,tocIndex:1},{value:"The location and arrangement of controls when they are added to the map, see details",paraId:4,tocIndex:1},{value:"control slot",paraId:5,tocIndex:1},{value:"Position",paraId:6,tocIndex:1},{value:"className",paraId:4,tocIndex:1},{value:"Custom style name",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"style",paraId:4,tocIndex:1},{value:"Custom style",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:"export type Position =\n  | 'topleft' // ↖ upper left corner, vertical arrangement\n  | 'lefttop' // ↖ Upper left corner, arranged horizontally\n  | 'topright' // ↗ Upper right corner, vertical arrangement\n  | 'righttop' // ↗ Upper right corner, arranged horizontally\n  | 'bottomleft' // ↙ lower left corner, arranged vertically\n  | 'leftbottom' // ↙ lower left corner, arranged horizontally\n  | 'bottomright' // ↘ Lower right corner, arranged vertically\n  | 'rightbottom' // ↘ Lower right corner, arranged horizontally\n  | 'topcenter' // ↑ top center, arranged horizontally\n  | 'bottomcenter' // ↓ bottom center, arranged horizontally\n  | 'leftcenter' // ← left center, arranged vertically\n  | 'rightcenter' // → middle right, arranged vertically\n  | Element; // Pass in DOM as the container of the current control\n",paraId:7,tocIndex:2},{value:"name",paraId:8,tocIndex:3},{value:"illustrate",paraId:8,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"zoomIn",paraId:8,tocIndex:3},{value:"Enlarge map",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"zoomOut",paraId:8,tocIndex:3},{value:"Reduce basemap",paraId:8,tocIndex:3},{value:"() => void",paraId:8,tocIndex:3},{value:"name",paraId:9,tocIndex:3},{value:"illustrate",paraId:9,tocIndex:3},{value:"type",paraId:9,tocIndex:3},{value:"setOptions",paraId:9,tocIndex:3},{value:"Update configuration, parameters need to refer to the corresponding component",paraId:9,tocIndex:3},{value:"Configuration",paraId:10,tocIndex:3},{value:"(newOption: Partial<Option>) => void",paraId:9,tocIndex:3},{value:"getOptions",paraId:9,tocIndex:3},{value:"Get current",paraId:9,tocIndex:3},{value:"Configuration",paraId:11,tocIndex:3},{value:"() => Option",paraId:9,tocIndex:3},{value:"show",paraId:9,tocIndex:3},{value:"display component",paraId:9,tocIndex:3},{value:"() => void",paraId:9,tocIndex:3},{value:"hide",paraId:9,tocIndex:3},{value:"Hidden component",paraId:9,tocIndex:3},{value:"() => void",paraId:9,tocIndex:3},{value:"getContainer",paraId:9,tocIndex:3},{value:"Get the information corresponding to the current control",paraId:9,tocIndex:3},{value:"DOM",paraId:9,tocIndex:3},{value:"container",paraId:9,tocIndex:3},{value:"() => HTMLElement",paraId:9,tocIndex:3},{value:"Name",paraId:12,tocIndex:4},{value:"Description",paraId:12,tocIndex:4},{value:"Type",paraId:12,tocIndex:4},{value:"add",paraId:12,tocIndex:4},{value:"Event when component is added",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"remove",paraId:12,tocIndex:4},{value:"Event when component is removed",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"show",paraId:12,tocIndex:4},{value:"Events when the component is displayed",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4},{value:"hide",paraId:12,tocIndex:4},{value:"Event when component is hidden",paraId:12,tocIndex:4},{value:"(this) => void",paraId:12,tocIndex:4}]},73024:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(98113);const t=[{value:"L7 provides external debugging services in the form of debugService. Through debugService, users can obtain some information that is helpful for performance monitoring.",paraId:0,tocIndex:0},{value:"Users can enable monitoring through the methods provided by debugService during scene initialization.",paraId:1,tocIndex:1},{value:"// Monitoring can be turned on during scene initialization\nconst scene = new Scene({\n  debug: true, //default is false\n});\n\n// Monitoring can be controlled individually through debugService\nconst debugService = scene.getDebugService();\ndebugService.serEnable(true); // Enable monitoring\n",paraId:2,tocIndex:1},{value:"Users obtain logs through the getLog method. By passing in different parameters, users can accurately obtain the log content they need.",paraId:3,tocIndex:2},{value:"// Get map initialization log\ndebugService.getLog('map'); // map is a fixed value\n\n// When obtaining the creation log of the layer, in order to obtain all the data, it needs to be obtained after the layer creation is completed.\nlayer.on('initiated', () => {\n  debugService.getLog(layer.id); // Get a single layer creation log\n});\n\nlayerAllLoad([pointLayer1, pointLayer2], () => {\n  // layerAllLoad implements monitoring by itself\n  debugService.getLog([pointLayer1.id, pointLayer2.id]); // Get multiple layer creation logs\n});\n\n// Get all logs\ndebugService.getLog();\n",paraId:4,tocIndex:2},{value:"The following log information can be obtained through the getLog method",paraId:5,tocIndex:2},{value:"const enum IDebugLog {\n  MapInitStart = 'mapInitStart', // Map initialization time\n\n  LayerInitStart = 'layerInitStart', //Layer initialization start time\n  LayerInitEnd = 'layerInitEnd', //Layer initialization end time\n\n  SourceInitStart = 'sourceInitStart', // source initialization start time\n  SourceInitEnd = 'sourceInitEnd', // souce initialization end time\n\n  // scale: perform scale mapping on the data => convert the data from the definition domain to the value domain\n  // Such as: layer.size('v', [1, 10]);\n  //Map the result of size to between 1 and 10 according to the domain represented by field v\n  ScaleInitStart = 'scaleInitStart', // scale initialization start time\n  ScaleInitEnd = 'scaleInitEnd', // scale initialization end time\n\n  //mapping: construct rendering data\n  MappingStart = 'mappingStart', // mapping initialization start time\n  MappingEnd = 'mappingEnd', // mapping initialization end time\n\n  // build model: build program objects used for rendering, build meshes, textures, etc.\n  BuildModelStart = 'buildModelStart',// souce initialization start time\n  BuildModelEnd = 'buildModelEnd', // souce initialization end time\n}\n",paraId:6,tocIndex:2},{value:"debugService provides a convenient method to monitor the rendering time of a layer, which is enabled through renderDebug.",paraId:7,tocIndex:3},{value:"debugService supports event monitoring and is commonly used to monitor rendering.",paraId:8,tocIndex:4},{value:"debugService.on('renderEnd', renderInfo => {\n  const {\n    renderUid, // The unique number of the current frame rendering\n    renderStart, // current frame rendering start time\n    renderEnd, // current frame rendering end time\n    renderDuration // current frame rendering time\n  } = renderInfo;\n  ...\n}\n",paraId:9,tocIndex:4},{value:"debugService event cancels listening.",paraId:10,tocIndex:5}]},67268:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51782);const t=[{value:"l7-maps provides",paraId:0,tocIndex:0},{value:"Earth",paraId:0,tocIndex:0},{value:"Maps, compared to AMap and mapbox maps, are a completely different form of expression, providing visual display capabilities from a global perspective and providing users with more visual expressions of geographical information.",paraId:0,tocIndex:0},{value:"✨ In order to distinguish from ordinary maps, l7-maps provides a brand new",paraId:1,tocIndex:0},{value:"Earth",paraId:1,tocIndex:0},{value:"Map type, L7 provides corresponding",paraId:1,tocIndex:0},{value:"EarthLayer",paraId:1,tocIndex:0},{value:"Layers",paraId:1,tocIndex:0},{value:"import { EarthLayer } from '@antv/l7';\nimport { Earth } from '@antv/l7-maps';\n",paraId:2,tocIndex:0},{value:"Plane point: circle",paraId:3,tocIndex:2},{value:"cylindrical point: cylinder",paraId:4,tocIndex:2},{value:"3D arc: arc3d",paraId:5,tocIndex:3},{value:"// 1. Introduce the corresponding module\nimport { Scene, Earth } from '@antv/l7-maps';\nimport { EarthLayer } from '@antv/l7-layers';\n\n// 2. Build Earth Map\nconst scene = new Scene({\n  id: 'map',\n  map: new Earth({}),\n});\n\n// 3. Construct the earth layer. The current shape is base, which represents the basic sphere.\nconst earthlayer = new EarthLayer()\n  .source(\n    //Texture of the Earth's surface\n    'https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*3-3NSpqRqUoAAAAAAAAAAAAARQnAQ',\n    {\n      parser: {\n        type: 'image',\n        extent: [121.168, 30.2828, 121.384, 30.421],\n      },\n    },\n  )\n  .color('#f00')\n  .shape('base')\n  .style({\n    opacity: 1.0,\n    radius: 40,\n    globalOptions: {\n      ambientRatio: 0.6, // ambient light\n      diffuseRatio: 0.4, // diffuse reflection\n      specularRatio: 0.1, // specular reflection\n      earthTime: 0.1,\n    },\n  })\n  .animate(true);\n\nscene.on('loaded', () => {\n  // 4. Add a basic earth sphere\n  scene.addLayer(earthlayer);\n});\n//After the above steps, we can add a basic earth to the scene\n",paraId:6,tocIndex:4},{value:"As the base map type of l7-maps,",paraId:7,tocIndex:6},{value:"Earth",paraId:7,tocIndex:6},{value:"The camera system of the earth system is provided. Currently, only an empty object needs to be passed in.",paraId:7,tocIndex:6},{value:"args:",paraId:8,tocIndex:6},{value:"{}",paraId:8,tocIndex:6},{value:"import { Scene, Earth } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Earth({}),\n});\n",paraId:9,tocIndex:6},{value:"Provides a simple method to control the rotation of the earth system (actually controlling the rotation of the camera, you need to pass in an object",paraId:10,tocIndex:7},{value:"force:",paraId:11,tocIndex:7},{value:"false",paraId:11,tocIndex:7},{value:"Determine whether to force it to take effect. By default, this method has a lower priority than the user's mouse operation. When the user operates the camera, this method will fail.",paraId:11,tocIndex:7},{value:"reg:",paraId:11,tocIndex:7},{value:"0.01",paraId:11,tocIndex:7},{value:"Angle of rotation (visual rotation angle of the earth),",paraId:11,tocIndex:7},{value:"reg",paraId:11,tocIndex:7},{value:"It does not represent the actual rotation angle, but the ratio of the unit rotation angle.",paraId:11,tocIndex:7},{value:"\n🌟Unit rotation angle = Math.min(this.earthCameraZoom * this.earthCameraZoom, 1)",paraId:11,tocIndex:7},{value:"import { Scene, Earth } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Earth({}),\n});\n\nfunction step() {\n  scene.map.rotateY({\n    option: {\n      force: true,\n      reg: 0.1,\n    },\n  });\n  requestAnimationFrame(step);\n}\n\nscene.on('loaded', () => {\n  scene.addLayer(earthlayer);\n  step();\n});\n",paraId:12,tocIndex:7},{value:"The earth layer is different from the layers of ordinary Gaode maps and Mapbox maps. It can only be used in earth mode and is used to represent the earth's sphere, atmosphere, glow and other effects.",paraId:13,tocIndex:8},{value:"\n🌟 Use different",paraId:13,tocIndex:8},{value:"shape",paraId:13,tocIndex:8},{value:"Parameters represent the differences between different earth layers.",paraId:13,tocIndex:8},{value:"source: data",paraId:14,tocIndex:9},{value:"map: The address of the earth's surface texture map",paraId:15,tocIndex:9},{value:"parser: Parser, currently you only need to write fixed object values:",paraId:15,tocIndex:9},{value:'{ parser: { type: "image" } }',paraId:15,tocIndex:9},{value:"shape: layer type",paraId:16,tocIndex:9},{value:"The default value is",paraId:17,tocIndex:9},{value:"base",paraId:17,tocIndex:9},{value:", currently supported",paraId:17,tocIndex:9},{value:"shape",paraId:17,tocIndex:9},{value:"Types are:",paraId:17,tocIndex:9},{value:"base: sphere",paraId:18,tocIndex:9},{value:"atomSphere: atmosphere",paraId:18,tocIndex:9},{value:"bloomSphere: Shining",paraId:18,tocIndex:9},{value:"When the user's",paraId:19,tocIndex:9},{value:"shape",paraId:19,tocIndex:9},{value:"When the parameter is not recognized, it is automatically downgraded to",paraId:19,tocIndex:9},{value:"base",paraId:19,tocIndex:9},{value:"type",paraId:19,tocIndex:9},{value:"globalOptions: layer style",paraId:20,tocIndex:9},{value:"ambientRatio: ambient light",paraId:21,tocIndex:9},{value:"diffuseRatio: diffuse reflection",paraId:21,tocIndex:9},{value:"specularRatio: specular reflection",paraId:21,tocIndex:9},{value:"const earthlayer = new EarthLayer()\n  .source('https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*3-3NSpqRqUoAAAAAAAAAAAAARQnAQ', {\n    parser: {\n      type: 'image',\n    },\n  })\n  .shape('base')\n  .style({\n    globalOptions: {\n      ambientRatio: 0.6, // ambient light\n      diffuseRatio: 0.4, // diffuse reflection\n      specularRatio: 0.1, // specular reflection\n    },\n  });\n",paraId:22,tocIndex:9},{value:"atomLayer",paraId:23,tocIndex:10},{value:"As the effect layer of the earth, there is no need to pass in data, so you don’t need to call it.",paraId:23,tocIndex:10},{value:"source",paraId:23,tocIndex:10},{value:"method",paraId:23,tocIndex:10},{value:"const atomLayer = new EarthLayer().color('#2E8AE6').shape('atomSphere').style({\n  //Can control the luminescence level\n  opacity: 1,\n});\n",paraId:24,tocIndex:10},{value:"bloomLayer",paraId:25,tocIndex:11},{value:"As the effect layer of the earth, there is no need to pass in data, so you don’t need to call it.",paraId:25,tocIndex:11},{value:"source",paraId:25,tocIndex:11},{value:"method",paraId:25,tocIndex:11},{value:"const bloomLayer = new EarthLayer().color('#fff').shape('bloomSphere').style({\n  opacity: 0.5,\n});\n",paraId:26,tocIndex:11}]},39663:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(4972);const t=[{value:"Users do not need to do additional operations when using the fly line layer in earth mode. L7 will automatically recognize the earth mode and perform related conversions.",paraId:0},{value:"Earth Flying Line Diagram Passed",paraId:1,tocIndex:0},{value:"LineLayer",paraId:1,tocIndex:0},{value:"and",paraId:1,tocIndex:0},{value:"EarthLayer",paraId:1,tocIndex:0},{value:"Instantiate",paraId:1,tocIndex:0},{value:"import { EarthLayer, LineLayer } from '@antv/l7';\n",paraId:2,tocIndex:0},{value:"Earth fly line layer shape only supports",paraId:3,tocIndex:1},{value:"arc3d",paraId:3,tocIndex:1}]},1394:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(40748);const t=[{value:"Post-Process Effect is a common processing effect in 3D rendering. It is a technology for reprocessing the rendered images and is generally used to achieve various special effects. L7's post-processing module provides users with some common post-processing effects, and also provides standard specifications to allow users to customize post-processing effects.",paraId:0},{value:"🌟 It should be noted that using post-processing usually results in additional performance consumption. Users should use post-processing reasonably according to the actual situation of the project.",paraId:1},{value:"const layer = new LineLayer({\n  enableMultiPassRenderer: true,\n  passes: [\n    [\n      'bloom',\n      {\n        bloomBaseRadio: 0.8,\n        bloomRadius: 2,\n        bloomIntensity: 1\n      }\n    ]\n  ]\n}).source(data)\n  .size('ELEV', h => [ h % 50 === 0 ? 1.0 : 0.5, (h - 1300) * 0.2 ])\n  .shape('line')\n  .scale('ELEV', {\n    type: 'quantize'\n  })\n  .color('ELEV', [\n    '#094D4A',\n    ...\n  ]);\nscene.addLayer(layer);\n",paraId:2,tocIndex:0},{value:"In order to enable the post-processing capability of the layer, we need to configure enableMultiPassRenderer to true when initializing the layer, and also pass in the processing effect configuration of the layer.",paraId:3,tocIndex:1},{value:"let pointLayer = new PointLayer({\n  zIndex: 1,\n  enableMultiPassRenderer: false,\n  passes: [\n    [\n      'bloom',\n      {\n        bloomBaseRadio: 0.95,\n        bloomRadius: 4,\n        bloomIntensity: 1.1,\n      },\n    ],\n  ],\n});\n",paraId:4,tocIndex:1},{value:"enableMultiPassRenderer configures whether the layer starts post-processing capabilities",paraId:5,tocIndex:1},{value:"passes post-processing configuration list",paraId:5,tocIndex:1},{value:"\n🌟 passes need to be configured according to certain rules",paraId:5,tocIndex:1},{value:"Traditional post-processing rendering often performs unified post-processing on all objects in the scene, but many times we only need to post-process a part of the scene. L7’s post-processing module naturally supports post-processing on a layer-by-layer basis, which gives users a higher degree of freedom in processing L7 scene content.",paraId:6,tocIndex:2},{value:"After the user initializes the layer object, if he wants to adjust the parameters of the post-processing effect, he can directly use the style method.",paraId:7,tocIndex:3},{value:"layer.style({ passes: [ [ 'color Halftone', { // Update the position of center center: [newX, newY], }, ], ],\n});\nscene.render();\n",paraId:8,tocIndex:3},{value:"In order to facilitate users to switch the state of post-processing (on or off post-processing), we provide users with a special method",paraId:9,tocIndex:4},{value:"// MultiPass exists in the current layer and we need to close it\n//Close directly\nlayer.setMultiPass(false);\n// Clear passes while closing\nlayer.setMultiPass(false, []);\n\n// MultiPass does not exist in the current layer, when we need to enable it\n// passes have been passed in during layer initialization\nconst layer = new PolygonLayer({\n  zIndex: 0,\n  enableMultiPassRenderer: false,\n  passes: [\n    [\n      'bloom',\n      {\n        bloomBaseRadio: 0.5,\n        bloomRadius: 20,\n        bloomIntensity: 1,\n      },\n    ],\n  ],\n});\nlayer.setMultiPass(true);\n\n// No passes are passed in when initializing the layer\nlayer.setMultiPass(true, [\n  [\n    'bloom',\n    {\n      bloomRadius: 10,\n      bloomIntensity: 1,\n    },\n  ],\n]);\n",paraId:10,tocIndex:4},{value:"passes can pass in a variety of post-processing. The result of ordinary rendering is the input of the first post-processing, the output of the previous post-processing is the input of the next post-processing, and the final result is output to the screen.",paraId:11,tocIndex:5},{value:"L7's post-processing module presets several post-processing effects, so users can configure and use them directly in passes.",paraId:12,tocIndex:6},{value:"const bloomPass = [\n  'bloom',\n  {\n    bloomBaseRadio: 0.5,\n    bloomRadius: 20,\n    bloomIntensity: 1,\n  },\n];\n",paraId:13,tocIndex:7},{value:"Glow post-processing",paraId:14,tocIndex:7},{value:"bloomBaseRadio",paraId:15,tocIndex:7},{value:"\nSet the proportion that maintains the original style of the graphic. The value is between 0 and 1. When the value is 1, the original style is completely preserved.",paraId:15,tocIndex:7},{value:"bloomRadius\nSet the radius of bloom. The larger the value, the larger the bloom range.",paraId:15,tocIndex:7},{value:"bloomIntensity\nSet the intensity of bloom. The larger the value, the stronger the glow.",paraId:15,tocIndex:7},{value:"Vertical Blur/Horizontal Blur",paraId:16,tocIndex:8},{value:"const blurVPass = [\n  'blurV',\n  {\n    blurRadius: 5,\n  },\n];\nconst blurHPass = [\n  'blurH',\n  {\n    blurRadius: 5,\n  },\n];\n",paraId:17,tocIndex:8},{value:"blurRadius\nSet blur radius",paraId:18,tocIndex:8},{value:"colorHalftone",paraId:19,tocIndex:9},{value:"const colorHalftonePass = [\n  'colorHalftone',\n  {\n    angle: 0,\n    size: 8,\n    centerX: 0.5,\n    centerY: 0.5,\n  },\n];\n",paraId:20,tocIndex:9},{value:"angle\nSet angle",paraId:21,tocIndex:9},{value:"size\nSet size",paraId:21,tocIndex:9},{value:"centerX\nSet center point X",paraId:21,tocIndex:9},{value:"centerY\nSet center point Y",paraId:21,tocIndex:9},{value:"hexagonal pixels",paraId:22,tocIndex:10},{value:"const hexagonalPixelatePass = [\n  'hexagonalPixelate',\n  {\n    scale: 10,\n    centerX: 0.5,\n    centerY: 0.5,\n  },\n];\n",paraId:23,tocIndex:10},{value:"scale\nSet zoom",paraId:24,tocIndex:10},{value:"centerX\nSet center point X",paraId:24,tocIndex:10},{value:"centerY\nSet center point Y",paraId:24,tocIndex:10},{value:"ink",paraId:25,tocIndex:11},{value:"const inkPass = [\n  'ink',\n  {\n    strength: 1,\n  },\n];\n",paraId:26,tocIndex:11},{value:"strength\nSet intensity",paraId:27,tocIndex:11},{value:"noise",paraId:28,tocIndex:12},{value:"const noisePass = [\n  'noise',\n  {\n    amount: 1,\n  },\n];\n",paraId:29,tocIndex:12},{value:"amount\nSet the amount of noise",paraId:30,tocIndex:12},{value:"Users can easily customize post-processing effects through L7-defined standards.",paraId:31,tocIndex:13},{value:"import { BasePostProcessingPass, PolygonLayer, Scene } from '@antv/l7';\n\ninterface IDotScreenEffectConfig {\n  center: [number, number]; // pattern 圆心\n  angle: number; // dot 旋转角度\n  size: number; // dot 尺寸\n}\n\nclass DotScreenEffect extends BasePostProcessingPass<IDotScreenEffectConfig> {\n  protected setupShaders() {\n    this.shaderModuleService.registerModule('dotScreenEffect', {\n      vs: this.quad,\n      fs: `\n      varying vec2 v_UV;\n\n      uniform sampler2D u_Texture;\n      uniform vec2 u_ViewportSize : [1.0, 1.0];\n      uniform vec2 u_Center : [0.5, 0.5];\n      uniform float u_Angle : 1;\n      uniform float u_Size : 3;\n\n      float pattern(vec2 texSize, vec2 texCoord) {\n        float scale = 3.1415 / u_Size;\n        float s = sin(u_Angle), c = cos(u_Angle);\n        vec2 tex = texCoord * texSize - u_Center * texSize;\n        vec2 point = vec2(\n          c * tex.x - s * tex.y,\n          s * tex.x + c * tex.y\n        ) * scale;\n        return (sin(point.x) * sin(point.y)) * 4.0;\n      }\n      vec4 dotScreen_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n        float average = (color.r + color.g + color.b) / 3.0;\n        return vec4(vec3(average * 10.0 - 5.0 + pattern(texSize, texCoord)), color.a);\n      }\n\n      void main() {\n        gl_FragColor = vec4(texture2D(u_Texture, v_UV));\n        gl_FragColor = dotScreen_filterColor(gl_FragColor, u_ViewportSize, v_UV);\n      }\n      `,\n    });\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule('dotScreenEffect');\n    const { width, height } = this.rendererService.getViewportSize();\n    return {\n      vs,\n      fs,\n      uniforms: {\n        ...uniforms,\n        u_ViewportSize: [width, height],\n      },\n    };\n  }\n}\n\n// 注册自定义后处理效果\nscene.registerPostProcessingPass(DotScreenEffect, 'dotScreenEffect');\nconst layer = new PolygonLayer({\n  enableMultiPassRenderer: true,\n  passes: [\n    [\n      'dotScreenEffect',\n      {\n        size: 8,\n        angle: 1,\n      },\n    ],\n  ],\n});\n",paraId:32,tocIndex:13}]},34147:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(88886);const t=[{value:"Users do not need to do additional operations when using point layers in earth mode. L7 will automatically recognize the earth mode and perform related conversions.",paraId:0},{value:"Earth point layer passes",paraId:1,tocIndex:0},{value:"PointLayer",paraId:1,tocIndex:0},{value:"and",paraId:1,tocIndex:0},{value:"EarthLayer",paraId:1,tocIndex:0},{value:"Instantiate",paraId:1,tocIndex:0},{value:"import { PointLayer, EarthLayer } from '@antv/l7';\n",paraId:2,tocIndex:0}]},24630:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(87204);const t=[{value:"We usually use longitude and latitude to describe geographical location, but in some special scenarios, we tend to use a simpler plane coordinate system (xyz) to describe the relative coordinates of a location. For this reason, L7 provides a simple coordinate system mode.",paraId:0},{value:"Online case",paraId:1},{value:"In order to use a simple coordinate system, we need to use the L7 custom Map map type and specify the version attribute of the map.",paraId:2,tocIndex:0},{value:"import { Scene, ImageLayer, PointLayer } from '@antv/l7';\nimport { Map } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Map({\n    center: [500, 500],\n    pitch: 0,\n    zoom: 3,\n    version: 'SIMPLE',\n    mapSize: 1000,\n    maxZoom: 5,\n    minZoom: 2,\n    pitchEnabled: false,\n    rotateEnabled: false,\n  }),\n});\n",paraId:3,tocIndex:0},{value:"When using a custom coordinate system, users need to set the map type to 'SIMPLE'",paraId:4,tocIndex:1},{value:"When using a custom coordinate system, users can set the size of the drawing area. The default drawing area is a rectangular area of ​​10000",paraId:5,tocIndex:2},{value:"When users use a custom coordinate system, it is recommended to set pitchEnabled/rotateEnabled to false",paraId:6,tocIndex:3},{value:"When users use a custom coordinate system, they can use ordinary layers normally. The only difference is that they need to convert the original longitude and latitude coordinates into plane coordinates.",paraId:7,tocIndex:4},{value:"const imagelayer = new ImageLayer({}).source(\n   'https://gw.alipayobjects.com/mdn/rms_816329/afts/img/A*I0X5R4jAUQ4AAAAAAAAAAAAARQnAQ',\n   {\n   parser: {\n      type: 'image',\n      extent: [360, 400, 640, 600],\n   },\n   },\n);\n\nconst textlayer = new PointLayer({ zIndex: 2 })\n.source(\n  [\n    {\n      x: 515,\n      y: 575,\n      t: 'hut',\n    },\n    ...\n  ],\n  {\n    parser: {\n      type: 'json',\n      x: 'x',\n      y: 'y',\n    },\n  },\n)\n.shape('t', 'text')\n.size(12)\n.active({\n  color: '#00f',\n  mix: 0.9\n})\n.color('rgb(86, 156, 214)')\n.style({\n  textAnchor: 'center', // The position of the text relative to the anchor point center|left|right|top|bottom|top-left\n  spacing: 2, // character spacing\n  fontWeight: '800',\n  padding: [1, 1], // Text bounding box padding [horizontal, vertical], which affects the collision detection results and prevents adjacent texts from being too close.\n  stroke: '#ffffff', // stroke color\n  strokeWidth: 2, // Stroke width\n  textAllowOverlap: true,\n});\n\nconst lineData = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          properties: {\n            testOpacity: 0.8,\n          },\n          geometry: {\n            type: 'Polygon',\n            coordinates: [\n              [\n                [6000, 6000],\n                [6000, 7000],\n                [7000, 7000],\n                [7000, 6000],\n              ],\n            ],\n          },\n        },\n      ],\n    };\n\n    const linelayer = new LineLayer()\n      .source(lineData)\n      .shape('line')\n      .size(10)\n      .color('#0f0')\n      .active(true);\n\n\nconst polygonData = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          properties: {\n            testOpacity: 0.4,\n          },\n          geometry: {\n            type: 'MultiPolygon',\n            coordinates: [\n              [\n                [\n                  [6000, 6000],\n                  [6000, 7000],\n                  [7000, 7000],\n                  [7000, 6000],\n                  [6000, 6000],\n                ],\n                [\n                  [6300, 6300],\n                  [6300, 6700],\n                  [6700, 6700],\n                  [6700, 6300],\n                  [6300, 6300],\n                ],\n              ],\n              [\n                [\n                  [5000, 5000],\n                  [5000, 6000],\n                  [6000, 6000],\n                  [6000, 5000],\n                  [5000, 5000],\n                ],\n              ],\n            ],\n          },\n        },\n      ],\n    };\n\n    const polygonLayer = new PolygonLayer()\n      .source(polygonData)\n      .shape('fill')\n      .color('#f00')\n      .style({\n        opacity: 0.6,\n      })\n      .active(true);\n",paraId:8,tocIndex:4}]},15975:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(14271);const t=[{value:"1. L7 supports allowing users to access third-party rendering engines to develop map scenes. ThreeJS is currently the most widely used general-purpose 3D rendering engine. L7 can meet the requirements after integrating it.\nUser-defined development needs allow L7 to cover more application scenarios.",paraId:0,tocIndex:0},{value:"2. Currently, in order to smooth out the differences between different map basemaps, the L7Three module provides some compatibility methods, such as the setMeshScale method. Through these methods, users can\nenvironment using the same set of code.",paraId:1,tocIndex:0},{value:"3. The adaptation method provided by L7 is only responsible for the conversion of threejs world coordinates to different map basemap coordinates, the sharing of gl context and the synchronization of rendering frames. The rest is related to the construction of 3D scene content.\nThere is no difference from the development of ordinary threejs applications.",paraId:2,tocIndex:0},{value:"4. L7 itself does not integrate threejs, so you need to install threejs independently when using the L7Three module.",paraId:3,tocIndex:0},{value:"✨ Currently, the threejs compatibility officially provided by L7 is developed based on version 0.115.0. There may be compatibility issues when using other versions of threejs.",paraId:4,tocIndex:0},{value:"// 1. Introduce the corresponding module\nimport { ThreeLayer, ThreeRender } from '@antv/l7-three';\nimport * as THREE from 'three';\n...\n// 2. Registration service\nscene.registerRenderService(ThreeRender);\n...\n// 3. Build the threejs layer object and add the grid object built by threejs to it.\nconst threeJSLayer = new ThreeLayer({\n  onAddMeshes: (threeScene: THREE.Scene, layer: ThreeLayer) => {\n    threeScene.add(new THREE.AmbientLight(0xffffff));\n\n    const sunlight = new THREE.DirectionalLight(0xffffff, 0.25);\n    sunlight.position.set(0, 80000000, 100000000);\n    sunlight.matrixWorldNeedsUpdate = true;\n    threeScene.add(sunlight);\n\n    let center = scene.getCenter();\n\n    let cubeGeometry = new THREE.BoxBufferGeometry(10000, 10000, 10000);\n    let cubeMaterial = new THREE.MeshNormalMaterial();\n    let cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n\n    layer.setObjectLngLat(cube, [center.lng + 0.05, center.lat], 0);\n    threeScene.add(cube);\n  },\n})\n.source(data)\n.animate(true);\n\n// 4. Add threejs layer object\nscene.addLayer(threeJSLayer);\n",paraId:5,tocIndex:1},{value:"L7 encapsulates the reference of threejs into a special layer object, which is used the same as other layers.",paraId:6,tocIndex:1},{value:"This method accepts two parameters threeScene: THREE.Scene, layer: ThreeLayer",paraId:7,tocIndex:3},{value:"threeScene: This is a normal threejs scene object",paraId:8,tocIndex:3},{value:"layer: This is the threeLayer object provided by L7, which mounts the methods needed to adapt the threejs space to the map space.",paraId:8,tocIndex:3},{value:"The layer object created by the user will also be returned in the second parameter of the onAddMesh method.",paraId:9,tocIndex:4},{value:"The following is the adaptation method mounted on the ThreeLayer instance.",paraId:10,tocIndex:4},{value:"lnglat: [number, number] latitude and longitude",paraId:11,tocIndex:5},{value:"altitude: number = 0 relative altitude",paraId:11,tocIndex:5},{value:"rotation: [number, number, number] = [0, 0, 0] rotation angle",paraId:11,tocIndex:5},{value:"scale: [number, number, number] = [1, 1, 1] scaling",paraId:11,tocIndex:5},{value:"Users can use this method to calculate the model matrix at the corresponding longitude and latitude point, relative height, rotation angle and scaling.\nThe return value of this method is a matrix of type THREE.Matrix4",paraId:12,tocIndex:5},{value:"object: Object3D threejs object",paraId:13,tocIndex:6},{value:"lnglat: ILngLat[number, number] latitude and longitude",paraId:13,tocIndex:6},{value:"altitude = 0 relative altitude",paraId:13,tocIndex:6},{value:"The user can use this method to move the object object from the current location to the specified location (map longitude and latitude coordinates)",paraId:14,tocIndex:6},{value:"object: Object3D threejs object",paraId:15,tocIndex:7},{value:"lnglat: ILngLat[number, number] latitude and longitude",paraId:15,tocIndex:7},{value:"altitude = 0 relative altitude",paraId:15,tocIndex:7},{value:"The user can set the location of the object object (map longitude and latitude coordinates) through this method",paraId:16,tocIndex:7},{value:"lnglat: ILngLat[number, number] latitude and longitude",paraId:17,tocIndex:8},{value:"Users can use this method to convert latitude and longitude coordinates into threejs world coordinates",paraId:18,tocIndex:8},{value:"object: Object3D threejs object",paraId:19,tocIndex:9},{value:"Users can use this method to adjust the posture of the 3D object before adding the threejs object to ensure that the added object can be displayed correctly.",paraId:20,tocIndex:9},{value:"✨ In threejs world coordinates, the default upward direction is the positive Y-axis direction, while in map coordinates, the default upward direction is the positive Z-axis direction.",paraId:21,tocIndex:9},{value:"✨ Users do not necessarily use this method to adjust the posture of objects, they can also implement it themselves",paraId:22,tocIndex:9},{value:"object: Object3D threejs object",paraId:23,tocIndex:10},{value:"x: number = 1 Scaling ratio in x-axis direction",paraId:23,tocIndex:10},{value:"y: number = 1 Scaling ratio in the y-axis direction",paraId:23,tocIndex:10},{value:"z: number = 1 Scaling ratio in z-axis direction",paraId:23,tocIndex:10},{value:"Users can set the threejs object zoom through this method",paraId:24,tocIndex:10},{value:"✨ In fact, the same effect can be achieved by setting the scale attribute of the threejs object. However, because mapbox introduces special calculations when calculating the model matrix, it cannot directly set the scale attribute for scaling.",paraId:25,tocIndex:10},{value:"✨ Similarly, you can directly modify the position, rotation, etc. of threejs to adjust the posture of the 3D object.",paraId:26,tocIndex:10},{value:"mixer: AnimationMixer animation mixer for threejs",paraId:27,tocIndex:11},{value:"The user manages the animation of loading the model through this method.",paraId:28,tocIndex:11},{value:"Returns the corresponding THREEJS camera based on the current map scene parameters.",paraId:29,tocIndex:12},{value:"Users can use the capabilities provided by threejs to load any model it supports.",paraId:30,tocIndex:13},{value:"✨ Take loading gltf model as an example",paraId:31,tocIndex:14},{value:"// 1. Introduce loader\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n...\nconst threeJSLayer = new ThreeLayer({\n  onAddMeshes: (threeScene: THREE.Scene, layer: ThreeLayer) => {\n    ...\n    // 2. Build the loader\n    const loader = new GLTFLoader();\n    // 3. Load model\n    loader.load('https://gw.alipayobjects.com/os/bmw-prod/3ca0a546-92d8-4ba0-a89c-017c218d5bea.gltf',\n    (gltf) => {\n      const model = gltf.scene;\n      layer.adjustMeshToMap(model);\n      layer.setMeshScale(model, 1000, 1000, 1000);\n      layer.setObjectLngLat( model, [center.lng, center.lat], 0 );\n\n      // 4. Play the animation bound to the model\n      const animations = gltf.animations;\n      if (animations && animations.length) {\n        const mixer = new THREE.AnimationMixer(model);\n        const animation = animations[2];\n        const action = mixer.clipAction(animation);\n        action.play();\n        // 5. L7 controls the playback of model animation\n        layer.addAnimateMixer(mixer);\n      }\n    })\n  }\n}).source(data)\n.animate(true) // If you need to play model animation, please turn on the animation mode (or there is already a layer with animation turned on in the scene)\n",paraId:32,tocIndex:14}]},55168:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(81619);const t=[{value:"WindLayer",paraId:0},{value:"It is used to store pictures of wind field information, set parameters related to wind speed line sampling, and present the direction and intensity of the sampled wind field lines on the map in a visual way.",paraId:0},{value:"import { WindLayer } from '@antv/l7';\n",paraId:1,tocIndex:0},{value:"(data, options) => WindLayer, function to set wind field related information",paraId:2,tocIndex:1},{value:"data: string image address to store wind farm information\n🌟",paraId:3,tocIndex:1},{value:"data collection",paraId:3,tocIndex:1},{value:"options:",paraId:3,tocIndex:1},{value:"{\n  parser: {\n    type: 'image',\n      extent: [-180, -85, 180, 85], // Used to set the latitude and longitude chart interval where the wind field image is applied to the map\n  },\n}\n",paraId:4,tocIndex:1},{value:"Turn on animation effects.",paraId:5,tocIndex:2},{value:"layer.animate(true);\n",paraId:6,tocIndex:2},{value:"uMin",paraId:7,tocIndex:3},{value:": wind speed",paraId:7,tocIndex:3},{value:"X",paraId:7,tocIndex:3},{value:"Axial/lateral minimum.",paraId:7,tocIndex:3},{value:"uMax",paraId:7,tocIndex:3},{value:": wind speed",paraId:7,tocIndex:3},{value:"X",paraId:7,tocIndex:3},{value:"Axis/lateral maximum.",paraId:7,tocIndex:3},{value:"vMin",paraId:7,tocIndex:3},{value:": wind speed",paraId:7,tocIndex:3},{value:"Y",paraId:7,tocIndex:3},{value:"Axis/longitudinal minimum.",paraId:7,tocIndex:3},{value:"vMax",paraId:7,tocIndex:3},{value:": wind speed",paraId:7,tocIndex:3},{value:"Y",paraId:7,tocIndex:3},{value:"Axis/longitudinal maximum.",paraId:7,tocIndex:3},{value:"sizeScale",paraId:7,tocIndex:3},{value:": Wind field line thickness scaling ratio,",paraId:7,tocIndex:3},{value:"0 - 2",paraId:7,tocIndex:3},{value:"。",paraId:7,tocIndex:3},{value:"fadeOpacity",paraId:7,tocIndex:3},{value:": line transparency,",paraId:7,tocIndex:3},{value:"0 - 1",paraId:7,tocIndex:3},{value:"。",paraId:7,tocIndex:3},{value:"numParticles",paraId:7,tocIndex:3},{value:": Number of lines.",paraId:7,tocIndex:3},{value:"rampColors",paraId:7,tocIndex:3},{value:": Line fill color mapping.",paraId:7,tocIndex:3},{value:"const rampColors = {\n  colors: ['#3288bd', '#66c2a5', '#abdda4', '#e6f598', '#fee08b', '#fdae61', '#f46d43', '#d53e4f'],\n  positions: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 1.0],\n};\n",paraId:8,tocIndex:3},{value:"colors color array",paraId:9,tocIndex:4},{value:"positions data interval",paraId:9,tocIndex:4},{value:"Configure the color band of the value range mapping color. The range of the value range is",paraId:10,tocIndex:4},{value:"[0 - 1]",paraId:10,tocIndex:4},{value:", correspondingly we need to provide each",paraId:10,tocIndex:4},{value:"position",paraId:10,tocIndex:4},{value:"Position sets a color value.",paraId:10,tocIndex:4},{value:"⚠️ colors, positions must be the same length",paraId:11,tocIndex:4},{value:"layer.style({\n  rampColors: {\n    colors: ['#FF4818', '#F7B74A', '#FFF598', '#91EABC', '#2EA9A1', '#206C7C'],\n    positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n  },\n});\n",paraId:12,tocIndex:4},{value:"Online case",paraId:13}]},52157:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(97979);const t=[{value:"Heat maps display the degree of aggregation of data in geographical areas in a special highlighted form. L7 provides heat maps in a variety of presentation forms. By switching",paraId:0,tocIndex:0},{value:"shape",paraId:0,tocIndex:0},{value:"parameters, users can get different heat maps",paraId:0,tocIndex:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"layer\n  .shape('heatmap')\n  .size('mag', [0, 1.0]) // weight mapping channel\n  .style({\n    radius: 20,\n    rampColors: rampColors,\n  });\n",paraId:2,tocIndex:0}]},99120:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(10194);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},59963:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(82769);const t=[{value:"scale",paraId:0},{value:"Method sets the data field mapping method, which is used to convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding.",paraId:0},{value:"field",paraId:1,tocIndex:0},{value:"Specify the field name used for mapping in the data passed in source",paraId:1,tocIndex:0},{value:"scaleConfig",paraId:1,tocIndex:0},{value:"Column definition configuration, object type",paraId:1,tocIndex:0},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:2,tocIndex:0},{value:"scale",paraId:3,tocIndex:1},{value:"The types can be divided into",paraId:3,tocIndex:1},{value:"3",paraId:3,tocIndex:1},{value:"kind",paraId:3,tocIndex:1},{value:"11",paraId:3,tocIndex:1},{value:"species, different",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"The difference is that",paraId:3,tocIndex:1},{value:"domain->range",paraId:3,tocIndex:1},{value:"The conversion method is different.",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"and",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"yes",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"two very important parameters.",paraId:3,tocIndex:1},{value:"domain: definition interval of map data values",paraId:4,tocIndex:1},{value:"range: interval definition of visual value",paraId:4,tocIndex:1},{value:"type of data",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow、time、sequential、quantize、quantile、threshold",paraId:5,tocIndex:1},{value:"Classification",paraId:5,tocIndex:1},{value:"cat、time",paraId:5,tocIndex:1},{value:"constant",paraId:5,tocIndex:1},{value:"identity",paraId:5,tocIndex:1},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:6,tocIndex:2},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:7,tocIndex:2},{value:"Constant measure A field is a constant that does not change.",paraId:8,tocIndex:3},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:9,tocIndex:4},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:10,tocIndex:5},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:11,tocIndex:6},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:12,tocIndex:7},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:13,tocIndex:7},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:14,tocIndex:7},{value:"A uniform non-rational B-spline interpolator function that returns the given array of colors to be converted to RGB colors.",paraId:15,tocIndex:8},{value:"const scaleColors = d3interpolate.interpolateRgbBasis(colors);\n",paraId:16,tocIndex:8},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  range?: any[];\n  neutral?: number;\n  field?: string;\n  unknown?: string;\n  ticks?: any[];\n  nice?: boolean;\n  clamp?: boolean;\n  format?: () => any;\n}\n",paraId:17,tocIndex:9}]},13555:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92978);const t=[{value:"shape",paraId:0},{value:"The method is used to specify the type of heat drawn by the heat layer. Now it supports three types: classic heat, cellular heat, and grid heat.",paraId:0},{value:"shape",paraId:1,tocIndex:0},{value:"for",paraId:1,tocIndex:0},{value:"heatmap",paraId:1,tocIndex:0},{value:"Heat layers are used to draw classic heat in 2D.",paraId:1,tocIndex:0},{value:"shape",paraId:2,tocIndex:1},{value:"for",paraId:2,tocIndex:1},{value:"heatmap3D",paraId:2,tocIndex:1},{value:"Thermal layers are used to draw 3D heat.",paraId:2,tocIndex:1},{value:"Implementation of Grid Thermal and Cellular Thermal depends on configuration",paraId:3,tocIndex:2},{value:"transforms",paraId:3,tocIndex:2},{value:"parameters,",paraId:3,tocIndex:2},{value:"Specific instructions for use",paraId:4,tocIndex:2},{value:"。",paraId:3,tocIndex:2},{value:"fetch('https://gw.alipayobjects.com/os/basement_prod/513add53-dcb2-4295-8860-9e7aa5236699.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const layer = new HeatmapLayer({})\n      .source(data, {\n        transforms: [\n          {\n            type: 'hexagon',\n            size: 100,\n            field: 'h12',\n            method: 'sum',\n          },\n        ],\n      })\n      .size('sum', [0, 600])\n      .shape('hexagonColumn')\n      .style({\n        coverage: 0.8,\n        angle: 0,\n      })\n      .color(\n        'sum',\n        [\n          '#094D4A',\n          '#146968',\n          '#1D7F7E',\n          '#289899',\n          '#34B6B7',\n          '#4AC5AF',\n          '#5FD3A6',\n          '#7BE39E',\n          '#A1EDB8',\n          '#CEF8D6',\n        ].reverse(),\n      );\n    scene.addLayer(layer);\n  });\n",paraId:5,tocIndex:2}]},83052:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(36947);const t=[{value:"The layer data uses the latitude and longitude format, and the data source supports three data formats: JSON, GeoJSON, and CSV.",paraId:0},{value:"GeoJSON",paraId:1},{value:"CSV",paraId:2},{value:"JSON",paraId:3},{value:"🌟 Usually each type of data requires a corresponding parser to parse the data",paraId:4},{value:"🌟 The data usage of heat map is consistent with that of point layer.",paraId:5},{value:"// Pass in GeoJSON type data *** L7 supports it by default and does not require parser analysis\nvar data = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Polygon',\n            coordinates: [\n              [120, 30],\n              ...\n            ]\n          },\n        },\n      ],\n    };\n\nvar layer = new HeatmapLayer()\n.source(data)\n",paraId:6,tocIndex:0},{value:"// Pass in txt type data\nvar data = `from,to,value,type,lng1,lat1,lng2,lat2\n鎷夎惃,仙魔タ,6.91,move_out,91.111891,29.662557,97.342625,37.373799\n鎷厎惃,鎴愰嘘,4.79,move_out,91.111891,29.662557,104.067923,30.679943\n鎷厎惃,玷夎惃,月充经,2.41,move_out,91.111891,29.662557,106.530635,29.544606\n鎷厎惃,鍖椾han,2.05,move_out,91.111891,29.662557,116.395645,39.929986\n...`;\n\nvar layer = new HeatmapLayer().source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng1',\n    y: 'lat1',\n  },\n});\n",paraId:7,tocIndex:1},{value:"// Pass in JSON type data\nvar data = [\n  {\n    lng: 120,\n    lat: 30\n  },\n  ...\n]\n\nvar layer = new HeatmapLayer()\n.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat',\n  }\n})\n",paraId:8,tocIndex:2}]},7907:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(42412);const t=[{value:"style",paraId:0},{value:"The method is used to configure the style of the layer. The same layer has different",paraId:0},{value:"shape",paraId:0},{value:"graphics, different",paraId:0},{value:"shape",paraId:0},{value:"layer",paraId:0},{value:"style",paraId:0},{value:"Methods accept different parameters.",paraId:0},{value:"🌟 Honeycomb heat map and grid heat map",paraId:1},{value:"style",paraId:1},{value:"The style can refer to the actual drawn layer.",paraId:1},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:2},{value:"Universal",paraId:3,tocIndex:0},{value:"style",paraId:3,tocIndex:0},{value:"Parameters, parameters supported by all graphics.",paraId:3,tocIndex:0},{value:"style",paraId:4,tocIndex:0},{value:"type",paraId:4,tocIndex:0},{value:"describe",paraId:4,tocIndex:0},{value:"default value",paraId:4,tocIndex:0},{value:"opacity",paraId:4,tocIndex:0},{value:"number",paraId:4,tocIndex:0},{value:"Graphic transparency",paraId:4,tocIndex:0},{value:"1",paraId:4,tocIndex:0},{value:"shape",paraId:5,tocIndex:1},{value:"for",paraId:5,tocIndex:1},{value:"heatmap",paraId:5,tocIndex:1},{value:"、",paraId:5,tocIndex:1},{value:"heatmap3D",paraId:5,tocIndex:1},{value:"type, draw a classic heat map.",paraId:5,tocIndex:1},{value:"style",paraId:6,tocIndex:1},{value:"type",paraId:6,tocIndex:1},{value:"describe",paraId:6,tocIndex:1},{value:"default value",paraId:6,tocIndex:1},{value:"intensity",paraId:6,tocIndex:1},{value:"number",paraId:6,tocIndex:1},{value:"intensity of heat",paraId:6,tocIndex:1},{value:"10",paraId:6,tocIndex:1},{value:"radius",paraId:6,tocIndex:1},{value:"number",paraId:6,tocIndex:1},{value:"The radius of the hot spot",paraId:6,tocIndex:1},{value:"10",paraId:6,tocIndex:1},{value:"rampColors",paraId:6,tocIndex:1},{value:"number",paraId:6,tocIndex:1},{value:"thermal color value",paraId:6,tocIndex:1},{value:"1",paraId:6,tocIndex:1},{value:"colors color array",paraId:7,tocIndex:2},{value:"positions data interval",paraId:7,tocIndex:2},{value:"Configure the color band of the value range mapping color. The range of the value range is",paraId:8,tocIndex:2},{value:"[0 - 1]",paraId:8,tocIndex:2},{value:", correspondingly we need to provide each",paraId:8,tocIndex:2},{value:"position",paraId:8,tocIndex:2},{value:"Position sets a color value.",paraId:8,tocIndex:2},{value:"⚠️ colors, positions must be the same length",paraId:9,tocIndex:2},{value:"layer.style({\n  rampColors: {\n    colors: ['#FF4818', '#F7B74A', '#FFF598', '#91EABC', '#2EA9A1', '#206C7C'],\n    positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n  },\n});\n",paraId:10,tocIndex:2},{value:"Draw cellular heat maps.",paraId:11,tocIndex:3},{value:"style",paraId:12,tocIndex:3},{value:"type",paraId:12,tocIndex:3},{value:"describe",paraId:12,tocIndex:3},{value:"default value",paraId:12,tocIndex:3},{value:"angle",paraId:12,tocIndex:3},{value:"number",paraId:12,tocIndex:3},{value:"Graphic rotation angle",paraId:12,tocIndex:3},{value:"0",paraId:12,tocIndex:3},{value:"coverage",paraId:12,tocIndex:3},{value:"number",paraId:12,tocIndex:3},{value:"graphics coverage ratio",paraId:12,tocIndex:3},{value:"0.9",paraId:12,tocIndex:3},{value:"Draw a grid heat map.",paraId:13,tocIndex:4},{value:"style",paraId:14,tocIndex:4},{value:"type",paraId:14,tocIndex:4},{value:"describe",paraId:14,tocIndex:4},{value:"default value",paraId:14,tocIndex:4},{value:"coverage",paraId:14,tocIndex:4},{value:"number",paraId:14,tocIndex:4},{value:"graphics coverage ratio",paraId:14,tocIndex:4},{value:"1",paraId:14,tocIndex:4}]},93994:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(45053);const t=[{value:"When adding a picture to the map, you need to specify the latitude and longitude range of the picture and the data parsing type.",paraId:0,tocIndex:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"const layer = new ImageLayer({});\nlayer.source('https://gw.alipayobjects.com/zos/rmsportal/FnHFeFklTzKDdUESRNDv.jpg', {\n  parser: {\n    type: 'image',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:2,tocIndex:0}]},5494:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(10841);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"default:",paraId:0,tocIndex:0},{value:" 自动数字编号",paraId:0,tocIndex:0},{value:"设置图层名称,可根据 name 获取 layer",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"图层是否可见",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"default:",paraId:5,tocIndex:2},{value:" 0",paraId:5,tocIndex:2},{value:"图层绘制顺序，数值大绘制在上层，可以控制图层绘制的上下层级",paraId:6,tocIndex:2},{value:"L7 采用队列渲染的机制，所有的图层在内部保存在一个数组中，每一帧的渲染会将图层数组按照 zIndex 的值进行排序，然后遍历数组，将符合条件的图层渲染到场景中",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"default:",paraId:8,tocIndex:3},{value:" Mapbox （0-24） 高德 （2-19)",paraId:8,tocIndex:3},{value:"图层显示最小缩放等级",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"default:",paraId:10,tocIndex:4},{value:" Mapbox （0-24） 高德 （2-19)",paraId:10,tocIndex:4},{value:"图层显示最大缩放等级",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"layer 初始化完成之后，地图是否自动缩放到图层范围",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"default:",paraId:14,tocIndex:6},{value:" 0",paraId:14,tocIndex:6},{value:"图层拾取缓存机制，如 1px 宽度的线鼠标很难拾取(点击)到, 通过设置该参数可扩大拾取的范围（放大图层对象的尺寸）",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:" 'normal'",paraId:16,tocIndex:7},{value:"图层元素混合效果",paraId:17,tocIndex:7},{value:"normal 正常效果 默认 发生遮挡的时候，只会显示前面的图层的颜色",paraId:18,tocIndex:7},{value:"additive 叠加模式 发生遮挡的时候，显示前后图层颜色的叠加",paraId:18,tocIndex:7},{value:"subtractive 相减模式 发生遮挡的时候，显示前后图层颜色的相减",paraId:18,tocIndex:7},{value:"max 最大值 发生遮挡的时候，显示图层颜色 rgb 的最大值",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:" 'false'",paraId:19,tocIndex:8},{value:"\n图层事件，默认只响应最上层图层，设置为true 将允许事件透传",paraId:19,tocIndex:8},{value:"⚠️ mask、maskfence 不推荐使用，一下配置 2.14.x 之后版本生效",paraId:20,tocIndex:8},{value:"模板图层：用做模板的图层，PointLayer、LineLayer、PolygonLayer 都可以作为模板\n掩模图层：被模板切割的图层",paraId:21,tocIndex:8},{value:"掩模图层生效",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:" []",paraId:23,tocIndex:9},{value:"掩模图层生效",paraId:24,tocIndex:10},{value:"是否开启掩模，默认开启 maskLayers 不为空时生效",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"掩模图层生效\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"用来描述当前图层的内容与掩模边界显示。",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:" 在掩模内部显示",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:" 在掩模外部显示",paraId:30,tocIndex:11},{value:"模板图层生效\n",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"枚举",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"\nmaskLayers 为多个时失效，需要在模板图层设置",paraId:31,tocIndex:12},{value:"or 交集",paraId:32,tocIndex:12},{value:"and 并集",paraId:32,tocIndex:12},{value:"使用示例",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // 栅格图层使用polygon 掩模\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},30598:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51328);const t=[{value:"imagelayer",paraId:0},{value:"By providing online pictures",paraId:0},{value:"url",paraId:0},{value:"Specify data via",paraId:0},{value:"extent",paraId:0},{value:"Specifies the position of the image within a rectangular range on the map.",paraId:0},{value:"layer.source('https://gw.alipayobjects.com/zos/rmsportal/FnHFeFklTzKDdUESRNDv.jpg', {\n  parser: {\n    type: 'image',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:1},{value:"Also available via",paraId:2},{value:"coordinates",paraId:2},{value:"Specify a series of locations that define the location of the image within an irregularly shaped range on the map.",paraId:2},{value:"layer.source('https://gw.alipayobjects.com/zos/rmsportal/FnHFeFklTzKDdUESRNDv.jpg', {\n  parser: {\n    type: 'image',\n    coordinates: [\n      [100.959388, 41.619522],\n      [101.229887, 41.572654],\n      [101.16971, 41.377836],\n      [100.900015, 41.424628],\n    ],\n  },\n});\n",paraId:3}]},41616:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(47660);const t=[{value:"imagelayer",paraId:0},{value:"of",paraId:0},{value:"style",paraId:0},{value:"Parameters only support",paraId:0},{value:"opacity",paraId:0},{value:"。",paraId:0},{value:"style",paraId:1},{value:"type",paraId:1},{value:"describe",paraId:1},{value:"default value",paraId:1},{value:"opacity",paraId:1},{value:"number",paraId:1},{value:"Graphic transparency",paraId:1},{value:"1",paraId:1},{value:"brightness",paraId:1},{value:"number",paraId:1},{value:"brightness of graphics",paraId:1},{value:"1",paraId:1},{value:"contrast",paraId:1},{value:"number",paraId:1},{value:"graphic contrast",paraId:1},{value:"1",paraId:1},{value:"saturation",paraId:1},{value:"number",paraId:1},{value:"graphic saturation",paraId:1},{value:"1",paraId:1},{value:"gamma",paraId:1},{value:"number",paraId:1},{value:"The gamma value of the graphic",paraId:1},{value:"1",paraId:1}]},93185:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(45895);const t=[{value:"The line layer is on",paraId:0},{value:"animate",paraId:0},{value:"After the method, you will get the line animation along the line direction.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"animate",paraId:2,tocIndex:0},{value:"The method supports Boolean and object passing values.",paraId:2,tocIndex:0},{value:"layer.animate(true);\n\nlayer.animate({\n  enable: true,\n});\n",paraId:3,tocIndex:0},{value:"interface IAnimateOption {\n  enable: boolean;\n  speed: number;\n  rings: number;\n}\n",paraId:4,tocIndex:1},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:5,tocIndex:3},{value:"duration animation time unit (s) seconds",paraId:6,tocIndex:4},{value:"interval trajectory interval, value range 0 - 1",paraId:6,tocIndex:4},{value:"trailLength trail length value range 0 - 1",paraId:6,tocIndex:4},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:7,tocIndex:4},{value:"L7 The current animation parameters are relative units, and our default length of a line segment is 1",paraId:8,tocIndex:5},{value:"If interval = 0.2, a trajectory will be divided into 5 segments, if interval = 0.5, it will be two segments.",paraId:9,tocIndex:5},{value:"Online case",paraId:10}]},38876:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(15504);const t=[{value:"color",paraId:0},{value:"Method used to set the color of the graphic.",paraId:0},{value:"color",paraId:1,tocIndex:0},{value:"type string.",paraId:1,tocIndex:0},{value:"The color type can be written in rgb",paraId:2,tocIndex:0},{value:"rgb(200, 100, 100)",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"rgba(255, 0, 0, 1)",paraId:2,tocIndex:0},{value:"The color type can be written in hexadecimal",paraId:2,tocIndex:0},{value:"#ffffff",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"#000",paraId:2,tocIndex:0},{value:"The color type can be the writing method of color name",paraId:2,tocIndex:0},{value:"red",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"yellow",paraId:2,tocIndex:0},{value:"Layers can set color values ​​directly.",paraId:3,tocIndex:1},{value:"layer.color('#f00');\n",paraId:4,tocIndex:1},{value:"The colors of a layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as parameters.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    c: '#f00',\n  },\n]);\nlayer.color('c');\n",paraId:6,tocIndex:2},{value:"color",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.color('type', ['#f00', '#0f0', '#00f']);\n",paraId:8,tocIndex:3},{value:"color",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual color of the layer.",paraId:9,tocIndex:4},{value:"layer.color('type', (value) => {\n  switch (value) {\n    case 'water':\n      return '#f00';\n    case 'wood':\n      return '#0f0';\n  }\n});\n",paraId:10,tocIndex:4}]},75921:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(68319);const t=[{value:"The line layer describes one or more paths on the map through a set of longitude and latitude data sets. By the type of path, it is divided into path, arc, 3D arc and other types.",paraId:0,tocIndex:0},{value:"\nUsers can configure",paraId:0,tocIndex:0},{value:"shape",paraId:0,tocIndex:0},{value:"parameters to select the type of point, and pass",paraId:0,tocIndex:0},{value:"style",paraId:0,tocIndex:0},{value:"、",paraId:0,tocIndex:0},{value:"size",paraId:0,tocIndex:0},{value:"、",paraId:0,tocIndex:0},{value:"color",paraId:0,tocIndex:0},{value:"Method to adjust the point style.",paraId:0,tocIndex:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"const layer = new LineLayer()\n  .source([{ lng: 120, lat: 30, lng1: 125, lat1: 30 }], {\n    parser: {\n      type: 'json',\n      x: 'lng',\n      y: 'lat',\n      x1: 'lng1',\n      y1: 'lat1',\n    },\n  })\n  .shape('line')\n  .size(2)\n  .color('#f00');\n",paraId:2,tocIndex:0}]},85070:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(4728);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},77915:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(77448);const t=[{value:"scale",paraId:0},{value:"Method sets the data field mapping method, which is used to convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding.",paraId:0},{value:"field",paraId:1,tocIndex:0},{value:"Specify the field name used for mapping in the data passed in source",paraId:1,tocIndex:0},{value:"scaleConfig",paraId:1,tocIndex:0},{value:"Column definition configuration, object type",paraId:1,tocIndex:0},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:2,tocIndex:0},{value:"scale",paraId:3,tocIndex:1},{value:"The types can be divided into",paraId:3,tocIndex:1},{value:"3",paraId:3,tocIndex:1},{value:"kind",paraId:3,tocIndex:1},{value:"11",paraId:3,tocIndex:1},{value:"species, different",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"The difference is that",paraId:3,tocIndex:1},{value:"domain->range",paraId:3,tocIndex:1},{value:"The conversion method is different.",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"and",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"yes",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"two very important parameters.",paraId:3,tocIndex:1},{value:"domain: definition interval of map data values",paraId:4,tocIndex:1},{value:"range: interval definition of visual value",paraId:4,tocIndex:1},{value:"type of data",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow、time、sequential、quantize、quantile、threshold",paraId:5,tocIndex:1},{value:"Classification",paraId:5,tocIndex:1},{value:"cat、time",paraId:5,tocIndex:1},{value:"constant",paraId:5,tocIndex:1},{value:"identity",paraId:5,tocIndex:1},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:6,tocIndex:2},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:7,tocIndex:2},{value:"Constant measure A field is a constant that does not change.",paraId:8,tocIndex:3},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:9,tocIndex:4},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:10,tocIndex:5},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:11,tocIndex:6},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:12,tocIndex:7},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:13,tocIndex:7},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:14,tocIndex:7},{value:"A uniform non-rational B-spline interpolator function that returns the given array of colors to be converted to RGB colors.",paraId:15,tocIndex:8},{value:"const scaleColors = d3interpolate.interpolateRgbBasis(colors);\n",paraId:16,tocIndex:8},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  range?: any[];\n  neutral?: number;\n  field?: string;\n  unknown?: string;\n  ticks?: any[];\n  nice?: boolean;\n  clamp?: boolean;\n  format?: () => any;\n}\n",paraId:17,tocIndex:9}]},58170:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(29972);const t=[{value:"shape",paraId:0},{value:"Method used to specify what kind of lines the line layer draws.",paraId:0},{value:"Draw a path map.",paraId:1,tocIndex:0},{value:"line",paraId:2,tocIndex:0},{value:"Path is the most common line layer, supporting configuration of width and height, texture and animation.",paraId:2,tocIndex:0},{value:"layer.shape('line');\n",paraId:3,tocIndex:0},{value:"arc",paraId:4,tocIndex:1},{value:"The arc calculates the path of the arc through the Bezier curve algorithm and supports configuring textures and animations.",paraId:4,tocIndex:1},{value:"layer.shape('arc');\n",paraId:5,tocIndex:1},{value:"arc3d",paraId:6,tocIndex:2},{value:"A 3d arc is an arc between two vertical map points, has a height, and supports configurable textures and animations.",paraId:6,tocIndex:2},{value:"layer.shape('arc3d');\n",paraId:7,tocIndex:2},{value:"greatcircle",paraId:8,tocIndex:3},{value:"The great circle route is the closest connection between two points on the map, and supports the configuration of textures and animations.",paraId:8,tocIndex:3},{value:"layer.shape('greatcircle');\n",paraId:9,tocIndex:3},{value:"wall",paraId:10,tocIndex:4},{value:"It is a vertical map wall that supports configuration of height, texture and animation.",paraId:10,tocIndex:4},{value:"layer.shape('wall');\n",paraId:11,tocIndex:4},{value:"simple",paraId:12,tocIndex:5},{value:"Line layer, width is always",paraId:12,tocIndex:5},{value:"1px",paraId:12,tocIndex:5},{value:"。",paraId:12,tocIndex:5},{value:"layer.shape('simple');\n",paraId:13,tocIndex:5},{value:"flowline",paraId:14,tocIndex:6},{value:"Flow diagram, new in version 2.17",paraId:14,tocIndex:6}]},53508:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(81581);const t=[{value:"line layer",paraId:0},{value:"size",paraId:0},{value:"Method can set the width and height of the line.",paraId:0},{value:"If the size type is number, it represents the width of the line",paraId:1,tocIndex:0},{value:"The size type is [number, number] representing width and height respectively.",paraId:1,tocIndex:0},{value:"lineLayer.size(1); // The width of the line is 1\nlineLayer.size([1, 2]); // Width is 1, height is 2\n",paraId:2,tocIndex:0},{value:"The width value of the line layer can be set directly. All lines in the layer use one width.",paraId:3,tocIndex:1},{value:"layer.size(2);\n",paraId:4,tocIndex:1},{value:"The width of the line layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as arguments.",paraId:5,tocIndex:2},{value:"layer.source({\n  type: 'Feature',\n  properties: {\n    lineSize: 2,\n  },\n  geometry: {\n    type: 'LineString',\n    coordinates: [\n      [119.988511, 30.269614],\n      [119.9851, 30.269323],\n      [119.99271, 30.22088],\n    ],\n  },\n});\nlayer.size('lineSize');\n",paraId:6,tocIndex:2},{value:"size",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.size('type', [1, 2, 3]);\n",paraId:8,tocIndex:3},{value:"size",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual width and height of the line layer.",paraId:9,tocIndex:4},{value:"layer.size('type', (value) => {\n  switch (value) {\n    case 'path':\n      return 1;\n    case 'road':\n      return 2;\n  }\n});\n",paraId:10,tocIndex:4}]},7156:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44511);const t=[{value:"The layer data uses the latitude and longitude format, and the data source supports three data formats: JSON, GeoJSON, and CSV.",paraId:0},{value:"GeoJSON",paraId:1},{value:"CSV",paraId:2},{value:"JSON",paraId:3},{value:"🌟 Usually each type of data requires a corresponding parser to parse the data",paraId:4},{value:"// Pass in GeoJSON type data *** L7 supports it by default and does not require parser analysis\nconst data = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [106.5234375, 57.51582286553883],\n          [136.40625, 61.77312286453146],\n        ],\n      },\n    },\n  ],\n};\n\nconst layer = new LineLayer().source(data);\n",paraId:5,tocIndex:0},{value:"// Pass in txt type data\nvar data = `from,to,value,type,lng1,lat1,lng2,lat2\n鎷夎惃,仙魔タ,6.91,move_out,91.111891,29.662557,97.342625,37.373799\n鎷厎惃,鎴愰嘘,4.79,move_out,91.111891,29.662557,104.067923,30.679943\n鎷厎惃,玷夎惃,月充经,2.41,move_out,91.111891,29.662557,106.530635,29.544606\n鎷厎惃,鍖椾han,2.05,move_out,91.111891,29.662557,116.395645,39.929986\n...`;\n\nnew LineLayer().source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng2',\n    y1: 'lat2',\n  },\n});\n",paraId:6,tocIndex:1},{value:"// Pass in JSON type data\nvar data = [\n  {\n    lng: 120,\n    lat: 30,\n    lng1: 125,\n    lat1: 30\n  },\n  ...\n]\n\nvar layer = new LineLayer()\n.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat',\n    x1: 'lng1',\n    y1: 'lat1'\n  }\n})\n",paraId:7,tocIndex:2}]},90842:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(11933);const t=[{value:"style",paraId:0},{value:"The method is used to configure the style of the layer. The same layer has different",paraId:0},{value:"shape",paraId:0},{value:"graphics, different",paraId:0},{value:"shape",paraId:0},{value:"layer",paraId:0},{value:"style",paraId:0},{value:"Methods accept different parameters.",paraId:0},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:1},{value:"Universal",paraId:2,tocIndex:0},{value:"style",paraId:2,tocIndex:0},{value:"Parameters, parameters supported by all graphics.",paraId:2,tocIndex:0},{value:"style",paraId:3,tocIndex:0},{value:"type",paraId:3,tocIndex:0},{value:"describe",paraId:3,tocIndex:0},{value:"default value",paraId:3,tocIndex:0},{value:"opacity",paraId:3,tocIndex:0},{value:"number",paraId:3,tocIndex:0},{value:"Graphic transparency",paraId:3,tocIndex:0},{value:"1",paraId:3,tocIndex:0},{value:"shape",paraId:4,tocIndex:1},{value:"for",paraId:4,tocIndex:1},{value:"line",paraId:4,tocIndex:1},{value:"normal line layer.",paraId:4,tocIndex:1},{value:"line",paraId:5,tocIndex:1},{value:"Support gradient",paraId:6,tocIndex:1},{value:"Supports textures",paraId:7,tocIndex:1},{value:"Support dashed lines",paraId:8,tocIndex:1},{value:"Support arrows",paraId:9,tocIndex:1},{value:"style",paraId:10,tocIndex:1},{value:"type",paraId:10,tocIndex:1},{value:"describe",paraId:10,tocIndex:1},{value:"default value",paraId:10,tocIndex:1},{value:"borderColor",paraId:10,tocIndex:1},{value:"string",paraId:10,tocIndex:1},{value:"Graphic border color",paraId:10,tocIndex:1},{value:"#fff",paraId:10,tocIndex:1},{value:"borderWidth",paraId:10,tocIndex:1},{value:"number",paraId:10,tocIndex:1},{value:"Graphic border radius",paraId:10,tocIndex:1},{value:"0",paraId:10,tocIndex:1},{value:"blur",paraId:10,tocIndex:1},{value:"[number, number, number]",paraId:10,tocIndex:1},{value:"Graphic fuzzy distribution",paraId:10,tocIndex:1},{value:"[1, 1, 1]",paraId:10,tocIndex:1},{value:"raisingHeight",paraId:10,tocIndex:1},{value:"number",paraId:10,tocIndex:1},{value:"Lifting height",paraId:10,tocIndex:1},{value:"0",paraId:10,tocIndex:1},{value:"heightfixed",paraId:10,tocIndex:1},{value:"boolean",paraId:10,tocIndex:1},{value:"Does the lifting height vary?",paraId:10,tocIndex:1},{value:"zoom",paraId:10,tocIndex:1},{value:"Variety",paraId:10,tocIndex:1},{value:"false",paraId:10,tocIndex:1},{value:"shape",paraId:11,tocIndex:2},{value:"for",paraId:11,tocIndex:2},{value:"arc",paraId:11,tocIndex:2},{value:"Plane arc.",paraId:11,tocIndex:2},{value:"arc",paraId:12,tocIndex:2},{value:"Support gradient",paraId:13,tocIndex:2},{value:"Supports textures",paraId:14,tocIndex:2},{value:"Support dashed lines",paraId:15,tocIndex:2},{value:"style",paraId:16,tocIndex:2},{value:"type",paraId:16,tocIndex:2},{value:"describe",paraId:16,tocIndex:2},{value:"default value",paraId:16,tocIndex:2},{value:"segmentNumber",paraId:16,tocIndex:2},{value:"number",paraId:16,tocIndex:2},{value:"Arc segmentation, the more segments, the smoother and the greater the consumption.",paraId:16,tocIndex:2},{value:"30",paraId:16,tocIndex:2},{value:"thetaOffset",paraId:16,tocIndex:2},{value:"number",paraId:16,tocIndex:2},{value:"The radian parameter of the arc",paraId:16,tocIndex:2},{value:"0.314",paraId:16,tocIndex:2},{value:"shape",paraId:17,tocIndex:3},{value:"for",paraId:17,tocIndex:3},{value:"arc3d",paraId:17,tocIndex:3},{value:"arc layer.",paraId:17,tocIndex:3},{value:"arc3d",paraId:18,tocIndex:3},{value:"Support gradient",paraId:19,tocIndex:3},{value:"Supports textures",paraId:20,tocIndex:3},{value:"Support dashed lines",paraId:21,tocIndex:3},{value:"style",paraId:22,tocIndex:3},{value:"type",paraId:22,tocIndex:3},{value:"describe",paraId:22,tocIndex:3},{value:"default value",paraId:22,tocIndex:3},{value:"segmentNumber",paraId:22,tocIndex:3},{value:"number",paraId:22,tocIndex:3},{value:"Arc segmentation, the more segments, the smoother and the greater the consumption.",paraId:22,tocIndex:3},{value:"30",paraId:22,tocIndex:3},{value:"shape",paraId:23,tocIndex:4},{value:"It is a large arc layer.",paraId:23,tocIndex:4},{value:"greatcircle",paraId:24,tocIndex:4},{value:"Support gradient",paraId:25,tocIndex:4},{value:"Supports textures",paraId:26,tocIndex:4},{value:"Support dashed lines",paraId:27,tocIndex:4},{value:"style",paraId:28,tocIndex:4},{value:"type",paraId:28,tocIndex:4},{value:"describe",paraId:28,tocIndex:4},{value:"default value",paraId:28,tocIndex:4},{value:"segmentNumber",paraId:28,tocIndex:4},{value:"number",paraId:28,tocIndex:4},{value:"Arc segmentation, the more segments, the smoother and the greater the consumption.",paraId:28,tocIndex:4},{value:"30",paraId:28,tocIndex:4},{value:"style",paraId:29,tocIndex:5},{value:"type",paraId:29,tocIndex:5},{value:"describe",paraId:29,tocIndex:5},{value:"default value",paraId:29,tocIndex:5},{value:"opacity",paraId:29,tocIndex:5},{value:"number",paraId:29,tocIndex:5},{value:"Transparency, supports data mapping",paraId:29,tocIndex:5},{value:"1",paraId:29,tocIndex:5},{value:"strokeOpacity",paraId:29,tocIndex:5},{value:"number",paraId:29,tocIndex:5},{value:"stroke transparency",paraId:29,tocIndex:5},{value:"30",paraId:29,tocIndex:5},{value:"stroke",paraId:29,tocIndex:5},{value:"number",paraId:29,tocIndex:5},{value:"Arc segmentation, the more segments, the smoother and the greater the consumption.",paraId:29,tocIndex:5},{value:"#000",paraId:29,tocIndex:5},{value:"strokeWidth",paraId:29,tocIndex:5},{value:"number",paraId:29,tocIndex:5},{value:"stroke width",paraId:29,tocIndex:5},{value:"1",paraId:29,tocIndex:5},{value:"gapWidth",paraId:29,tocIndex:5},{value:"number",paraId:29,tocIndex:5},{value:"The distance between two lines in different directions",paraId:29,tocIndex:5},{value:"2",paraId:29,tocIndex:5},{value:"offsets",paraId:29,tocIndex:5},{value:"[number,number]",paraId:29,tocIndex:5},{value:"Offsets at both ends, supporting data mapping",paraId:29,tocIndex:5},{value:"[0,0]",paraId:29,tocIndex:5},{value:"flowline opacity and offsets support data mapping, data-driven setting of data size",paraId:30,tocIndex:5},{value:"layer.style({\n  opacity: {\n    field: 'count', // map field\n    value: [0.2,0.4,0.6,0.8], // Mapping value, supports callback function, supports setting scale\n  }\n\n// field and value are equivalent to layer.color('count',[0.2,0.4,0.6,0.8])\n",paraId:31,tocIndex:6},{value:"layer.style({\n  offsets:{\n     field: 'count',\n     values:() => {\n      return [10 + Math.random()*20, 10 + Math.random()*20]\n     }\n})\n",paraId:32,tocIndex:7},{value:"shape",paraId:33,tocIndex:8},{value:"for",paraId:33,tocIndex:8},{value:"wall",paraId:33,tocIndex:8},{value:"Geofence arc layer.",paraId:33,tocIndex:8},{value:"wall",paraId:34,tocIndex:8},{value:"Support gradient",paraId:35,tocIndex:8},{value:"Supports textures",paraId:36,tocIndex:8},{value:"shape",paraId:37,tocIndex:9},{value:"for",paraId:37,tocIndex:9},{value:"simple",paraId:37,tocIndex:9},{value:"Simple line layer.",paraId:37,tocIndex:9},{value:"simple",paraId:38,tocIndex:9},{value:"Support gradient",paraId:39,tocIndex:9},{value:"line",paraId:40,tocIndex:10},{value:"Line layers support configuring arrows, which have additional styles.",paraId:41,tocIndex:10},{value:"layer.style({\n  arrow: {\n    enable: true,\n    arrowWidth: 2,\n    arrowHeight: 3,\n    tailWidth: 1,\n  },\n});\n",paraId:42,tocIndex:10},{value:"style",paraId:43,tocIndex:10},{value:"type",paraId:43,tocIndex:10},{value:"describe",paraId:43,tocIndex:10},{value:"default value",paraId:43,tocIndex:10},{value:"arrow",paraId:43,tocIndex:10},{value:"IArrowOption",paraId:43,tocIndex:10},{value:"Arrow style",paraId:43,tocIndex:10},{value:"/",paraId:43,tocIndex:10},{value:"arrowWidth",paraId:43,tocIndex:10},{value:"number",paraId:43,tocIndex:10},{value:"Arrow width",paraId:43,tocIndex:10},{value:"2",paraId:43,tocIndex:10},{value:"arrowHeight",paraId:43,tocIndex:10},{value:"number",paraId:43,tocIndex:10},{value:"length of arrow",paraId:43,tocIndex:10},{value:"3",paraId:43,tocIndex:10},{value:"tailWidth",paraId:43,tocIndex:10},{value:"number",paraId:43,tocIndex:10},{value:"Arrow tail width",paraId:43,tocIndex:10},{value:"1",paraId:43,tocIndex:10},{value:"line、arc、arc3d、greatcircle、wall、simple",paraId:44,tocIndex:11},{value:"The line layer supports configuring gradient effects, which will be overwritten after configuring the gradient effect.",paraId:45,tocIndex:11},{value:"layer.color",paraId:45,tocIndex:11},{value:"Method to set the color.",paraId:45,tocIndex:11},{value:"style",paraId:46,tocIndex:11},{value:"type",paraId:46,tocIndex:11},{value:"describe",paraId:46,tocIndex:11},{value:"default value",paraId:46,tocIndex:11},{value:"sourceColor",paraId:46,tocIndex:11},{value:"IColor",paraId:46,tocIndex:11},{value:"Line start color",paraId:46,tocIndex:11},{value:"/",paraId:46,tocIndex:11},{value:"targetColor",paraId:46,tocIndex:11},{value:"IColor",paraId:46,tocIndex:11},{value:"Line end color",paraId:46,tocIndex:11},{value:"/",paraId:46,tocIndex:11},{value:"linearDir",paraId:46,tocIndex:11},{value:"ILinearDir",paraId:46,tocIndex:11},{value:"Line gradient direction",paraId:46,tocIndex:11},{value:"vertical",paraId:46,tocIndex:11},{value:"const color = `rgb(200, 100, 50)`;\nconst color2 = '#ff0';\n",paraId:47,tocIndex:12},{value:"vertical vertical (along the direction)",paraId:48,tocIndex:13},{value:"horizontal",paraId:48,tocIndex:13},{value:"type ILinearDir = 'vertical' | 'horizontal';\n",paraId:49,tocIndex:13},{value:"line、arc、arc3d、greatcircle",paraId:50,tocIndex:14},{value:"Line layers support textures and texture animations, and texture styles have their own parameters.",paraId:51,tocIndex:14},{value:"style",paraId:52,tocIndex:14},{value:"type",paraId:52,tocIndex:14},{value:"describe",paraId:52,tocIndex:14},{value:"default value",paraId:52,tocIndex:14},{value:"lineTexture",paraId:52,tocIndex:14},{value:"boolean",paraId:52,tocIndex:14},{value:"When to turn on texture capabilities",paraId:52,tocIndex:14},{value:"false",paraId:52,tocIndex:14},{value:"textureBlend",paraId:52,tocIndex:14},{value:"ITextureBlend",paraId:52,tocIndex:14},{value:"Texture blending method",paraId:52,tocIndex:14},{value:"normal",paraId:52,tocIndex:14},{value:"iconStep",paraId:52,tocIndex:14},{value:"number",paraId:52,tocIndex:14},{value:"The spacing between texture maps arranged above the line layer",paraId:52,tocIndex:14},{value:"100",paraId:52,tocIndex:14},{value:"The texture of the line layer supports two types when blended with the color of the line itself.",paraId:53,tocIndex:15},{value:"normal",paraId:53,tocIndex:15},{value:"and",paraId:53,tocIndex:15},{value:"replace",paraId:53,tocIndex:15},{value:"。",paraId:53,tocIndex:15},{value:"normal texture and line color blending",paraId:54,tocIndex:15},{value:"replace Replace line color using texture",paraId:54,tocIndex:15},{value:"type ITextureBlend = 'normal' | 'replace';\n",paraId:55,tocIndex:15},{value:"✨ animate",paraId:56,tocIndex:16},{value:"\nWhen the line layer (shape is arc/arc3d) turns on the animation mode, the distribution of the texture on the line layer will also be related to the parameters of animate",paraId:56,tocIndex:16},{value:"The number of textures arranged on a line layer is roughly duration/interval",paraId:57,tocIndex:16},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// At this time, the number of texture maps is duration / interval = 5\n",paraId:58,tocIndex:16},{value:"✨ textureBlend parameters",paraId:59,tocIndex:16},{value:"\nBy controlling the textureBlend parameter in the style method, we can control the blending of texture layers and line layers.",paraId:59,tocIndex:16},{value:"normal",paraId:60,tocIndex:16},{value:"replace",paraId:60,tocIndex:16},{value:".style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:61,tocIndex:16},{value:"line、arc、arc3d、greatcircle",paraId:62,tocIndex:17},{value:"The line layer supports configuring dashed lines, which have their own additional style parameters.",paraId:63,tocIndex:17},{value:"layer.style({\n    lineType: 'dash'\n    dashArray: [5, 5]\n})\n",paraId:64,tocIndex:17},{value:"style",paraId:65,tocIndex:17},{value:"type",paraId:65,tocIndex:17},{value:"describe",paraId:65,tocIndex:17},{value:"default value",paraId:65,tocIndex:17},{value:"lineType",paraId:65,tocIndex:17},{value:"ILineType",paraId:65,tocIndex:17},{value:"Line category",paraId:65,tocIndex:17},{value:"solid",paraId:65,tocIndex:17},{value:"dashArray",paraId:65,tocIndex:17},{value:"IDashArray",paraId:65,tocIndex:17},{value:"dotted line interval",paraId:65,tocIndex:17},{value:"/",paraId:65,tocIndex:17},{value:"solid solid line",paraId:66,tocIndex:18},{value:"dash dashed line",paraId:66,tocIndex:18},{value:"dashArray",paraId:67,tocIndex:19},{value:"only at",paraId:67,tocIndex:19},{value:"ILineType",paraId:67,tocIndex:19},{value:"for",paraId:67,tocIndex:19},{value:"dashed",paraId:67,tocIndex:19},{value:"will take effect.",paraId:67,tocIndex:19},{value:"// len1 solid line length len2 interval length\ntype IDashArray = [len1: number, len2: number]\n",paraId:68,tocIndex:19}]},1362:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(21842);const t=[{value:"The line layer supports texture mapping and various expression forms, through",paraId:0},{value:"scene.addImage",paraId:0},{value:"Methods are added to global resources using",paraId:0},{value:"texture",paraId:0},{value:"Method specifies the texture.",paraId:0},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // interval\n    duration: 1, // duration, delay\n    trailLength: 2, // streamline length\n  })\n  .style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 20, //Set the spacing of the texture\n  });\n",paraId:1},{value:"\n  ",paraId:2},{value:"\n    ",paraId:2},{value:"\n  ",paraId:2},{value:"lineTexture specifies whether to enable texture mapping capabilities",paraId:3},{value:"iconStep specifies the interval at which the texture is arranged on the line layer",paraId:3},{value:"Online case",paraId:4},{value:"✨ animate",paraId:5,tocIndex:0},{value:"\nCurrent line layer (",paraId:5,tocIndex:0},{value:"shape",paraId:5,tocIndex:0},{value:"for",paraId:5,tocIndex:0},{value:"arc",paraId:5,tocIndex:0},{value:"/",paraId:5,tocIndex:0},{value:"arc3d",paraId:5,tocIndex:0},{value:") When animation mode is turned on, the distribution of textures on the line layer will also be consistent with",paraId:5,tocIndex:0},{value:"animate",paraId:5,tocIndex:0},{value:"parameters related.",paraId:5,tocIndex:0},{value:"The number of textures arranged on a line layer is roughly duration/interval",paraId:6,tocIndex:0},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// At this time, the number of texture maps is duration / interval = 5\n",paraId:7,tocIndex:0},{value:"✨ textureBlend parameters",paraId:8,tocIndex:0},{value:"\nBy controlling the textureBlend parameter in the style method, we can control the blending of texture layers and line layers.",paraId:8,tocIndex:0},{value:"normal",paraId:9,tocIndex:0},{value:"replace",paraId:9,tocIndex:0},{value:".style({\n    lineTexture: true, // Enable line mapping function\n    iconStep: 30, // Set the spacing of the texture\n    textureBlend: 'replace', //Set the texture blending method. The default value is normal. The optional values ​​are normal/replace.\n  });\n",paraId:10,tocIndex:0},{value:"Online case",paraId:11}]},84800:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(65483);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"The Baidu map currently supported by L7 is",paraId:2,tocIndex:0},{value:"APIGL version",paraId:2,tocIndex:0},{value:", which is also the officially recommended version of Baidu Maps.",paraId:2,tocIndex:0},{value:"Before using Baidu Maps, you need to apply for a Baidu Map key. How to apply for a Baidu Map key?",paraId:3,tocIndex:1},{value:"Click me to view",paraId:3,tocIndex:1},{value:"。",paraId:3,tocIndex:1},{value:"⚠️ L7 has a default token set internally, which is for testing only",paraId:4,tocIndex:1},{value:"import { BaiduMap } from '@antv/l7-maps';\n",paraId:5,tocIndex:2},{value:"L7 provides BaiduMap to directly instantiate the map, and can also instantiate the map through external input.",paraId:6,tocIndex:3},{value:"It is recommended for new projects to instantiate BaiduMap directly. Existing map projects can be passed in externally to quickly access L7 capabilities.",paraId:7,tocIndex:3},{value:"import { BaiduMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new BaiduMap({\n    // Fill in the Baidu map key. This is a test token and cannot be used for production.\n    token: 'zLhopYPPERGtpGOgimcdKcCimGRyyIsh',\n    center: [103, 30],\n    pitch: 4,\n    zoom: 10,\n    rotation: 19,\n  }),\n});\n",paraId:8,tocIndex:4},{value:"⚠️ The scene id parameter needs to be in the same container as the BMapGL.Map instance.",paraId:9,tocIndex:5},{value:"⚠️ The incoming map instance needs to be imported by yourself",paraId:10,tocIndex:5},{value:"Baidu Map API",paraId:10,tocIndex:5},{value:"const map = new BMapGL.Map('map', {\n  zoom: 11, // Initialize map level\n  minZoom: 4,\n  maxZoom: 23,\n  enableWheelZoom: true,\n});\n\nconst scene = new Scene({\n  id: 'map',\n  map: new BaiduMap({\n    mapInstance: map,\n  }),\n});\n",paraId:11,tocIndex:5},{value:"BaiduMap ",paraId:12,tocIndex:5},{value:"Example address",paraId:13,tocIndex:5},{value:", external incoming",paraId:12,tocIndex:5},{value:"Example address",paraId:14,tocIndex:5},{value:" ",paraId:15,tocIndex:7},{value:"number",paraId:15,tocIndex:7},{value:" ",paraId:15,tocIndex:7},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:16,tocIndex:7},{value:"Map initial center latitude and longitude {Lnglat}",paraId:17,tocIndex:8},{value:"Map initial pitch angle {number} default 0",paraId:18,tocIndex:9},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:19,tocIndex:10},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:20,tocIndex:11},{value:"Whether the map can be rotated {Boolean} default true",paraId:21,tocIndex:12},{value:"Scene unified agent, see",paraId:22,tocIndex:13},{value:"Scene document",paraId:23,tocIndex:13},{value:"or",paraId:24,tocIndex:13},{value:"scene.map directly calls the map instance method",paraId:25,tocIndex:13}]},63116:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(2831);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"AMap official website",paraId:2,tocIndex:0},{value:"AMap API configuration parameters",paraId:3,tocIndex:1},{value:"token\nRegister AMap",paraId:4,tocIndex:1},{value:"API token",paraId:4,tocIndex:1},{value:"const L7AMap = new GaodeMap({\n  pitch: 35.210526315789465,\n  style: 'dark',\n  center: [104.288144, 31.239692],\n  zoom: 4.4,\n  token: 'xxxx-token',\n  plugin: [], // Can not be set\n});\n",paraId:5,tocIndex:2},{value:" ",paraId:6,tocIndex:4},{value:"number",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:7,tocIndex:4},{value:"Map initial center latitude and longitude {Lnglat}",paraId:8,tocIndex:5},{value:"Map initial pitch angle {number} default 0",paraId:9,tocIndex:6},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:10,tocIndex:7},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:11,tocIndex:8},{value:"Whether the map can be rotated {Boolean} default true",paraId:12,tocIndex:9},{value:"Scene unified agent, see",paraId:13,tocIndex:10},{value:"Scene document",paraId:14,tocIndex:10},{value:"or",paraId:15,tocIndex:10},{value:"scene.map directly calls the map instance method",paraId:16,tocIndex:10},{value:"In order to support the ability of existing map projects to quickly access L7, L7 provides a method for passing in map instances. If you are a new project, it is recommended to use Scene to initialize the map.",paraId:17,tocIndex:11},{value:"⚠️ The scene id parameter requires the Map instances of the map to be in the same container.",paraId:18,tocIndex:11},{value:"⚠️ When passing in a map instance, you need to introduce the API of the relevant map yourself",paraId:19,tocIndex:11},{value:"⚠️ Set viewMode to 3D mode (GaodeMap2.0 supports 2D mode and does not need to be set)",paraId:20,tocIndex:11},{value:"const map = new AMap.Map('map', {\n  viewMode: '3D',\n  resizeEnable: true, // Whether to monitor map container size changes\n  zoom: 11, // Initialize map level\n  center: [116.397428, 39.90923], // Initialize the map center point\n});\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    mapInstance: map,\n  }),\n});\n",paraId:21,tocIndex:12},{value:"Example address",paraId:22,tocIndex:12},{value:"code address",paraId:23,tocIndex:12},{value:"Example address (2D)",paraId:24,tocIndex:12},{value:"code address",paraId:25,tocIndex:12},{value:" ",paraId:26,tocIndex:14},{value:"number",paraId:26,tocIndex:14},{value:" ",paraId:26,tocIndex:14},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:27,tocIndex:14},{value:"Map initial center latitude and longitude {Lnglat}",paraId:28,tocIndex:15},{value:"Map initial pitch angle {number} default 0",paraId:29,tocIndex:16},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:30,tocIndex:17},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:31,tocIndex:18},{value:"Whether the map can be rotated {Boolean} default true",paraId:32,tocIndex:19},{value:"Scene unified agent, see",paraId:33,tocIndex:20},{value:"Scene document",paraId:34,tocIndex:20},{value:"or",paraId:35,tocIndex:20},{value:"scene.map directly calls the map instance method",paraId:36,tocIndex:20},{value:"const scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [116.475, 39.99],\n    pitch: 0,\n    zoom: 13,\n    plugin: ['AMap.ToolBar', 'AMap.LineSearch'],\n  }),\n});\n// plugin: ['AMap.ToolBar', 'AMap.LineSearch'],\n// In order to use the capabilities of the corresponding plug-in, the corresponding plug-in should first be registered in plugin\n\n//The loaded AMap will be mounted on the global window object\nscene.on('loaded', () => {\n  window.AMap.plugin(['AMap.ToolBar', 'AMap.LineSearch'], () => {\n    // add control\n    scene.map.addControl(new AMap.ToolBar());\n\n    var linesearch = new AMap.LineSearch({\n      pageIndex: 1, //Page number, default value is 1\n      pageSize: 1, //The number of results displayed on a single page, the default value is 20, the maximum value is 50\n      city: 'Beijing', //Limit the query city, which can be the city name (Chinese/Chinese full spelling), city code, the default value is \"National\"\n      extensions: 'all', //Whether to return bus route details, the default value is \"base\"\n    });\n\n    //Execute bus route keyword query\n    linesearch.search('536', function (status, result) {\n      //Print status information status and result information result\n      // ...do something\n    });\n  });\n});\n",paraId:37,tocIndex:21},{value:"Online case",paraId:38}]},54844:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(51815);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"Leaflet official website",paraId:2,tocIndex:0},{value:"Leaflet GitHub",paraId:2,tocIndex:0},{value:"L7-Leaflet is a third-party plug-in. L7 itself is not built-in and needs to be followed independently.",paraId:3,tocIndex:1},{value:"L7-Leaflet GitHub",paraId:4,tocIndex:1},{value:"L7-Leaflet Demo ",paraId:4,tocIndex:1},{value:"npm install  '@antv/l7-leaflet'\n",paraId:5,tocIndex:1},{value:"or",paraId:6,tocIndex:1},{value:'<script src="https://unpkg.com/@antv/l7-leaflet"><\/script>\n',paraId:7,tocIndex:1},{value:"import { Scene } from '@antv/l7';\nimport * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Map } from '@antv/l7-leaflet';\nconst scene = new Scene({\n  id: 'map',\n  map: new Map({\n    pitch: 0,\n    center: [112, 37.8],\n    zoom: 3,\n    minZoom: 1,\n  }),\n});\n",paraId:8,tocIndex:2},{value:"import * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { LineLayer } from '@antv/l7';\nimport { L7Layer } from '@antv/l7-leaflet';\n\nconst map = L.map('map', {\n  minZoom: 1,\n}).setView([30, 112], 3);\nconst mapType = 'vec';\nL.tileLayer(\n  'https://t{s}.tianditu.gov.cn/' +\n    mapType +\n    '_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=' +\n    mapType +\n    '&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}&tk=b72aa81ac2b3cae941d1eb213499e15e',\n  {\n    subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\n    attribution:\n      '© <a href=\"http://lbs.tianditu.gov.cn/home.html\">天地图 GS(2022)3124号 - 甲测资字1100471</a>',\n  },\n).addTo(map);\n\nconst l7layer = new L7Layer().addTo(map);\nconst scene = l7layer.getScene();\n",paraId:9,tocIndex:3}]},39693:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(94400);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. The third-party maps are created and managed uniformly through Scene.\nJust pass in the map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"Map is an independent map engine that does not require basemaps or loading map tile services, and does not require Token.",paraId:2,tocIndex:0},{value:"import { Map } from '@antv/l7-maps';\n",paraId:3,tocIndex:1},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { Map } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Map({\n    zoom: 10,\n    minZoom: 0,\n    maxZoom: 18,\n  }),\n});\n\nscene.on('loaded', () => {\n  // 添加地图底图\n  const layer = new RasterLayer();\n  layer.source(\n    'https://webrd0{1-3}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\n    {\n      parser: {\n        type: 'rasterTile',\n        tileSize: 256,\n        minZoom: 2,\n        maxZoom: 18,\n      },\n    },\n  );\n  scene.addLayer(layer);\n});\n",paraId:4,tocIndex:2},{value:" ",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" ",paraId:5,tocIndex:4},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:6,tocIndex:4},{value:"Map initial center latitude and longitude {Lnglat}",paraId:7,tocIndex:5},{value:"Map initial pitch angle {number} default 0",paraId:8,tocIndex:6},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:9,tocIndex:7},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:10,tocIndex:8},{value:"Whether the map can be rotated {Boolean} default true",paraId:11,tocIndex:9},{value:"Scene unified agent, see",paraId:12,tocIndex:10},{value:"Scene document",paraId:13,tocIndex:10},{value:"or",paraId:14,tocIndex:10},{value:"scene.map directly calls the map instance method",paraId:15,tocIndex:10}]},70692:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(24658);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"Mapbox-gl official website",paraId:2,tocIndex:0},{value:" Mapbox-gl GitHub",paraId:2,tocIndex:0},{value:"Apply for token",paraId:3,tocIndex:1},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    zoom: 10,\n    minZoom: 0,\n    maxZoom: 18,\n    token: 'xxxx', //必须\n  }),\n});\n",paraId:4,tocIndex:2},{value:"mapboxgl.accessToken = 'xxxx - token';\nconst map = new mapboxgl.Map({\n  container: 'map', // container id\n  style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n  center: [-74.5, 40], // starting position [lng, lat]\n  zoom: 9, // starting zoom\n});\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    mapInstance: map,\n  }),\n});\n",paraId:5,tocIndex:3},{value:" ",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:7,tocIndex:5},{value:"Map initial center latitude and longitude {Lnglat}",paraId:8,tocIndex:6},{value:"Map initial pitch angle {number} default 0",paraId:9,tocIndex:7},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:10,tocIndex:8},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:11,tocIndex:9},{value:"Whether the map can be rotated {Boolean} default true",paraId:12,tocIndex:10},{value:"Scene unified agent, see",paraId:13,tocIndex:11},{value:"Scene document",paraId:14,tocIndex:11},{value:"or",paraId:15,tocIndex:11},{value:"scene.map directly calls the map instance method",paraId:16,tocIndex:11}]},3379:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(49627);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"MapLibre",paraId:2,tocIndex:0},{value:" MapLibre GitHub",paraId:2,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { MapLibre } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new MapLibre({\n    zoom: 10,\n    style: 'https://api.maptiler.com/maps/streets/style.json?key=YbCPLULzWdf1NplssEIc', // style URL\n    minZoom: 0,\n    maxZoom: 18,\n  }),\n});\n",paraId:3,tocIndex:1},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { MapLibre } from '@antv/l7-maps';\nvar map = new maplibregl.Map({\n  container: 'map', // container id\n  style: 'https://demotiles.maplibre.org/style.json', // style URL\n  center: [0, 0], // starting position [lng, lat]\n  zoom: 1, // starting zoom\n});\n\nconst scene = new Scene({\n  id: 'map',\n  map: new MapLibre({\n    mapInstance: map,\n  }),\n});\n",paraId:4,tocIndex:2},{value:" ",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" ",paraId:5,tocIndex:4},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:6,tocIndex:4},{value:"Map initial center latitude and longitude {Lnglat}",paraId:7,tocIndex:5},{value:"Map initial pitch angle {number} default 0",paraId:8,tocIndex:6},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:9,tocIndex:7},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:10,tocIndex:8},{value:"Whether the map can be rotated {Boolean} default true",paraId:11,tocIndex:9},{value:"Scene unified agent, see",paraId:12,tocIndex:10},{value:"Scene document",paraId:13,tocIndex:10},{value:"or",paraId:14,tocIndex:10},{value:"scene.map directly calls the map instance method",paraId:15,tocIndex:10}]},31055:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(36482);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"The Tencent map currently supported by L7 is",paraId:2,tocIndex:0},{value:"JavaScript API GL",paraId:2,tocIndex:0},{value:", which is also the officially recommended version of Tencent Maps.",paraId:2,tocIndex:0},{value:"Before using Tencent Map, you need to register a Tencent Map account and apply for a Key. How to apply for a Tencent Map key?",paraId:3,tocIndex:1},{value:"Click me to view",paraId:3,tocIndex:1},{value:".",paraId:3,tocIndex:1},{value:"⚠️ L7 has a default token set internally, which is for testing only.",paraId:4,tocIndex:1},{value:"import { TencentMap } from '@antv/l7-maps';\n",paraId:5,tocIndex:2},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { TencentMap } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new TencentMap({\n    zoom: 10,\n    minZoom: 5,\n    maxZoom: 18,\n  }),\n});\n",paraId:6,tocIndex:3},{value:"Tencentmap ",paraId:7,tocIndex:3},{value:"Example address",paraId:8,tocIndex:3},{value:"、Tencentmap instantiate",paraId:7,tocIndex:3},{value:"Example address",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:5},{value:"number",paraId:10,tocIndex:5},{value:" ",paraId:10,tocIndex:5},{value:"Initial map display level {number} Mapbox (0-24) AMap (2-19)",paraId:11,tocIndex:5},{value:"Map initial center latitude and longitude {Lnglat}",paraId:12,tocIndex:6},{value:"Map initial pitch angle {number} default 0",paraId:13,tocIndex:7},{value:"Minimum map zoom level {number} default 0 Mapbox 0-24) Gaode (2-19)",paraId:14,tocIndex:8},{value:"Maximum map zoom level {number} default 22 Mapbox (0-24) AMap (2-19)",paraId:15,tocIndex:9},{value:"Whether the map can be rotated {Boolean} default true",paraId:16,tocIndex:10},{value:"Scene unified agent, see",paraId:17,tocIndex:11},{value:"Scene document",paraId:18,tocIndex:11},{value:"or",paraId:19,tocIndex:11},{value:"scene.map directly calls the map instance method",paraId:20,tocIndex:11}]},47336:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(14598);const t=[{value:"L7 geographical visualization focuses on the visual expression of geographical data. The map layer needs to rely on third-party maps. Third-party maps are created and managed uniformly through Scene. You only need to pass in map configuration items through Scene.",paraId:0,tocIndex:0},{value:"L7 internally resolves the differences between different map basemaps, and at the same time, L7 manages the operation methods of the map in a unified manner.",paraId:1,tocIndex:0},{value:"Tiantu official website",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"Tiantu JavaScript API 4.0 supports HTTP and HTTPS, is free and open to the public, and can be used directly. Before using the API, you need to",paraId:3,tocIndex:1},{value:"Apply for application key",paraId:3,tocIndex:1},{value:".",paraId:3,tocIndex:1}]},46952:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(54561);const t=[{value:"CanvasLayer allows users to customize the content and style of the layer through canvas drawing methods. Compared to Marker by creating the actual DOM, CanvasLayer undoubtedly has better performance.",paraId:0},{value:"import { CanvasLayer } from '@antv/l7';\nconst layer = new CanvasLayer({}).style({\n  drawingOnCanvas: (option) => {\n    const { size, ctx, mapService } = option;\n    const [width, height] = size;\n\n    ctx.clearRect(0, 0, width, height);\n    // canvas 绘制\n  },\n});\n",paraId:1,tocIndex:0},{value:"Online case",paraId:2},{value:"🌟 CanvasLayer does not need to set source.",paraId:3,tocIndex:1},{value:"🌟 CanvasLayer does not support interactive actions yet.",paraId:4,tocIndex:2},{value:"When the user is drawing a canvas animation, in order to update the animation, the animate method needs to be executed.",paraId:5,tocIndex:3},{value:"layer.animate(true);\n",paraId:6,tocIndex:3},{value:"Online case",paraId:7},{value:"Each time a CanvasLayer is created, L7 will generate an instance of the Canvas DOM. We adjust the level of the CanvasLayer by setting the zIndex value.",paraId:8,tocIndex:5},{value:"Specify the update method of CanavsLayer. update has two values ​​'always' and 'dragend'. The default is 'always'",paraId:9,tocIndex:6},{value:"always always updated",paraId:10,tocIndex:6},{value:"dragend The map is updated after dragging/zooming.",paraId:10,tocIndex:6},{value:"options: {\n  canvas: HTMLCanvasELement;\n  ctx: CanvasRenderingContext2D;\n  mapService: IMapService;\n  size: [number, number];\n}\n",paraId:11,tocIndex:7},{value:"drawingOnCanvas, this is a function that accepts relevant parameters. The user writes the canvas drawing logic in this function.",paraId:12,tocIndex:7},{value:"canvas DOM node generated by canvas CanvasLayer",paraId:13,tocIndex:7},{value:"The context of the canvas DOM generated by ctx",paraId:13,tocIndex:7},{value:"mapService mapService of the current map, mainly provides lngLatToContainer method",paraId:13,tocIndex:7},{value:"size The actual drawing range size of the current view",paraId:13,tocIndex:7},{value:"This method is provided by the mapService parameter and is mainly used to convert latitude and longitude point data into xy coordinates that can be used in Canvas drawing in real time, so as to achieve the correspondence between the drawing content and the location of the map.",paraId:14,tocIndex:8},{value:"var center = [120, 30];\nvar centerXY = mapService.lngLatToContainer(center); // {x: 100, y: 100}\n// centerXY means 100px from the upper left corner of the view in the x-axis direction and 100px in the y-axis direction\n// canvas drawing coordinate system\n",paraId:15,tocIndex:8}]},44822:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(23858);const t=[{value:"CityBuildingLayer",paraId:0,tocIndex:0},{value:"Used to build 3D models of urban buildings and display urban buildings",paraId:0,tocIndex:0},{value:"import { CityBuildingLayer } from '@antv/l7';\n",paraId:1,tocIndex:1},{value:"Whether to enable animation effects, only supported",paraId:2,tocIndex:2},{value:"boolean",paraId:2,tocIndex:2},{value:"or",paraId:2,tocIndex:2},{value:"enable: boolean",paraId:2,tocIndex:2},{value:"Configuration items",paraId:2,tocIndex:2},{value:"layer.animate(true);\n\nlayer.animatte({\n  enable: true,\n});\n",paraId:3,tocIndex:2},{value:"✨ After turning on animate, the animation of lighting up the windows will be turned on by default",paraId:4,tocIndex:2},{value:"\n🌟 Turning on animate animation is the prerequisite for turning on sweeping animation.",paraId:4,tocIndex:2},{value:"baseColor building color,",paraId:5,tocIndex:3},{value:"windowColor: window color,",paraId:5,tocIndex:3},{value:"brightColor: brighten window color",paraId:5,tocIndex:3},{value:"sweep: Configuration items related to circular sweep and diffusion animation\n",paraId:5,tocIndex:3},{value:"enable: whether to enable scanning and diffusion",paraId:6,tocIndex:3},{value:"sweepRadius: spread radius",paraId:6,tocIndex:3},{value:"sweepCenter: diffusion center store coordinates",paraId:6,tocIndex:3},{value:"sweepColor: spread color",paraId:6,tocIndex:3},{value:"sweepSpeed: diffusion speed",paraId:6,tocIndex:3},{value:"baseColor: base color when sweep is enabled",paraId:5,tocIndex:3},{value:"Other style configuration items are the same as",paraId:7,tocIndex:3},{value:"baselayer#style",paraId:8},{value:"Custom animation frequency requires turning off the default animation by",paraId:9,tocIndex:4},{value:"setLight",paraId:9,tocIndex:4},{value:"Method keeps updating time",paraId:9,tocIndex:4},{value:"parameter\ntime: time milliseconds",paraId:10,tocIndex:5},{value:"import { CityBuildingLayer, Scene } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'dark',\n    center: [121.507674, 31.223043],\n    pitch: 65.59312320916906,\n    zoom: 15.4,\n    minZoom: 15,\n    maxZoom: 18,\n  }),\n});\nconst buildingLayer = new CityBuildingLayer();\nbuildingLayer.animate(false);\n\nlet i = 0;\nfunction step() {\n  buildingLayer.setLight(i++);\n  scene.render();\n  requestAnimationFrame(step);\n}\n\nscene.on('loaded', () => {\n  step();\n});\n",paraId:11,tocIndex:5},{value:"import { Scene, CityBuildingLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'dark',\n    center: [120.173104, 30.244072],\n    pitch: 70.41138037735848,\n    zoom: 17.18,\n    rotation: 2.24, // 358.7459759480504\n    minZoom: 14,\n  }),\n});\n\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/rmsportal/ggFwDClGjjvpSMBIrcEx.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const layer = new CityBuildingLayer({\n        zIndex: 0,\n      });\n      layer.source(data);\n      scene.addLayer(layer);\n    });\n});\n",paraId:12,tocIndex:6},{value:"Online case",paraId:13}]},99890:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(17547);const t=[{value:"PlaneGeometry is a general plane geometry graphic provided by L7, which is expressed as a ground-fitting rectangle that can be customized with position, size and number of segments.",paraId:0,tocIndex:0},{value:"Set a normal rectangle",paraId:1,tocIndex:1},{value:"import { Scene, GeometryLayer } from '@antv/l7';\n\nconst layer = new GeometryLayer()\n  .shape('plane')\n  .style({\n    opacity: 0.8,\n    width: 0.074,\n    height: 0.061,\n    center: [120.1025, 30.2594],\n  })\n  .active(true)\n  .color('#ff0');\nscene.addLayer(layer);\n",paraId:2,tocIndex:1},{value:"Online case",paraId:3},{value:"Set 3D terrain mode",paraId:4},{value:"import { Scene, GeometryLayer } from '@antv/l7';\n\nconst layer = new GeometryLayer().shape('plane').style({\n  width: 0.074,\n  height: 0.061,\n  center: [120.1025, 30.2594],\n  widthSegments: 200,\n  heightSegments: 200,\n  terrainClipHeight: 1,\n  mapTexture:\n    'https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*gA0NRbuOF5cAAAAAAAAAAAAAARQnAQ',\n  terrainTexture:\n    'https://gw.alipayobjects.com/mdn/rms_23a451/afts/img/A*eYFaRYlnnOUAAAAAAAAAAAAAARQnAQ',\n  rgb2height: (r, g, b) => {\n    let h = (r * 255.0 * 256.0 * 256.0 + g * 255.0 * 256.0 + b * 255.0) * 0.1;\n    h = h / 200 - 12750;\n    h = Math.max(0, h);\n    return h;\n  },\n});\nscene.addLayer(layer);\n",paraId:5},{value:"Online case",paraId:6},{value:"🌟 PlaneGeometry does not need to set the source, we give its position information through center in style.",paraId:7,tocIndex:2},{value:"PlaneGeometry mainly sets position, size and other properties through the style method.",paraId:8,tocIndex:3},{value:"Sets the position of the PlaneGeometry. The positioning is the geometric center of the PlaneGeometry. PlaneGeometry is placed close to the ground.",paraId:9,tocIndex:4},{value:"Sets the width of the PlaneGeometry in longitude.",paraId:10,tocIndex:5},{value:"Sets the height of the PlaneGeometry in latitude.",paraId:11,tocIndex:6},{value:"Set the number of segments of the PlaneGeometry in the latitude direction.",paraId:12,tocIndex:7},{value:"Set the number of segments of the PlaneGeometry in the longitude direction.",paraId:13,tocIndex:8},{value:"PlaneGeometry texture map URL.",paraId:14,tocIndex:9},{value:"PlaneGeometry height map URL, when this parameter exists, L7 will automatically parse the elevation information.",paraId:15,tocIndex:10},{value:"Specifies the clipping height of the 3D terrain. In some cases, we may only need to retain the parts where hills and mountains exist. Through this parameter, we can specify that parts of the terrain whose height is lower than this parameter value are not displayed.",paraId:16,tocIndex:11},{value:"This is a callback function, and the parameter is the rgb information of the terrain map parsed by L7. Users can use this function to define the calculation logic of the height value (the calculation logic of different terrain maps is different).",paraId:17,tocIndex:12},{value:"🌟 widthSegments/heightSegments specifies the number of segments of planeGeometry. The more segments, the smoother the terrain and the greater the performance consumption.",paraId:18,tocIndex:12}]},40399:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(7908);const t=[{value:"SpriteGeometry is a universal particle layer provided by L7, which can be used to draw various particle effects.",paraId:0,tocIndex:0},{value:"Set up a normal particle layer.",paraId:1,tocIndex:1},{value:"import { Scene, GeometryLayer } from '@antv/l7';\n\nlet layer = new GeometryLayer()\n  .shape('sprite')\n  .size(10)\n  .style({\n    opacity: 0.3,\n    center: [120, 30],\n    spriteCount: 120,\n    spriteRadius: 10,\n    spriteTop: 300,\n    spriteUpdate: 10,\n    spriteScale: 0.6,\n  });\n",paraId:2,tocIndex:1},{value:"Online case",paraId:3},{value:"🌟 SpriteGeometry does not need to set the source, we give its position information through center in style.",paraId:4,tocIndex:2},{value:"SpriteGeometry mainly sets position, size and other properties through the style method.",paraId:5,tocIndex:3},{value:"Sets the position of the SpriteGeometry. Positioning is the center of the SpriteGeometry.",paraId:6,tocIndex:4},{value:"Set the sprite's texture map.",paraId:7,tocIndex:5},{value:"The radius of action of particles, default is 10.",paraId:8,tocIndex:6},{value:"\n🌟 Individual particles will be randomly distributed within the radius of the layer position.",paraId:8,tocIndex:6},{value:"The particle's movement defaults to 'down', which means downward movement. Optional values ​​are 'down'/'up'.",paraId:9,tocIndex:7},{value:"The number of particles generated by the layer, default is 100.",paraId:10,tocIndex:8},{value:"The height range of particle movement, the default is 300.",paraId:11,tocIndex:9},{value:"The step size of particle motion refresh, expressed as motion speed, default is 10.",paraId:12,tocIndex:10},{value:"Particle size scaling, default is 1.",paraId:13,tocIndex:11}]},3971:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(2651);const t=[{value:"Click on the layer to turn it on",paraId:0},{value:"animate",paraId:0},{value:"The basis points after the method are",paraId:0},{value:"2D",paraId:0},{value:"Point is still",paraId:0},{value:"3D",paraId:0},{value:"Points support two different animations: water wave points and growth animation.\nClick on the layer to turn it on",paraId:0},{value:"animate",paraId:0},{value:"After the method, a special water wave pattern will be obtained. The layer is made up of rings that spread outward.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"animate",paraId:2,tocIndex:1},{value:"The method supports Boolean and object passing values.",paraId:2,tocIndex:1},{value:"layer.animate(true);\n\nlayer.animate({\n  enable: true,\n});\n",paraId:3,tocIndex:1},{value:"interface IAnimateOption {\n  enable: boolean;\n  speed: number;\n  rings: number;\n}\n",paraId:4,tocIndex:2},{value:"animate",paraId:5,tocIndex:4},{value:"The method supports Boolean and object passing values.",paraId:5,tocIndex:4},{value:"animate(true)\nanimate(false)\n\nanimate(animateOptions)\n\ninterface IAnimateOptions: {\n  enable: boolean;\n  speed?: number = 0.01;\n  repeat?: number = 1;\n}\n",paraId:6,tocIndex:4},{value:"#### IAnimateOptions\n\n\n\nParameters of `animate` method:\n\n- `enable` Whether to enable animation, Boolean value, default is `false`.\n- `speed` Growth speed, numerical value, default is `0.01`.\n- `repeat` The number of times to play the growth animation, numerical value, the default is `1`.\n",paraId:7,tocIndex:4}]},80207:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(5131);const t=[{value:"color",paraId:0},{value:"Method used to set the color of the graphic.",paraId:0},{value:"color",paraId:1,tocIndex:0},{value:"type string.",paraId:1,tocIndex:0},{value:"The color type can be written in rgb",paraId:2,tocIndex:0},{value:"rgb(200, 100, 100)",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"rgba(255, 0, 0, 1)",paraId:2,tocIndex:0},{value:"The color type can be written in hexadecimal",paraId:2,tocIndex:0},{value:"#ffffff",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"#000",paraId:2,tocIndex:0},{value:"The color type can be the writing method of color name",paraId:2,tocIndex:0},{value:"red",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"yellow",paraId:2,tocIndex:0},{value:"Layers can set color values ​​directly.",paraId:3,tocIndex:1},{value:"layer.color('#f00');\n",paraId:4,tocIndex:1},{value:"The colors of a layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as parameters.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    c: '#f00',\n  },\n]);\nlayer.color('c');\n",paraId:6,tocIndex:2},{value:"color",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.color('type', ['#f00', '#0f0', '#00f']);\n",paraId:8,tocIndex:3},{value:"color",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual color of the layer.",paraId:9,tocIndex:4},{value:"layer.color('type', (value) => {\n  switch (value) {\n    case 'water':\n      return '#f00';\n    case 'wood':\n      return '#0f0';\n  }\n});\n",paraId:10,tocIndex:4}]},68774:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(31727);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},428:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(9867);const t=[{value:"The point layer is a set of longitude and latitude data to describe the location of a series of points on the map. These points can be ordinary dots, or text, icons, pillars, etc.",paraId:0,tocIndex:0},{value:"\nUsers can configure",paraId:0,tocIndex:0},{value:"shape",paraId:0,tocIndex:0},{value:"parameters to select the type of point, and pass",paraId:0,tocIndex:0},{value:"style",paraId:0,tocIndex:0},{value:"、",paraId:0,tocIndex:0},{value:"size",paraId:0,tocIndex:0},{value:"、",paraId:0,tocIndex:0},{value:"color",paraId:0,tocIndex:0},{value:"Method to adjust the point style.",paraId:0,tocIndex:0},{value:"import { PointLayer } from '@antv/l7';\n\nconst layer = PointLayer({\n  zIndex: 2,\n})\n  .source(data.list, {\n    type: 'array',\n    x: 'j',\n    y: 'w',\n  })\n  .shape('cylinder')\n  .size('t', (level) => {\n    return [4, 4, level + 40];\n  })\n  .color('t', [\n    '#002466',\n    '#105CB3',\n    '#2894E0',\n    '#CFF6FF',\n    '#FFF5B8',\n    '#FFAB5C',\n    '#F27049',\n    '#730D1C',\n  ]);\n",paraId:1,tocIndex:0}]},62498:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(81030);const t=[{value:"scale",paraId:0},{value:"Method sets the data field mapping method, which is used to convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding.",paraId:0},{value:"field",paraId:1,tocIndex:0},{value:"Specify the field name used for mapping in the data passed in source",paraId:1,tocIndex:0},{value:"scaleConfig",paraId:1,tocIndex:0},{value:"Column definition configuration, object type",paraId:1,tocIndex:0},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:2,tocIndex:0},{value:"scale",paraId:3,tocIndex:1},{value:"The types can be divided into",paraId:3,tocIndex:1},{value:"3",paraId:3,tocIndex:1},{value:"kind",paraId:3,tocIndex:1},{value:"11",paraId:3,tocIndex:1},{value:"species, different",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"The difference is that",paraId:3,tocIndex:1},{value:"domain->range",paraId:3,tocIndex:1},{value:"The conversion method is different.",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"and",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"yes",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"two very important parameters.",paraId:3,tocIndex:1},{value:"domain: definition interval of map data values",paraId:4,tocIndex:1},{value:"range: interval definition of visual value",paraId:4,tocIndex:1},{value:"type of data",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow、time、sequential、quantize、quantile、threshold",paraId:5,tocIndex:1},{value:"Classification",paraId:5,tocIndex:1},{value:"cat、time",paraId:5,tocIndex:1},{value:"constant",paraId:5,tocIndex:1},{value:"identity",paraId:5,tocIndex:1},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:6,tocIndex:2},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:7,tocIndex:2},{value:"Constant measure A field is a constant that does not change.",paraId:8,tocIndex:3},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:9,tocIndex:4},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:10,tocIndex:5},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:11,tocIndex:6},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:12,tocIndex:7},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:13,tocIndex:7},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:14,tocIndex:7},{value:"A uniform non-rational B-spline interpolator function that returns the given array of colors to be converted to RGB colors.",paraId:15,tocIndex:8},{value:"const scaleColors = d3interpolate.interpolateRgbBasis(colors);\n",paraId:16,tocIndex:8},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  range?: any[];\n  neutral?: number;\n  field?: string;\n  unknown?: string;\n  ticks?: any[];\n  nice?: boolean;\n  clamp?: boolean;\n  format?: () => any;\n}\n",paraId:17,tocIndex:9}]},55417:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(3086);const t=[{value:"shape",paraId:0},{value:"The method is used to specify what kind of graphics the point layer draws, such as drawing triangles or squares, text, icons, etc.",paraId:0},{value:"Point layer's ground-mounted geometric shapes, such as circles, squares, triangles, etc.",paraId:1,tocIndex:0},{value:"🌟 If you are using a simple dot layer, it is recommended to use",paraId:2,tocIndex:0},{value:"simple",paraId:2,tocIndex:0},{value:"replace",paraId:2,tocIndex:0},{value:"circle",paraId:2,tocIndex:0},{value:"for better performance.",paraId:2,tocIndex:0},{value:"\n  ",paraId:3},{value:"\n    ",paraId:3},{value:"\n  ",paraId:3},{value:"// Various shapes supported by shape\ntype IFillShape =\n  | 'circle'\n  | 'square'\n  | 'hexagon'\n  | 'triangle'\n  | 'pentagon'\n  | 'octogon'\n  | 'hexagram'\n  | 'rhombus'\n  | 'vesica';\n\nlayer.shape('circle');\n",paraId:4,tocIndex:0},{value:"The point type is a vertical map pillar.",paraId:5,tocIndex:1},{value:"\n  ",paraId:3},{value:"\n    ",paraId:3},{value:"\n  ",paraId:3},{value:"type IColumn = 'cylinder' | 'triangleColumn' | 'hexagonColumn' | 'squareColumn';\n\nlayer.shape('cylinder');\n\nlayer.shape('triangleColumn');\n\nlayer.shape('hexagonColumn');\n\nlayer.shape('squareColumn');\n",paraId:6,tocIndex:1},{value:"simple",paraId:7,tocIndex:2},{value:"Point sprites are special point layers that always face the camera and are limited in size by the device.",paraId:7,tocIndex:2},{value:"layer.shape('simple');\n",paraId:8,tocIndex:2},{value:"dot",paraId:9,tocIndex:3},{value:"Point sprites are special point layers that always face the camera and are limited in size by the device.",paraId:9,tocIndex:3},{value:"layer.shape('dot');\n",paraId:10,tocIndex:3},{value:"To draw text, the first parameter is the field in the value, and the second parameter is fixed to",paraId:11,tocIndex:4},{value:"text",paraId:11,tocIndex:4},{value:"。",paraId:11,tocIndex:4},{value:"const point = new PointLayer()\n  .source([{ lng: 120, lat: 30, name: 'test' }], {\n    parser: 'json',\n    x: 'lng',\n    y: 'lat',\n  })\n  .shape('test', 'text');\n",paraId:12,tocIndex:4},{value:"shape",paraId:13,tocIndex:5},{value:"The value is",paraId:13,tocIndex:5},{value:"scene.addImage",paraId:13,tocIndex:5},{value:"The name of the globally added image resource.",paraId:13,tocIndex:5},{value:"scene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg',\n);\nscene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\nconst imageLayer = new PointLayer()\n  .source(\n    [\n      {\n        longitude: 120,\n        latitude: 30,\n        name: 'name',\n      },\n    ],\n    {\n      parser: {\n        type: 'json',\n        x: 'longitude',\n        y: 'latitude',\n      },\n    },\n  )\n  .shape('name', ['00', '01', '02']) // shape 支持映射写法\n  .size(25);\nscene.addLayer(imageLayer);\n\nconst imageLayer2 = new PointLayer()\n  .source(\n    [\n      {\n        longitude: 122,\n        latitude: 30,\n        name: 'name',\n      },\n    ],\n    {\n      parser: {\n        type: 'json',\n        x: 'longitude',\n        y: 'latitude',\n      },\n    },\n  )\n  .shape('00') // shape 直接传值\n  .size(25);\nscene.addLayer(imageLayer2);\n",paraId:14,tocIndex:5},{value:"const layer = new PointLayer()\n  .source(\n    [\n      {\n        lng: 120,\n        lat: 30,\n      },\n    ],\n    {\n      parser: {\n        type: 'json',\n        x: 'lng',\n        y: 'lat',\n      },\n    },\n  )\n  .size(25)\n  .color('#f00')\n  .shape('radar')\n  .animate(true);\n",paraId:15,tocIndex:6},{value:"🌟 Radar chart needs to be set up",paraId:16,tocIndex:6},{value:"animate",paraId:16,tocIndex:6},{value:"for",paraId:16,tocIndex:6},{value:"true",paraId:16,tocIndex:6}]},78435:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(37192);const t=[{value:"size",paraId:0},{value:"Method used to set the size of point layer graphics.",paraId:0},{value:"If the size type is number, it represents the radius of point",paraId:1,tocIndex:0},{value:"The size type can be [number, number]|[number, number, number] indicating the radius and height of the column",paraId:1,tocIndex:0},{value:"pointLayer.size(1);\npointLayer.size([2, 10]); // The radius of the pillar is 2x2. The height is 10\npointLayer.size([2, 4, 10]); // The column radius is 2x4 and the height is 10\n",paraId:2,tocIndex:0},{value:"Point layers can set the radius directly. All points in the layer use one width.",paraId:3,tocIndex:1},{value:"layer.size(2);\n",paraId:4,tocIndex:1},{value:"The width of a point layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as arguments.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    r: 2,\n  },\n]);\nlayer.size('r');\n",paraId:6,tocIndex:2},{value:"size",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.size('type', [1, 2, 3]);\n",paraId:8,tocIndex:3},{value:"size",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual radius of the point layer.",paraId:9,tocIndex:4},{value:"layer.size('type', (value) => {\n  switch (value) {\n    case 'path':\n      return 1;\n    case 'road':\n      return 2;\n  }\n});\n",paraId:10,tocIndex:4}]},42175:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(5763);const t=[{value:"The layer data uses the latitude and longitude format, and the data source supports three data formats: JSON, GeoJSON, and CSV.",paraId:0},{value:"GeoJSON",paraId:1},{value:"CSV",paraId:2},{value:"JSON",paraId:3},{value:"🌟 Usually each type of data requires a corresponding parser to parse the data",paraId:4},{value:"// Pass in GeoJSON type data *** L7 supports it by default and does not require parser analysis\nvar data = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Polygon',\n            coordinates: [\n              [120, 30],\n              ...\n            ]\n          },\n        },\n      ],\n    };\n\nvar layer = new PointLayer()\n.source(data)\n",paraId:5,tocIndex:0},{value:"// Pass in txt type data\nvar data = `from,to,value,type,lng1,lat1,lng2,lat2\n鎷夎惃,仙魔タ,6.91,move_out,91.111891,29.662557,97.342625,37.373799\n鎷厎惃,鎴愰嘘,4.79,move_out,91.111891,29.662557,104.067923,30.679943\n鎷厎惃,玷夎惃,月充经,2.41,move_out,91.111891,29.662557,106.530635,29.544606\n鎷厎惃,鍖椾han,2.05,move_out,91.111891,29.662557,116.395645,39.929986\n...`;\n\nvar layer = new PointLayer().source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng1',\n    y: 'lat1',\n  },\n});\n",paraId:6,tocIndex:1},{value:"// Pass in JSON type data\nvar data = [\n  {\n    lng: 120,\n    lat: 30\n  },\n  ...\n]\n\nvar layer = new PointLayer()\n.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat',\n  }\n})\n",paraId:7,tocIndex:2}]},51958:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(7945);const t=[{value:"style",paraId:0},{value:"The method is used to configure the style of the layer. The same layer has different",paraId:0},{value:"shape",paraId:0},{value:"graphics, different",paraId:0},{value:"shape",paraId:0},{value:"layer",paraId:0},{value:"style",paraId:0},{value:"Methods accept different parameters.",paraId:0},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:1},{value:"Universal",paraId:2,tocIndex:0},{value:"style",paraId:2,tocIndex:0},{value:"Parameters, parameters supported by all graphics.",paraId:2,tocIndex:0},{value:"style",paraId:3,tocIndex:0},{value:"type",paraId:3,tocIndex:0},{value:"describe",paraId:3,tocIndex:0},{value:"default value",paraId:3,tocIndex:0},{value:"opacity",paraId:3,tocIndex:0},{value:"number",paraId:3,tocIndex:0},{value:"Graphic transparency",paraId:3,tocIndex:0},{value:"1",paraId:3,tocIndex:0},{value:"The default style configuration is a constant value. Some configurations also support data mapping. The mapping definition is the same as the color and size parameters.",paraId:4,tocIndex:1},{value:"field: mapping field",paraId:5,tocIndex:1},{value:"value: mapping interval or custom callback function",paraId:5,tocIndex:1},{value:"like:",paraId:6,tocIndex:1},{value:"layer.style({\n    opacity:{\n        field:'name'\n        value:[0.1,0.5,1],\n\n    }\n})\n",paraId:7,tocIndex:1},{value:"shape",paraId:8,tocIndex:2},{value:"For plane figures, such as triangles, squares, etc.",paraId:8,tocIndex:2},{value:"IFillShape",paraId:9,tocIndex:2},{value:"style",paraId:10,tocIndex:2},{value:"type",paraId:10,tocIndex:2},{value:"Whether to support data mapping",paraId:10,tocIndex:2},{value:"describe",paraId:10,tocIndex:2},{value:"default value",paraId:10,tocIndex:2},{value:"stroke",paraId:10,tocIndex:2},{value:"string",paraId:10,tocIndex:2},{value:"yes",paraId:10,tocIndex:2},{value:"Graphic border color",paraId:10,tocIndex:2},{value:"#fff",paraId:10,tocIndex:2},{value:"strokeWidth",paraId:10,tocIndex:2},{value:"number",paraId:10,tocIndex:2},{value:"no",paraId:10,tocIndex:2},{value:"Graphic border width",paraId:10,tocIndex:2},{value:"0",paraId:10,tocIndex:2},{value:"strokeOpacity",paraId:10,tocIndex:2},{value:"number",paraId:10,tocIndex:2},{value:"no",paraId:10,tocIndex:2},{value:"Graphic border transparency",paraId:10,tocIndex:2},{value:"1",paraId:10,tocIndex:2},{value:"blur",paraId:10,tocIndex:2},{value:"number",paraId:10,tocIndex:2},{value:"no",paraId:10,tocIndex:2},{value:"Graphic blur radius",paraId:10,tocIndex:2},{value:"0",paraId:10,tocIndex:2},{value:"offsets",paraId:10,tocIndex:2},{value:"[number, number]",paraId:10,tocIndex:2},{value:"yes",paraId:10,tocIndex:2},{value:"point offset",paraId:10,tocIndex:2},{value:"[0, 0]",paraId:10,tocIndex:2},{value:"rotation",paraId:10,tocIndex:2},{value:"number",paraId:10,tocIndex:2},{value:"yes",paraId:10,tocIndex:2},{value:"Rotation angle",paraId:10,tocIndex:2},{value:"0",paraId:10,tocIndex:2},{value:"raisingHeight",paraId:10,tocIndex:2},{value:"number",paraId:10,tocIndex:2},{value:"no",paraId:10,tocIndex:2},{value:"Lifting height",paraId:10,tocIndex:2},{value:"0",paraId:10,tocIndex:2},{value:"heightfixed",paraId:10,tocIndex:2},{value:"boolean",paraId:10,tocIndex:2},{value:"no",paraId:10,tocIndex:2},{value:"Point size unit",paraId:10,tocIndex:2},{value:"pixel",paraId:10,tocIndex:2},{value:"pixel default value",paraId:11,tocIndex:3},{value:"meter unit is meter",paraId:11,tocIndex:3},{value:"type IUnit = 'pixel' | 'meter';\n",paraId:12,tocIndex:3},{value:"The point layer supports equal-area points. The unit of point size is meters. The size is also set through the size method.",paraId:13,tocIndex:3},{value:"import { PointLayer } from '@antv/l7';\n\nconst layer = PointLayer().source(data).shape('circle').size(100).color('#f00').style({\n  unit: 'meter',\n});\n",paraId:14,tocIndex:3},{value:"🌟 Starting from version v2.7.9, AMap, AMap 2.0, and Mapbox maps are supported",paraId:15,tocIndex:3},{value:"shape",paraId:16,tocIndex:4},{value:"is a 3D column chart.",paraId:16,tocIndex:4},{value:"IColumn",paraId:17,tocIndex:4},{value:"style",paraId:18,tocIndex:4},{value:"type",paraId:18,tocIndex:4},{value:"describe",paraId:18,tocIndex:4},{value:"default value",paraId:18,tocIndex:4},{value:"depth",paraId:18,tocIndex:4},{value:"boolean",paraId:18,tocIndex:4},{value:"Whether depth detection is enabled for graphics",paraId:18,tocIndex:4},{value:"true",paraId:18,tocIndex:4},{value:"pickLight",paraId:18,tocIndex:4},{value:"boolean",paraId:18,tocIndex:4},{value:"Whether to calculate lighting when picking highlights",paraId:18,tocIndex:4},{value:"false",paraId:18,tocIndex:4},{value:"lightEnable",paraId:18,tocIndex:4},{value:"boolean",paraId:18,tocIndex:4},{value:"Whether color participates in lighting calculations",paraId:18,tocIndex:4},{value:"true",paraId:18,tocIndex:4},{value:"heightfixed",paraId:18,tocIndex:4},{value:"boolean",paraId:18,tocIndex:4},{value:"Is it a fixed height?",paraId:18,tocIndex:4},{value:"false",paraId:18,tocIndex:4},{value:"The column chart supports configuring gradient colors, which will be overwritten after configuring the gradient effect.",paraId:19,tocIndex:5},{value:"layer.color",paraId:19,tocIndex:5},{value:"Method to set the color.",paraId:19,tocIndex:5},{value:"style",paraId:20,tocIndex:5},{value:"type",paraId:20,tocIndex:5},{value:"describe",paraId:20,tocIndex:5},{value:"default value",paraId:20,tocIndex:5},{value:"sourceColor",paraId:20,tocIndex:5},{value:"color",paraId:20,tocIndex:5},{value:"Column bottom color",paraId:20,tocIndex:5},{value:"/",paraId:20,tocIndex:5},{value:"targetColor",paraId:20,tocIndex:5},{value:"color",paraId:20,tocIndex:5},{value:"Column top color",paraId:20,tocIndex:5},{value:"/",paraId:20,tocIndex:5},{value:"opacityLinear",paraId:20,tocIndex:5},{value:"IOpcityLinear",paraId:20,tocIndex:5},{value:"Transparency gradient of pillars",paraId:20,tocIndex:5},{value:"/",paraId:20,tocIndex:5},{value:"const color = `rgb(200, 100, 50)`;\nconst color2 = '#ff0';\n",paraId:21,tocIndex:6},{value:"type IDir = 'up' | 'down';\ninterface IOpcityLinear = {\n  enable: boolean;\n  dir: IDir;\n}\n",paraId:22,tocIndex:7},{value:"shape",paraId:23,tocIndex:8},{value:"for text.",paraId:23,tocIndex:8},{value:"text",paraId:24,tocIndex:8},{value:"style",paraId:25,tocIndex:8},{value:"type",paraId:25,tocIndex:8},{value:"describe",paraId:25,tocIndex:8},{value:"Whether to support data mapping",paraId:25,tocIndex:8},{value:"default value",paraId:25,tocIndex:8},{value:"opacity",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"transparency",paraId:25,tocIndex:8},{value:"yes",paraId:25,tocIndex:8},{value:"#fff",paraId:25,tocIndex:8},{value:"stroke",paraId:25,tocIndex:8},{value:"string",paraId:25,tocIndex:8},{value:"Graphic border color",paraId:25,tocIndex:8},{value:"yes",paraId:25,tocIndex:8},{value:"#fff",paraId:25,tocIndex:8},{value:"strokeWidth",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Graphic border color",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"0",paraId:25,tocIndex:8},{value:"textOffset",paraId:25,tocIndex:8},{value:"[number, number]",paraId:25,tocIndex:8},{value:"text offset",paraId:25,tocIndex:8},{value:"yes",paraId:25,tocIndex:8},{value:"[0, 0]",paraId:25,tocIndex:8},{value:"textAnchor",paraId:25,tocIndex:8},{value:"anchorType",paraId:26,tocIndex:8},{value:"text alignment anchor",paraId:25,tocIndex:8},{value:"text",paraId:25,tocIndex:8},{value:"yes",paraId:25,tocIndex:8},{value:"center",paraId:25,tocIndex:8},{value:"spacing",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"text spacing",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"2",paraId:25,tocIndex:8},{value:"rotation",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Rotation angle",paraId:25,tocIndex:8},{value:"yes",paraId:25,tocIndex:8},{value:"0",paraId:25,tocIndex:8},{value:"padding",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Text inner border width",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"2",paraId:25,tocIndex:8},{value:"halo",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Text edge glow width",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"0.5",paraId:25,tocIndex:8},{value:"gamma",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Text color parameters",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"2",paraId:25,tocIndex:8},{value:"fontWeight",paraId:25,tocIndex:8},{value:"string",paraId:25,tocIndex:8},{value:"text size",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"400",paraId:25,tocIndex:8},{value:"fontFamily",paraId:25,tocIndex:8},{value:"font",paraId:27,tocIndex:8},{value:"font",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"sans-serif",paraId:25,tocIndex:8},{value:"textAllowOverlap",paraId:25,tocIndex:8},{value:"boolean",paraId:25,tocIndex:8},{value:"Whether text is allowed to be overwritten",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"false",paraId:25,tocIndex:8},{value:"raisingHeight",paraId:25,tocIndex:8},{value:"number",paraId:25,tocIndex:8},{value:"Lifting height",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"0",paraId:25,tocIndex:8},{value:"heightfixed",paraId:25,tocIndex:8},{value:"boolean",paraId:25,tocIndex:8},{value:"Does the lifting height vary?",paraId:25,tocIndex:8},{value:"zoom",paraId:25,tocIndex:8},{value:"Variety",paraId:25,tocIndex:8},{value:"no",paraId:25,tocIndex:8},{value:"false",paraId:25,tocIndex:8},{value:"text alignment anchor",paraId:28,tocIndex:9},{value:"export enum anchorType {\n  'CENTER' = 'center',\n  'TOP' = 'top',\n  'TOP-LEFT' = 'top-left',\n  'TOP-RIGHT' = 'top-right',\n  'BOTTOM' = 'bottom',\n  'BOTTOM-LEFT' = 'bottom-left',\n  'LEFT' = 'left',\n  'RIGHT' = 'right',\n}\n",paraId:29,tocIndex:9},{value:"css font Family。",paraId:30,tocIndex:10},{value:"const font = 'sans-serif';\nconst font2 = 'Times New Roman';\n",paraId:31,tocIndex:10},{value:"shape",paraId:32,tocIndex:11},{value:"For simple point graphics (elves).",paraId:32,tocIndex:11},{value:"simple",paraId:33,tocIndex:11},{value:"style",paraId:34,tocIndex:11},{value:"type",paraId:34,tocIndex:11},{value:"describe",paraId:34,tocIndex:11},{value:"default value",paraId:34,tocIndex:11},{value:"stroke",paraId:34,tocIndex:11},{value:"string",paraId:34,tocIndex:11},{value:"Graphic border color",paraId:34,tocIndex:11},{value:"#fff",paraId:34,tocIndex:11},{value:"strokeWidth",paraId:34,tocIndex:11},{value:"number",paraId:34,tocIndex:11},{value:"Graphic border color",paraId:34,tocIndex:11},{value:"0",paraId:34,tocIndex:11},{value:"strokeOpacity",paraId:34,tocIndex:11},{value:"number",paraId:34,tocIndex:11},{value:"Graphic border width",paraId:34,tocIndex:11},{value:"1",paraId:34,tocIndex:11},{value:"offsets",paraId:34,tocIndex:11},{value:"[number, number]",paraId:34,tocIndex:11},{value:"point offset",paraId:34,tocIndex:11},{value:"[0, 0]",paraId:34,tocIndex:11},{value:"shape",paraId:35,tocIndex:12},{value:"is the icon type.",paraId:35,tocIndex:12},{value:"icon",paraId:36,tocIndex:12},{value:"style",paraId:37,tocIndex:12},{value:"type",paraId:37,tocIndex:12},{value:"describe",paraId:37,tocIndex:12},{value:"data mapping",paraId:37,tocIndex:12},{value:"default value",paraId:37,tocIndex:12},{value:"offsets",paraId:37,tocIndex:12},{value:"[number, number]",paraId:37,tocIndex:12},{value:"point offset",paraId:37,tocIndex:12},{value:"no",paraId:37,tocIndex:12},{value:"[0, 0]",paraId:37,tocIndex:12},{value:"raisingHeight",paraId:37,tocIndex:12},{value:"number",paraId:37,tocIndex:12},{value:"Lifting height",paraId:37,tocIndex:12},{value:"no",paraId:37,tocIndex:12},{value:"0",paraId:37,tocIndex:12},{value:"heightfixed",paraId:37,tocIndex:12},{value:"boolean",paraId:37,tocIndex:12},{value:"Does the lifting height vary?",paraId:37,tocIndex:12},{value:"zoom",paraId:37,tocIndex:12},{value:"Variety",paraId:37,tocIndex:12},{value:"no",paraId:37,tocIndex:12},{value:"false",paraId:37,tocIndex:12},{value:"rotation",paraId:37,tocIndex:12},{value:"number",paraId:37,tocIndex:12},{value:"Rotation angle",paraId:37,tocIndex:12},{value:"yes",paraId:37,tocIndex:12},{value:"0",paraId:37,tocIndex:12},{value:"The rotation angle of the icon.",paraId:38,tocIndex:13},{value:"const imageLayer = new PointLayer({ layerType: 'fillImage' })\n  .source(data)\n  .shape('wind', (wind) => {\n    if (wind === 'up') {\n      return 'arrBlue';\n    }\n    return 'arrRed';\n  })\n  .size(15)\n  .style({\n    rotation: 0,\n  });\n",paraId:39,tocIndex:13},{value:"shape",paraId:40,tocIndex:14},{value:"is a radar chart.",paraId:40,tocIndex:14},{value:"radar",paraId:41,tocIndex:14},{value:"style",paraId:42,tocIndex:14},{value:"type",paraId:42,tocIndex:14},{value:"describe",paraId:42,tocIndex:14},{value:"default value",paraId:42,tocIndex:14},{value:"speed",paraId:42,tocIndex:14},{value:"number",paraId:42,tocIndex:14},{value:"The speed at which the radar chart rotates",paraId:42,tocIndex:14},{value:"1",paraId:42,tocIndex:14}]},20137:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(12311);const t=[{value:"The geometry layer is",paraId:0},{value:"shape",paraId:0},{value:"for",paraId:0},{value:"water",paraId:0},{value:"or",paraId:0},{value:"ocean",paraId:0},{value:"When you will get a flowing water surface, at this time we need to use",paraId:0},{value:"animate",paraId:0},{value:"Method to enable animation.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"animate",paraId:2,tocIndex:0},{value:"The method supports Boolean and object passing values.",paraId:2,tocIndex:0},{value:"layer.animate(true);\n\nlayer.animate({\n  enable: true,\n});\n",paraId:3,tocIndex:0}]},70779:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(1021);const t=[{value:"color",paraId:0},{value:"Method used to set the color of the graphic.",paraId:0},{value:"color",paraId:1,tocIndex:0},{value:"type string.",paraId:1,tocIndex:0},{value:"The color type can be written in rgb",paraId:2,tocIndex:0},{value:"rgb(200, 100, 100)",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"rgba(255, 0, 0, 1)",paraId:2,tocIndex:0},{value:"The color type can be written in hexadecimal",paraId:2,tocIndex:0},{value:"#ffffff",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"#000",paraId:2,tocIndex:0},{value:"The color type can be the writing method of color name",paraId:2,tocIndex:0},{value:"red",paraId:2,tocIndex:0},{value:"、",paraId:2,tocIndex:0},{value:"yellow",paraId:2,tocIndex:0},{value:"Layers can set color values ​​directly.",paraId:3,tocIndex:1},{value:"layer.color('#f00');\n",paraId:4,tocIndex:1},{value:"The colors of a layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as parameters.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    c: '#f00',\n  },\n]);\nlayer.color('c');\n",paraId:6,tocIndex:2},{value:"color",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.color('type', ['#f00', '#0f0', '#00f']);\n",paraId:8,tocIndex:3},{value:"color",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual color of the layer.",paraId:9,tocIndex:4},{value:"layer.color('type', (value) => {\n  switch (value) {\n    case 'water':\n      return '#f00';\n    case 'wood':\n      return '#0f0';\n  }\n});\n",paraId:10,tocIndex:4}]},47363:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(42179);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},7013:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(57005);const t=[{value:"Draws 2D polygons and 3D shapes stretched along the Z axis.",paraId:0,tocIndex:0},{value:"import { PolygonLayer } from '@antv/l7';\nconst layer = new PolygonLayer()\n  .source({\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'Polygon',\n          coordinates: [\n            [\n              [104.4140625, 35.460669951495305],\n              [98.7890625, 24.206889622398023],\n              [111.796875, 27.371767300523047],\n              [104.4140625, 35.460669951495305],\n            ],\n          ],\n        },\n      },\n    ],\n  })\n  .shape('fill')\n  .color('#f00')\n  .style({\n    opacity: 0.6,\n  });\n",paraId:1,tocIndex:1}]},86561:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(30792);const t=[{value:"scale",paraId:0},{value:"Method sets the data field mapping method, which is used to convert map data values ​​(numbers, dates, categories, etc.) into visual values ​​(color, size, shape). Scales Scales are a fundamental component of data visualization because they determine the nature of the visual encoding.",paraId:0},{value:"field",paraId:1,tocIndex:0},{value:"Specify the field name used for mapping in the data passed in source",paraId:1,tocIndex:0},{value:"scaleConfig",paraId:1,tocIndex:0},{value:"Column definition configuration, object type",paraId:1,tocIndex:0},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  ...\n}\n\nlayer.color('id', ['#f00', '#ff0'])\n.size('mag', [1, 80])\n.scale('mag', {\n  type: 'linear',\n  domain: [ 1, 50]\n})；\n",paraId:2,tocIndex:0},{value:"scale",paraId:3,tocIndex:1},{value:"The types can be divided into",paraId:3,tocIndex:1},{value:"3",paraId:3,tocIndex:1},{value:"kind",paraId:3,tocIndex:1},{value:"11",paraId:3,tocIndex:1},{value:"species, different",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"The difference is that",paraId:3,tocIndex:1},{value:"domain->range",paraId:3,tocIndex:1},{value:"The conversion method is different.",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"and",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"yes",paraId:3,tocIndex:1},{value:"Scale",paraId:3,tocIndex:1},{value:"two very important parameters.",paraId:3,tocIndex:1},{value:"domain: definition interval of map data values",paraId:4,tocIndex:1},{value:"range: interval definition of visual value",paraId:4,tocIndex:1},{value:"type of data",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow、time、sequential、quantize、quantile、threshold",paraId:5,tocIndex:1},{value:"Classification",paraId:5,tocIndex:1},{value:"cat、time",paraId:5,tocIndex:1},{value:"constant",paraId:5,tocIndex:1},{value:"identity",paraId:5,tocIndex:1},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors.",paraId:6,tocIndex:2},{value:"// The three crops will be converted into corresponding colors respectively.\n// domain = ['corn','rice', 'soybean'];\n// range = ['red','white','blue'];\nconst data = [\n  { lng: 120, lat: 30, t: 'corn' },\n  { lng: 121, lat: 30, t: 'rice' },\n  { lng: 122, lat: 30, t: 'soybean' },\n];\nlayer.source(data, {\n  parser: {\n    type: 'type',\n    x: 'lng',\n    y: 'lat',\n  },\n});\nlayer.scale('t', { type: 'cat' });\nlayer.color('t', ['red', 'white', 'blue']);\n",paraId:7,tocIndex:2},{value:"Constant measure A field is a constant that does not change.",paraId:8,tocIndex:3},{value:"Linear is a mapping method for continuous data. Data and visual values ​​are converted using linear methods. For example, the data value 1-100 is linearly mapped to an offline gradient color from red to blue. Each number corresponds to a color.",paraId:9,tocIndex:4},{value:"Equal intervals divide the range of attribute values ​​into several equally sized subranges. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:10,tocIndex:5},{value:'Each class contains an equal number of features. Quantile classification is well suited for linearly distributed data. Quantiles assign an equal number of data values ​​to each class. There is no empty class, nor a class with too many or too few values.\nBecause "quantile" classification is used to group features into each class in equal numbers, the resulting map is often misleading. You might place similar features into adjacent classes, or place features with widely different values ​​into the same class. This distortion can be minimized by increasing the number of classes.',paraId:11,tocIndex:6},{value:"It allows mapping any subset (non-uniform segment) of the domain to a range of discrete values. The input domain remains continuous and divided into slices based on a set of thresholds provided to the domain attributes. The range attribute must have N+1 elements, where N is the number of threshold boundaries provided in the domain",paraId:12,tocIndex:7},{value:"Manual interval Manual interval Manually set the classification interval. Some data will have corresponding industry standards or require some special display. For example, air quality data has strict data segmentation standards",paraId:13,tocIndex:7},{value:'-1   => "red"\n0    => "white"\n0.5  => "white"\n1.0  => "blue"\n1000 => "blue\n',paraId:14,tocIndex:7},{value:"A uniform non-rational B-spline interpolator function that returns the given array of colors to be converted to RGB colors.",paraId:15,tocIndex:8},{value:"const scaleColors = d3interpolate.interpolateRgbBasis(colors);\n",paraId:16,tocIndex:8},{value:"interface IScaleConfig {\n  type: ScaleTypeName;\n  domain?: any[];\n  range?: any[];\n  neutral?: number;\n  field?: string;\n  unknown?: string;\n  ticks?: any[];\n  nice?: boolean;\n  clamp?: boolean;\n  format?: () => any;\n}\n",paraId:17,tocIndex:9}]},19106:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(85361);const t=[{value:"shape",paraId:0},{value:"The method is used to specify the type of graphics drawn on the surface layer, such as filled graphics, filled lines, extruded aggregates, etc.",paraId:0},{value:"shape",paraId:1,tocIndex:0},{value:"for",paraId:1,tocIndex:0},{value:"fill",paraId:1,tocIndex:0},{value:"Geometry layers are used to draw plane geometry.",paraId:1,tocIndex:0},{value:"layer.shape('fill');\n",paraId:2,tocIndex:0},{value:"shape",paraId:3,tocIndex:1},{value:"for",paraId:3,tocIndex:1},{value:"extrude",paraId:3,tocIndex:1},{value:"Geometry layers are used to draw 3D geometry.",paraId:3,tocIndex:1},{value:"layer.shape('extrude');\n",paraId:4,tocIndex:1},{value:"An upgraded version of the extrude layer, supporting extrusionBase (base height) data mapping",paraId:5,tocIndex:2},{value:"layer.shape('extrusion');\n",paraId:6,tocIndex:2},{value:"shape",paraId:7,tocIndex:3},{value:"for",paraId:7,tocIndex:3},{value:"water",paraId:7,tocIndex:3},{value:"Geometry layers are used to draw flat water bodies.",paraId:7,tocIndex:3},{value:"layer.shape('water');\n",paraId:8,tocIndex:3},{value:"shape",paraId:9,tocIndex:4},{value:"for",paraId:9,tocIndex:4},{value:"ocean",paraId:9,tocIndex:4},{value:"Geometry layers are used to draw flat ocean water bodies.",paraId:9,tocIndex:4},{value:"layer.shape('ocean');\n",paraId:10,tocIndex:4},{value:"shape",paraId:11,tocIndex:5},{value:"for",paraId:11,tocIndex:5},{value:"line",paraId:11,tocIndex:5},{value:"Geometry layers are used to draw lines.",paraId:11,tocIndex:5},{value:"layer.shape('line');\n",paraId:12,tocIndex:5},{value:"shape",paraId:13,tocIndex:6},{value:"for",paraId:13,tocIndex:6},{value:"point_fill",paraId:13,tocIndex:6},{value:"Geometry layers are used to draw fill points.",paraId:13,tocIndex:6},{value:"layer.shape('point_fill');\n",paraId:14,tocIndex:6},{value:"shape",paraId:15,tocIndex:7},{value:"for",paraId:15,tocIndex:7},{value:"point_image",paraId:15,tocIndex:7},{value:"Geometry layers are used to draw point icons.",paraId:15,tocIndex:7},{value:"layer.shape('point_image');\n",paraId:16,tocIndex:7},{value:"shape",paraId:17,tocIndex:8},{value:"for",paraId:17,tocIndex:8},{value:"point_extrude",paraId:17,tocIndex:8},{value:"The geometry layer is used to draw the columns.",paraId:17,tocIndex:8},{value:"layer.shape('point_extrude');\n",paraId:18,tocIndex:8},{value:"shape",paraId:19,tocIndex:9},{value:"for",paraId:19,tocIndex:9},{value:"text",paraId:19,tocIndex:9},{value:"Geometry layers are used to draw text.",paraId:19,tocIndex:9},{value:"layer.shape('text');\n",paraId:20,tocIndex:9}]},51828:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(55562);const t=[{value:"size",paraId:0},{value:"Method used to set the height of the Polygon",paraId:0},{value:"The size type is number, which represents the height of the Polygon.",paraId:1,tocIndex:0},{value:"pointLayer.size(1);\n",paraId:2,tocIndex:0},{value:"The radius can be set directly on the polygon layer. All points in the layer use a height.",paraId:3,tocIndex:1},{value:"layer.size(2);\n",paraId:4,tocIndex:1},{value:"The height of a polygon layer can be mapped based on the data values ​​accepted by the layer, accepting fields of incoming data as parameters.",paraId:5,tocIndex:2},{value:"layer.source([\n  {\n    lng: 120,\n    lat: 30,\n    r: 2,\n  },\n]);\nlayer.size('r');\n",paraId:6,tocIndex:2},{value:"size",paraId:7,tocIndex:3},{value:"Method supports simple value mapping and will be based on",paraId:7,tocIndex:3},{value:"field",paraId:7,tocIndex:3},{value:"The values ​​extracted from the data passed into the layer are mapped to",paraId:7,tocIndex:3},{value:"domain",paraId:7,tocIndex:3},{value:"in the value range.",paraId:7,tocIndex:3},{value:"layer.size('type', [1, 2, 3]);\n",paraId:8,tocIndex:3},{value:"size",paraId:9,tocIndex:4},{value:"The method supports the writing method of callback function, which will be based on",paraId:9,tocIndex:4},{value:"field",paraId:9,tocIndex:4},{value:"as",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"method parameters,",paraId:9,tocIndex:4},{value:"callback",paraId:9,tocIndex:4},{value:"The return value of the method is the actual height of the polygon layer.",paraId:9,tocIndex:4},{value:"layer.size('type', (value) => {\n  switch (value) {\n    case 'path':\n      return 1;\n    case 'road':\n      return 2;\n  }\n});\n",paraId:10,tocIndex:4}]},41917:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(50366);const t=[{value:"It is recommended to use GeoJSON format data for geometry layer data.",paraId:0},{value:"GeoJSON",paraId:1},{value:"// Pass in GeoJSON type data *** L7 supports it by default and does not require parser analysis\nconst data = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [104.4140625, 35.460669951495305],\n            [98.7890625, 24.206889622398023],\n            [111.796875, 27.371767300523047],\n            [104.4140625, 35.460669951495305],\n          ],\n        ],\n      },\n    },\n  ],\n};\n\nconst layer = new PolygonLayer().source(data);\n",paraId:2,tocIndex:0}]},47801:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(50801);const t=[{value:"style",paraId:0},{value:"The method is used to configure the style of the layer. The same layer has different",paraId:0},{value:"shape",paraId:0},{value:"graphics, different",paraId:0},{value:"shape",paraId:0},{value:"layer",paraId:0},{value:"style",paraId:0},{value:"Methods accept different parameters.",paraId:0},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:1},{value:"Universal",paraId:2,tocIndex:0},{value:"style",paraId:2,tocIndex:0},{value:"Parameters, parameters supported by all graphics.",paraId:2,tocIndex:0},{value:"style",paraId:3,tocIndex:0},{value:"type",paraId:3,tocIndex:0},{value:"describe",paraId:3,tocIndex:0},{value:"default value",paraId:3,tocIndex:0},{value:"opacity",paraId:3,tocIndex:0},{value:"number",paraId:3,tocIndex:0},{value:"Graphic transparency",paraId:3,tocIndex:0},{value:"1",paraId:3,tocIndex:0},{value:"shape",paraId:4,tocIndex:1},{value:"Fills the plane with geometry.",paraId:4,tocIndex:1},{value:"fill",paraId:5,tocIndex:1},{value:"style",paraId:6,tocIndex:1},{value:"type",paraId:6,tocIndex:1},{value:"describe",paraId:6,tocIndex:1},{value:"default value",paraId:6,tocIndex:1},{value:"raisingHeight",paraId:6,tocIndex:1},{value:"number",paraId:6,tocIndex:1},{value:"Lifting height",paraId:6,tocIndex:1},{value:"0",paraId:6,tocIndex:1},{value:"opacityLinear",paraId:6,tocIndex:1},{value:"IOpacityLinear",paraId:6,tocIndex:1},{value:"transparent gradient",paraId:6,tocIndex:1},{value:"/",paraId:6,tocIndex:1},{value:"type IDir = 'in' | 'out';\n\ninterface IOpacityLinear {\n  enable: false;\n  dir: IDir;\n}\n",paraId:7,tocIndex:2},{value:"shape",paraId:8,tocIndex:3},{value:"for extruded geometry.",paraId:8,tocIndex:3},{value:"extrude",paraId:9,tocIndex:3},{value:"style",paraId:10,tocIndex:3},{value:"type",paraId:10,tocIndex:3},{value:"describe",paraId:10,tocIndex:3},{value:"default value",paraId:10,tocIndex:3},{value:"raisingHeight",paraId:10,tocIndex:3},{value:"number",paraId:10,tocIndex:3},{value:"Lifting height",paraId:10,tocIndex:3},{value:"0",paraId:10,tocIndex:3},{value:"heightfixed",paraId:10,tocIndex:3},{value:"boolean",paraId:10,tocIndex:3},{value:"Does the lifting height vary?",paraId:10,tocIndex:3},{value:"zoom",paraId:10,tocIndex:3},{value:"Variety",paraId:10,tocIndex:3},{value:"false",paraId:10,tocIndex:3},{value:"topsurface",paraId:10,tocIndex:3},{value:"boolean",paraId:10,tocIndex:3},{value:"Whether to display the top",paraId:10,tocIndex:3},{value:"true",paraId:10,tocIndex:3},{value:"sidesurface",paraId:10,tocIndex:3},{value:"boolean",paraId:10,tocIndex:3},{value:"Whether to display on the side",paraId:10,tocIndex:3},{value:"true",paraId:10,tocIndex:3},{value:"sourceColor",paraId:10,tocIndex:3},{value:"IColor",paraId:10,tocIndex:3},{value:"Side bottom color",paraId:10,tocIndex:3},{value:"/",paraId:10,tocIndex:3},{value:"targetColor",paraId:10,tocIndex:3},{value:"IColor",paraId:10,tocIndex:3},{value:"side top color",paraId:10,tocIndex:3},{value:"/",paraId:10,tocIndex:3},{value:"shape",paraId:11,tocIndex:4},{value:"for extruded geometry.",paraId:11,tocIndex:4},{value:"extrusion",paraId:12,tocIndex:4},{value:"style",paraId:13,tocIndex:4},{value:"type",paraId:13,tocIndex:4},{value:"describe",paraId:13,tocIndex:4},{value:"Whether to support data mapping",paraId:13,tocIndex:4},{value:"default value",paraId:13,tocIndex:4},{value:"extrusionBase",paraId:13,tocIndex:4},{value:"number",paraId:13,tocIndex:4},{value:"Base height in meters",paraId:13,tocIndex:4},{value:"support",paraId:13,tocIndex:4},{value:"0",paraId:13,tocIndex:4},{value:"The geometry layer supports configuring gradient effects (sourceColor, targetColor), which will be overwritten after configuring the gradient effect.",paraId:14,tocIndex:5},{value:"layer.color",paraId:14,tocIndex:5},{value:"Method to set the color.",paraId:14,tocIndex:5},{value:"shape",paraId:15,tocIndex:6},{value:"is the water surface geometry.",paraId:15,tocIndex:6},{value:"water",paraId:16,tocIndex:6},{value:"style",paraId:17,tocIndex:6},{value:"type",paraId:17,tocIndex:6},{value:"describe",paraId:17,tocIndex:6},{value:"default value",paraId:17,tocIndex:6},{value:"speed",paraId:17,tocIndex:6},{value:"number",paraId:17,tocIndex:6},{value:"water wave speed",paraId:17,tocIndex:6},{value:"0.5",paraId:17,tocIndex:6},{value:"waterTexture",paraId:17,tocIndex:6},{value:"string",paraId:17,tocIndex:6},{value:"water surface texture",paraId:17,tocIndex:6},{value:"0",paraId:17,tocIndex:6},{value:"waterTexture",paraId:18,tocIndex:6},{value:"The default value is '",paraId:18,tocIndex:6},{value:"https://gw.alipayobjects.com/mdn/rms_816329/afts/img/A*EojwT4VzSiYAAAAAAAAAAAAAARQnAQ",paraId:18,tocIndex:6},{value:"'",paraId:18,tocIndex:6},{value:"shape",paraId:19,tocIndex:7},{value:"is the ocean surface geometry.",paraId:19,tocIndex:7},{value:"ocean",paraId:20,tocIndex:7},{value:"style",paraId:21,tocIndex:7},{value:"type",paraId:21,tocIndex:7},{value:"describe",paraId:21,tocIndex:7},{value:"default value",paraId:21,tocIndex:7},{value:"watercolor",paraId:21,tocIndex:7},{value:"IColor",paraId:21,tocIndex:7},{value:"water color",paraId:21,tocIndex:7},{value:"#6D99A8",paraId:21,tocIndex:7},{value:"watercolor2",paraId:21,tocIndex:7},{value:"IColor",paraId:21,tocIndex:7},{value:"water color",paraId:21,tocIndex:7},{value:"#0F121C",paraId:21,tocIndex:7},{value:"Others supported by geometry layers",paraId:22,tocIndex:8},{value:"shape",paraId:22,tocIndex:8},{value:"There are corresponding layers. You can refer to the style parameters of the corresponding layers.",paraId:22,tocIndex:8}]},86055:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(4028);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"optional",paraId:0,tocIndex:0},{value:" *default:*automatic numbering",paraId:0,tocIndex:0},{value:"Set the layer name, you can get the layer based on name",paraId:1,tocIndex:0},{value:"scene.getLayerByName(name);\n",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:1},{value:"bool",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"optional",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"default:",paraId:3,tocIndex:1},{value:" true",paraId:3,tocIndex:1},{value:"Is the layer visible?",paraId:4,tocIndex:1},{value:" ",paraId:5,tocIndex:2},{value:"int",paraId:5,tocIndex:2},{value:" ",paraId:5,tocIndex:2},{value:"optional",paraId:5,tocIndex:2},{value:" *default:*0",paraId:5,tocIndex:2},{value:"Layer drawing order, larger values ​​are drawn on the upper layer, and you can control the upper and lower levels of layer drawing.",paraId:6,tocIndex:2},{value:"L7 uses a queue rendering mechanism. All layers are stored in an array internally. The rendering of each frame will sort the layer array according to the zIndex value, and then traverse the array to render the qualified layers to the scene. middle",paraId:7,tocIndex:2},{value:" ",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"optional",paraId:8,tocIndex:3},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:8,tocIndex:3},{value:"Layer shows minimum zoom level",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"number",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"optional",paraId:10,tocIndex:4},{value:" *default:*Mapbox (0-24) Gaode (2-19)",paraId:10,tocIndex:4},{value:"Layer shows maximum zoom level",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:5},{value:"bool",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"optional",paraId:12,tocIndex:5},{value:" ",paraId:12,tocIndex:5},{value:"default:",paraId:12,tocIndex:5},{value:" false",paraId:12,tocIndex:5},{value:"After layer initialization is completed, whether the map will automatically zoom to the layer range.",paraId:13,tocIndex:5},{value:" ",paraId:14,tocIndex:6},{value:"bool",paraId:14,tocIndex:6},{value:" ",paraId:14,tocIndex:6},{value:"optional",paraId:14,tocIndex:6},{value:" *default:*0",paraId:14,tocIndex:6},{value:"The layer picking cache mechanism, for example, a 1px width line is difficult to pick up (click) with the mouse. By setting this parameter, you can expand the picking range (enlarge the size of the layer object)",paraId:15,tocIndex:6},{value:" ",paraId:16,tocIndex:7},{value:"string",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"optional",paraId:16,tocIndex:7},{value:" ",paraId:16,tocIndex:7},{value:"default:",paraId:16,tocIndex:7},{value:"'normal'",paraId:16,tocIndex:7},{value:"Layer element blending effects",paraId:17,tocIndex:7},{value:"normal Normal effect Default When occlusion occurs, only the color of the previous layer will be displayed.",paraId:18,tocIndex:7},{value:"Additive overlay mode displays the superposition of the colors of the front and rear layers when occlusion occurs.",paraId:18,tocIndex:7},{value:"subtractive subtraction mode: when occlusion occurs, the subtraction of the colors of the front and rear layers is displayed.",paraId:18,tocIndex:7},{value:"max maximum value When occlusion occurs, the maximum value of the layer color rgb is displayed.",paraId:18,tocIndex:7},{value:" ",paraId:19,tocIndex:8},{value:"boolean",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"optional",paraId:19,tocIndex:8},{value:" ",paraId:19,tocIndex:8},{value:"default:",paraId:19,tocIndex:8},{value:"'false'",paraId:19,tocIndex:8},{value:"Layer events, by default only respond to the top layer, setting to true will allow events to be transmitted transparently",paraId:19,tocIndex:8},{value:"⚠️ The use of mask and maskfence is not recommended. After configuring 2.14.x, the version will take effect.",paraId:20,tocIndex:8},{value:"Template layer: a layer used as a template. PointLayer, LineLayer, and PolygonLayer can all be used as templates.\nMask layer: the layer cut by the template",paraId:21,tocIndex:8},{value:"Mask layer takes effect",paraId:22,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"array Layer",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"optional",paraId:23,tocIndex:9},{value:" ",paraId:23,tocIndex:9},{value:"default:",paraId:23,tocIndex:9},{value:"[]",paraId:23,tocIndex:9},{value:"Mask layer takes effect",paraId:24,tocIndex:10},{value:"Whether to enable the mask. It is enabled by default. It will take effect when maskLayers is not empty.",paraId:25,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"bool",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"optional",paraId:26,tocIndex:10},{value:" ",paraId:26,tocIndex:10},{value:"default:",paraId:26,tocIndex:10},{value:" true",paraId:26,tocIndex:10},{value:"Mask layer takes effect\n",paraId:27,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"boolean",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"optional",paraId:28,tocIndex:11},{value:" ",paraId:28,tocIndex:11},{value:"default:",paraId:28,tocIndex:11},{value:" true",paraId:28,tocIndex:11},{value:"Used to describe the content of the current layer and mask boundary display.",paraId:29,tocIndex:11},{value:"true",paraId:30,tocIndex:11},{value:"Show inside the mask",paraId:30,tocIndex:11},{value:"false",paraId:30,tocIndex:11},{value:"Show outside mask",paraId:30,tocIndex:11},{value:"Template layer takes effect",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"enumerate",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"optional",paraId:31,tocIndex:12},{value:" ",paraId:31,tocIndex:12},{value:"default:",paraId:31,tocIndex:12},{value:" and",paraId:31,tocIndex:12},{value:"It is invalid when there are multiple maskLayers and needs to be set on the template layer.",paraId:31,tocIndex:12},{value:"or intersection",paraId:32,tocIndex:12},{value:"and union",paraId:32,tocIndex:12},{value:"Usage example",paraId:33,tocIndex:12},{value:"const polygonLayer = new Polygon();\nconst rasterLayer = new Raster({\n  // Raster layer uses polygon mask\n  maskLayers: [polygonLayer],\n  enableMask: true,\n  maskInside: true,\n});\n",paraId:34,tocIndex:12}]},46629:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(77303);const t=[{value:"RasterLayer",paraId:0,tocIndex:0},{value:"The layer mainly realizes the visualization of raster data. The main source of raster data is satellite remote sensing data, such as digital elevation map, vegetation distribution map, and night light map.",paraId:0,tocIndex:0},{value:"Single band, mapped to color based on raster data value",paraId:1,tocIndex:1},{value:"Multi-band, different bands are mapped to R/G/B three-channel visual display",paraId:2,tocIndex:2},{value:"Multi-band, providing two bands for normalized index calculation",paraId:3,tocIndex:3},{value:"(b-a)/(b+a)",paraId:3,tocIndex:3}]},82883:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(54674);const t=[{value:"Single-band raster data rendering, visual coloring based on raster data",paraId:0,tocIndex:0},{value:"Raster data is the visualization of data raster. The main source of raster data is satellite remote sensing data, such as digital elevation map, vegetation distribution map and night light map.",paraId:1,tocIndex:1},{value:"data data",paraId:2,tocIndex:1},{value:"option configuration item\n",paraId:2,tocIndex:1},{value:"parser data parsing parameters",paraId:3,tocIndex:1},{value:"data The parsed data, which is an array",paraId:4,tocIndex:2},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:5,tocIndex:2},{value:"Taking geotiff as an example, the data needs to be parsed first and input to the source as data.",paraId:6,tocIndex:2},{value:"import * as GeoTIFF from 'geotiff';\n\nasync function getTiffData() {\n  async function getTiffData() {\n    const response = await fetch(\n      'https://gw.alipayobjects.com/zos/antvdemo/assets/light_clip/lightF182013.tiff',\n    );\n    const arrayBuffer = await response.arrayBuffer();\n    const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n    const image = await tiff.getImage();\n    const width = image.getWidth();\n    const height = image.getHeight();\n    const values = await image.readRasters();\n    return {\n      data: values[0],\n      width,\n      height,\n    };\n  }\n}\nconst tiffdata = await getTiffData();\nlayer.source(tiffdata.data, {\n  parser: {\n    type: 'raster',\n    width: tiffdata.width,\n    height: tiffdata.height,\n    extent: [73.4821902409999979, 3.8150178409999995, 135.1066187319999869, 57.6300459959999998],\n  },\n});\n",paraId:7,tocIndex:2},{value:"type: raster",paraId:8,tocIndex:3},{value:"extent: the latitude and longitude range of the raster [minlng, minlat,maxLng, maxLat]",paraId:8,tocIndex:3},{value:"width data width",paraId:8,tocIndex:3},{value:"height data height",paraId:8,tocIndex:3},{value:"Add raster data to the map based on its latitude and longitude range.",paraId:9,tocIndex:3},{value:"layer.source(rasterData, {\n  parser: {\n    type: 'raster',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:10,tocIndex:3},{value:"Raster ndi",paraId:11},{value:"style",paraId:12,tocIndex:5},{value:"Method is used to configure the style of the layer,",paraId:12,tocIndex:5},{value:"The single-channel drawing result is controlled by a single numerical value, such as a grayscale image. The color corresponding to the numerical value can be configured by expressing",paraId:13,tocIndex:5},{value:"rampColors",paraId:13,tocIndex:5},{value:"Ribbon control.",paraId:13,tocIndex:5},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:14,tocIndex:5},{value:"style",paraId:15,tocIndex:6},{value:"type",paraId:15,tocIndex:6},{value:"describe",paraId:15,tocIndex:6},{value:"default value",paraId:15,tocIndex:6},{value:"opacity",paraId:15,tocIndex:6},{value:"number",paraId:15,tocIndex:6},{value:"Graphic transparency",paraId:15,tocIndex:6},{value:"1",paraId:15,tocIndex:6},{value:"clampLow",paraId:15,tocIndex:6},{value:"boolean",paraId:15,tocIndex:6},{value:"Set as",paraId:15,tocIndex:6},{value:"true",paraId:15,tocIndex:6},{value:", lower than",paraId:15,tocIndex:6},{value:"domain",paraId:15,tocIndex:6},{value:"data will not be displayed",paraId:15,tocIndex:6},{value:"false",paraId:15,tocIndex:6},{value:"clampHigh",paraId:15,tocIndex:6},{value:"boolean",paraId:15,tocIndex:6},{value:"Set as",paraId:15,tocIndex:6},{value:"true",paraId:15,tocIndex:6},{value:", higher than",paraId:15,tocIndex:6},{value:"domain",paraId:15,tocIndex:6},{value:"data will not be displayed",paraId:15,tocIndex:6},{value:"false",paraId:15,tocIndex:6},{value:"domain",paraId:15,tocIndex:6},{value:"[number, number]",paraId:15,tocIndex:6},{value:"Data mapping interval",paraId:15,tocIndex:6},{value:"[ 0, 8000 ]",paraId:15,tocIndex:6},{value:"noDataValue",paraId:15,tocIndex:6},{value:"number",paraId:15,tocIndex:6},{value:"Values ​​that will not be displayed",paraId:15,tocIndex:6},{value:"-9999999",paraId:15,tocIndex:6},{value:"rampColors",paraId:15,tocIndex:6},{value:"IRampColors",paraId:15,tocIndex:6},{value:"The color ramp for the range mapping color",paraId:15,tocIndex:6},{value:"/",paraId:15,tocIndex:6},{value:"type type supports `linear','quantize','custom','cat'",paraId:16,tocIndex:7},{value:"colors color array",paraId:16,tocIndex:7},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:16,tocIndex:7},{value:"⚠️ 2.13 new features",paraId:17,tocIndex:7},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:18,tocIndex:8},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:19,tocIndex:8},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:20,tocIndex:9},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:21,tocIndex:9},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:22,tocIndex:10},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:23,tocIndex:10},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:24,tocIndex:11},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:25,tocIndex:11}]},22109:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(40820);const t=[{value:"Raster NDI",paraId:0,tocIndex:0},{value:"Normalized Difference Indices Calculation of normalized indices, providing another band for normalized calculation",paraId:0,tocIndex:0},{value:"raster-ndi(Normalized Difference Indices) source is to calculate the normalized index of multi-band data, such as calculating NDVI/NDWI and other indices.",paraId:1,tocIndex:1},{value:"data data",paraId:2,tocIndex:1},{value:"option configuration item\n",paraId:2,tocIndex:1},{value:"parser data parsing parameters\n",paraId:3,tocIndex:1},{value:"type parsing type",paraId:4,tocIndex:1},{value:"ndi",paraId:4,tocIndex:1},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'ndi',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3], // start from zero\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:5,tocIndex:1},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:6,tocIndex:2},{value:"data is an array type",paraId:7,tocIndex:2},{value:"RasterDataType[]",paraId:7,tocIndex:2},{value:"If it is a multi-band Tiff, you can directly use geotiff,js to read all bands.",paraId:8,tocIndex:2},{value:"If it is a single file and single band data, it needs to be read separately and merged into one data.",paraId:8,tocIndex:2},{value:"Single file multi-band reading example",paraId:9,tocIndex:2},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:10,tocIndex:2},{value:"type parsing type 'rgb'",paraId:11,tocIndex:3},{value:"必选",paraId:11,tocIndex:3},{value:"bands ",paraId:12,tocIndex:3},{value:"[number,number] 指定需要归一化的波段,data 数组长度需要大于等于 2  ",paraId:12,tocIndex:3},{value:"Required`",paraId:12,tocIndex:3},{value:"Note: The bands serial number starts from zero (5, 4 in landsat 8, the band should be set to 4, 3)",paraId:13,tocIndex:3},{value:"width length",paraId:14,tocIndex:3},{value:"必选",paraId:14,tocIndex:3},{value:"height width",paraId:15,tocIndex:3},{value:"必选",paraId:15,tocIndex:3},{value:"Raster ndi",paraId:16},{value:"style",paraId:17,tocIndex:5},{value:"Method is used to configure the style of the layer,",paraId:17,tocIndex:5},{value:"The single-channel drawing result is controlled by a single numerical value, such as a grayscale image. The color corresponding to the numerical value can be configured by expressing",paraId:18,tocIndex:5},{value:"rampColors",paraId:18,tocIndex:5},{value:"Ribbon control.",paraId:18,tocIndex:5},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:19,tocIndex:5},{value:"style",paraId:20,tocIndex:6},{value:"type",paraId:20,tocIndex:6},{value:"describe",paraId:20,tocIndex:6},{value:"default value",paraId:20,tocIndex:6},{value:"opacity",paraId:20,tocIndex:6},{value:"number",paraId:20,tocIndex:6},{value:"Graphic transparency",paraId:20,tocIndex:6},{value:"1",paraId:20,tocIndex:6},{value:"clampLow",paraId:20,tocIndex:6},{value:"boolean",paraId:20,tocIndex:6},{value:"Set as",paraId:20,tocIndex:6},{value:"true",paraId:20,tocIndex:6},{value:", lower than",paraId:20,tocIndex:6},{value:"domain",paraId:20,tocIndex:6},{value:"data will not be displayed",paraId:20,tocIndex:6},{value:"false",paraId:20,tocIndex:6},{value:"clampHigh",paraId:20,tocIndex:6},{value:"boolean",paraId:20,tocIndex:6},{value:"Set as",paraId:20,tocIndex:6},{value:"true",paraId:20,tocIndex:6},{value:", higher than",paraId:20,tocIndex:6},{value:"domain",paraId:20,tocIndex:6},{value:"data will not be displayed",paraId:20,tocIndex:6},{value:"false",paraId:20,tocIndex:6},{value:"domain",paraId:20,tocIndex:6},{value:"[number, number]",paraId:20,tocIndex:6},{value:"Data mapping interval",paraId:20,tocIndex:6},{value:"[ 0, 8000 ]",paraId:20,tocIndex:6},{value:"noDataValue",paraId:20,tocIndex:6},{value:"number",paraId:20,tocIndex:6},{value:"Values ​​that will not be displayed",paraId:20,tocIndex:6},{value:"-9999999",paraId:20,tocIndex:6},{value:"rampColors",paraId:20,tocIndex:6},{value:"IRampColors",paraId:20,tocIndex:6},{value:"The color ramp for the range mapping color",paraId:20,tocIndex:6},{value:"/",paraId:20,tocIndex:6},{value:"type type supports `linear','quantize','custom','cat'",paraId:21,tocIndex:7},{value:"colors color array",paraId:21,tocIndex:7},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:21,tocIndex:7},{value:"⚠️ 2.13 new features",paraId:22,tocIndex:7},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:23,tocIndex:8},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:24,tocIndex:8},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:25,tocIndex:9},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:26,tocIndex:9},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:27,tocIndex:10},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:28,tocIndex:10},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:29,tocIndex:11},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:30,tocIndex:11}]},65452:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(56485);const t=[{value:"Raster RGB ",paraId:0,tocIndex:0},{value:"Band combination visualization, different band mapping to R/G/B channel visualization",paraId:0,tocIndex:0},{value:"raster-rgb source 是将多波段数据合成 RGB数据进行展示，如对 LandSat8 数据我们可以按照 5,4,3 或者 4,3,2 波段进行RGB组合显示",paraId:1,tocIndex:1},{value:"data 数据",paraId:2,tocIndex:1},{value:"option 配置项\n",paraId:2,tocIndex:1},{value:"parser 数据解析参数\n",paraId:3,tocIndex:1},{value:"type 解析类型 ",paraId:4,tocIndex:1},{value:"rgb",paraId:4,tocIndex:1},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'rgb',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3, 2], // 从零开始\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:5,tocIndex:1},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:6,tocIndex:2},{value:"data 为数组类型 ",paraId:7,tocIndex:2},{value:"RasterDataType[]",paraId:7,tocIndex:2},{value:"如果是多波段 Tiff 可以直接使用geotiff,js 读取所有波段，",paraId:8,tocIndex:2},{value:"如果是单文件单波段数据，需要单独读取并合并成一个数据。",paraId:8,tocIndex:2},{value:"单文件多波段读取示例",paraId:9,tocIndex:2},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:10,tocIndex:2},{value:"type 解析类型 'rgb' ",paraId:11,tocIndex:3},{value:"必选",paraId:11,tocIndex:3},{value:"bands ",paraId:12,tocIndex:3},{value:"[number,number,number] 指定 R/G/B 通道对应的数据索引,data 数组长度需要大于等于 3  ",paraId:12,tocIndex:3},{value:"必选`",paraId:12,tocIndex:3},{value:"注：bands 序号从零开始（landsat 8 里的 5，4,3 波段这样要设置为 4,3, 2）",paraId:13,tocIndex:3},{value:"width 长度 ",paraId:14,tocIndex:3},{value:"必选",paraId:14,tocIndex:3},{value:"height 宽度 ",paraId:15,tocIndex:3},{value:"必选",paraId:15,tocIndex:3},{value:"countCut 颜色拉伸参数 ",paraId:16,tocIndex:3},{value:"[number,number]",paraId:16,tocIndex:3},{value:" 数值为百分比，默认值 ",paraId:16,tocIndex:3},{value:"[2,98]",paraId:16,tocIndex:3},{value:" ",paraId:16,tocIndex:3},{value:"可选",paraId:16,tocIndex:3},{value:"Raster RGB",paraId:17},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:18,tocIndex:6}]},2538:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(80311);const t=[{value:"LarkMap provides map container components for the L7 react map component library. Related map components and Hooks need to be placed inside the container component before they can be used. The container component can configure different maps through properties and supports Mapbox, Gaode, Baidu, Tencent and L7Map as basemaps. Among them, Baidu and Tencent are still experimental features.",paraId:0,tocIndex:0},{value:"import type { LarkMapProps } from '@antv/larkmap';\nimport { LarkMap } from '@antv/larkmap';\nimport React from 'react';\n\nconst config: LarkMapProps = {\n  mapType: 'Gaode',\n  mapOptions: {\n    style: 'light',\n    center: [120.210792, 30.246026],\n    zoom: 9,\n    // token: '你申请的 Key',\n  },\n};\n\nexport default () => (\n  <LarkMap {...config} style={{ height: '300px' }}>\n    <h2 style={{ position: 'absolute', left: '10px' }}>LarkMap</h2>\n  </LarkMap>\n);\n",paraId:1,tocIndex:0},{value:"L7 React component library",paraId:2,tocIndex:0}]},25380:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(23689);const t=[{value:"scene object",paraId:0,tocIndex:0},{value:"scene",paraId:0,tocIndex:0},{value:"It is a global object that contains maps, map controls, components, and loaded resources. It is passed",paraId:0,tocIndex:0},{value:"scene",paraId:0,tocIndex:0},{value:"Scene object, we can get everything we need to operate the map.",paraId:0,tocIndex:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:" ",paraId:2,tocIndex:2},{value:"string | HTMLElement",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"required",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"You need to pass in the dom container or container id.",paraId:3,tocIndex:2},{value:" MapInstance ",paraId:4,tocIndex:3},{value:"required",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"The map instance can be obtained through the scene map attribute.",paraId:5,tocIndex:3},{value:"const map = scene.map;\n",paraId:6,tocIndex:3},{value:"In order to unify the interface differences between different basemaps",paraId:7,tocIndex:3},{value:"L7",paraId:7,tocIndex:3},{value:"exist",paraId:7,tocIndex:3},{value:"Scene",paraId:7,tocIndex:3},{value:"layer pair",paraId:7,tocIndex:3},{value:"map",paraId:7,tocIndex:3},{value:"The methods have been unified, so some map operation methods can be passed",paraId:7,tocIndex:3},{value:"Scene",paraId:7,tocIndex:3},{value:"Called so that consistent performance can be ensured when switching between different basemaps.",paraId:7,tocIndex:3},{value:"Sample code",paraId:8,tocIndex:3},{value:"const scene = new L7.Scene({\n  id: 'map',\n  map: new L7.GaodeMap({\n    style: 'dark',\n    center: [110.770672, 34.159869],\n    pitch: 45,\n  }),\n});\n",paraId:9,tocIndex:3},{value:" ",paraId:10,tocIndex:4},{value:"bottomleft",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"Optional",paraId:10,tocIndex:4},{value:" ",paraId:10,tocIndex:4},{value:"L7",paraId:11,tocIndex:4},{value:"provided by default",paraId:11,tocIndex:4},{value:"Logo",paraId:11,tocIndex:4},{value:"The display position can be configured, and the default is the lower left corner.",paraId:11,tocIndex:4},{value:"bottomright",paraId:12,tocIndex:4},{value:"topright",paraId:12,tocIndex:4},{value:"bottomleft",paraId:12,tocIndex:4},{value:"topleft",paraId:12,tocIndex:4},{value:"topcenter",paraId:12,tocIndex:4},{value:"bottomcenter",paraId:12,tocIndex:4},{value:"leftcenter",paraId:12,tocIndex:4},{value:"rightcenter",paraId:12,tocIndex:4},{value:" ",paraId:13,tocIndex:5},{value:"bottomleft",paraId:13,tocIndex:5},{value:" ",paraId:13,tocIndex:5},{value:"Optional",paraId:13,tocIndex:5},{value:" ",paraId:13,tocIndex:5},{value:"default: true",paraId:13,tocIndex:5},{value:" ",paraId:13,tocIndex:5},{value:"Configuration",paraId:14,tocIndex:5},{value:"L7",paraId:14,tocIndex:5},{value:"of",paraId:14,tocIndex:5},{value:"Logo",paraId:14,tocIndex:5},{value:"Whether to display or not, it is displayed by default.",paraId:14,tocIndex:5},{value:" ",paraId:15,tocIndex:6},{value:"boolean",paraId:15,tocIndex:6},{value:" ",paraId:15,tocIndex:6},{value:"Optional",paraId:15,tocIndex:6},{value:" ",paraId:15,tocIndex:6},{value:"default: true",paraId:15,tocIndex:6},{value:" ",paraId:15,tocIndex:6},{value:"Whether to start anti-aliasing before starting.",paraId:16,tocIndex:6},{value:" ",paraId:17,tocIndex:7},{value:"boolean",paraId:17,tocIndex:7},{value:" ",paraId:17,tocIndex:7},{value:"Optional",paraId:17,tocIndex:7},{value:" ",paraId:17,tocIndex:7},{value:"default: false",paraId:17,tocIndex:7},{value:" ",paraId:17,tocIndex:7},{value:"Whether to start cropping.",paraId:18,tocIndex:7},{value:"🌟 Supported from version v2.7.2, layer",paraId:19,tocIndex:7},{value:"Mask",paraId:19,tocIndex:7},{value:"Masking capabilities as well as vector tiles are required to start this configuration.",paraId:19,tocIndex:7},{value:" ",paraId:20,tocIndex:8},{value:"boolean",paraId:20,tocIndex:8},{value:" ",paraId:20,tocIndex:8},{value:"Optional",paraId:20,tocIndex:8},{value:" ",paraId:20,tocIndex:8},{value:"default: false",paraId:20,tocIndex:8},{value:" ",paraId:20,tocIndex:8},{value:"Whether to retain buffer data",paraId:21,tocIndex:8},{value:"boolean",paraId:21,tocIndex:8},{value:" ",paraId:21,tocIndex:8},{value:"false",paraId:21,tocIndex:8},{value:"。",paraId:21,tocIndex:8},{value:"Add the layer to",paraId:22,tocIndex:10},{value:"Scene",paraId:22,tocIndex:10},{value:"in the scene.",paraId:22,tocIndex:10},{value:"Parameters:",paraId:23,tocIndex:10},{value:"layer",paraId:24,tocIndex:10},{value:"layer object",paraId:24,tocIndex:10},{value:"scene.addLayer(layer);\n",paraId:25,tocIndex:10},{value:"Get the corresponding layer.",paraId:26,tocIndex:11},{value:"scene.getLayer('layerID');\n",paraId:27,tocIndex:11},{value:"Get all map layers.",paraId:28,tocIndex:12},{value:"scene.getLayers();\n",paraId:29,tocIndex:12},{value:"Get the layer based on its name.",paraId:30,tocIndex:13},{value:"name",paraId:31,tocIndex:13},{value:"The layer is configured during initialization.",paraId:31,tocIndex:13},{value:"name",paraId:31,tocIndex:13},{value:"。",paraId:31,tocIndex:13},{value:"scene.getLayerByName(name);\n",paraId:32,tocIndex:13},{value:"Remove",paraId:33,tocIndex:14},{value:"layer",paraId:33,tocIndex:14},{value:"layers.",paraId:33,tocIndex:14},{value:"scene.removeLayer(layer);\n",paraId:34,tocIndex:14},{value:"🌟 The layer will be destroyed when removed.",paraId:35,tocIndex:14},{value:"Remove all layer objects.",paraId:36,tocIndex:15},{value:"scene.removeAllLayer();\n",paraId:37,tocIndex:15},{value:"🌟 The layer will be destroyed when removed.",paraId:38,tocIndex:15},{value:"Add component controls.",paraId:39,tocIndex:17},{value:"crl",paraId:40,tocIndex:17},{value:"User-created control object.",paraId:40,tocIndex:17},{value:"scene.addControl(ctl);\n",paraId:41,tocIndex:17},{value:"Remove user-added component controls.",paraId:42,tocIndex:18},{value:"ctl",paraId:43,tocIndex:18},{value:"User-created control object.",paraId:43,tocIndex:18},{value:"scene.removeControl(ctl);\n",paraId:44,tocIndex:18},{value:"Get the control based on its name.",paraId:45,tocIndex:19},{value:"const zoomControl = new Zoom({\n  // zoom control\n  name: 'z1', // The name of the control passed in by the user (or not passed in, the default name of the control is zoom)\n  position: 'topright',\n});\n\nscene.getControlByName('z1');\n",paraId:46,tocIndex:19},{value:"Add bubble objects to the scene. Bubbles are used to display user-defined information.",paraId:47,tocIndex:21},{value:"scene.addPopup(popup);\n",paraId:48,tocIndex:21},{value:"Remove the bubble object from the scene",paraId:49,tocIndex:22},{value:"scene.removePopup(popup);\n",paraId:50,tocIndex:22},{value:"Add marker objects to the scene,",paraId:51,tocIndex:24},{value:"Marker",paraId:51,tocIndex:24},{value:"Instances are freely controlled by the user",paraId:51,tocIndex:24},{value:"DOM",paraId:51,tocIndex:24},{value:"。",paraId:51,tocIndex:24},{value:"maker",paraId:52,tocIndex:24},{value:"User created",paraId:52,tocIndex:24},{value:"Marker",paraId:52,tocIndex:24},{value:"Example.",paraId:52,tocIndex:24},{value:"const marker = new Marker({\n  element: el,\n}).setLnglat({ lng: nodes[i].x * 1, lat: nodes[i].y });\nscene.addMarker(marker);\n",paraId:53,tocIndex:24},{value:"When the user needs to add many",paraId:54,tocIndex:25},{value:"Marker",paraId:54,tocIndex:25},{value:"Instances can be used to facilitate management",paraId:54,tocIndex:25},{value:"MarkerLayer",paraId:54,tocIndex:25},{value:"Unified management of objects.",paraId:54,tocIndex:25},{value:"layer",paraId:55,tocIndex:25},{value:"Mark layer objects.",paraId:55,tocIndex:25},{value:"const markerLayer = new MarkerLayer();\nscene.addMarkerLayer(markerLayer);\n",paraId:56,tocIndex:25},{value:"Remove the label layer.",paraId:57,tocIndex:26},{value:"layer",paraId:58,tocIndex:26},{value:"Mark layer objects.",paraId:58,tocIndex:26},{value:"scene.removeMarkerLayer(markerLayer);\n",paraId:59,tocIndex:26},{value:"Removes all label objects from the scene.",paraId:60,tocIndex:27},{value:"scene.removeAllMarkers();\n",paraId:61,tocIndex:27},{value:"Static methods are called through the Scene class, not the scene instance",paraId:62,tocIndex:28},{value:"Add a custom data protocol and set up a custom load tile function that will be called when data starting with a custom URL pattern is used.",paraId:63,tocIndex:29},{value:"protocol protocol name",paraId:64,tocIndex:29},{value:"handler data processing callback function\n",paraId:64,tocIndex:29},{value:"requestParameters: RequestParameters,\n",paraId:65,tocIndex:29},{value:"url tile URL, carrying tile row and column numbers x, y, z",paraId:66,tocIndex:29},{value:"callback: ResponseCallback",paraId:65,tocIndex:29},{value:") => Cancelable\n",paraId:65,tocIndex:29},{value:"Cancelable： {\ncancel: () => void;\n};",paraId:67,tocIndex:29},{value:"Scene.addProtocol('custom', (params, callback) => {\n  fetch(`https://${params.url.split('://')[1]}`)\n    .then((t) => {\n      if (t.status == 200) {\n        t.arrayBuffer().then((arr) => {\n          callback(null, arr, null, null);\n        });\n      } else {\n        callback(new Error(`Tile fetch error: ${t.statusText}`));\n      }\n    })\n    .catch((e) => {\n      callback(new Error(e));\n    });\n  return { cancel: () => {} };\n});\n// the following is an example of a way to return an error when trying to load a tile\nScene.addProtocol('custom2', (params, callback) => {\n  callback(new Error('someErrorMessage'));\n  return { cancel: () => {} };\n});\n",paraId:68,tocIndex:30},{value:"import * as pmtiles from 'pmtiles';\nconst protocol = new pmtiles.Protocol();\nconst scene = new Scene({\n  id: 'map',\n  map: new Map({\n    center: [11.2438, 43.7799],\n    zoom: 12,\n  }),\n});\n\nscene.addProtocol('pmtiles', protocol.tile);\nconst source = new Source(\n  'pmtiles://https://mdn.alipayobjects.com/afts/file/A*HYvHSZ-wQmIAAAAAAAAAAAAADrd2AQ/protomaps(vector)ODbL_firenze.bin',\n  {\n    parser: {\n      type: 'mvt',\n      tileSize: 256,\n      maxZoom: 14,\n      extent: [-180, -85.051129, 179, 85.051129],\n    },\n  },\n);\n",paraId:69,tocIndex:31},{value:"Delete previously added protocols",paraId:70,tocIndex:32},{value:"name: protocol name",paraId:71,tocIndex:32},{value:"scene.remove Protocol('mbtiles',protocol.tile);\n",paraId:72,tocIndex:32},{value:"Get the current zoom level.",paraId:73,tocIndex:34},{value:"scene.getZoom();\n",paraId:74,tocIndex:34},{value:"Get map center point",paraId:75,tocIndex:35},{value:"interface ILngLat {\n  lng: number;\n  lat: number;\n}\n\nscene.getCenter();\n",paraId:76,tocIndex:35},{value:"Get the map container size, width, height.",paraId:77,tocIndex:36},{value:"scene.getSize();\n",paraId:78,tocIndex:36},{value:"Get the map elevation angle.",paraId:79,tocIndex:37},{value:"scene.getPitch();\n",paraId:80,tocIndex:37},{value:"Get the map container.",paraId:81,tocIndex:38},{value:"scene.getContainer();\n",paraId:82,tocIndex:38},{value:"parameter",paraId:83,tocIndex:39},{value:"style",paraId:83,tocIndex:39},{value:"The parameter is a string, and you can select the built-in map style. The specific style format is consistent with the setting method of each base map.",paraId:83,tocIndex:39},{value:"L7",paraId:84,tocIndex:39},{value:"There are three built-in map styles:",paraId:84,tocIndex:39},{value:"AMAP",paraId:84,tocIndex:39},{value:"and",paraId:84,tocIndex:39},{value:"MapBox",paraId:84,tocIndex:39},{value:"All applicable.",paraId:84,tocIndex:39},{value:"light",paraId:85,tocIndex:39},{value:"dark",paraId:85,tocIndex:39},{value:"normal",paraId:85,tocIndex:39},{value:"Method to set the map basemap style.",paraId:86,tocIndex:39},{value:"//Shortcut name setting\nscene.setMapStyle('light');\n\n// mapbox theme settings\nscene.setMapStyle('mapbox://styles/mapbox/streets-v11');\n\n// AMap\nscene.setMapStyle('amap://styles/2a09079c3daac9420ee53b67307a8006?isPublic=true');\n",paraId:87,tocIndex:39},{value:"Set the map center point coordinates.",paraId:88,tocIndex:40},{value:"L7",paraId:88,tocIndex:40},{value:"provided",paraId:88,tocIndex:40},{value:"setCenter",paraId:88,tocIndex:40},{value:"method, allowing the user to dynamically set the center point of the map, and also allows the optional",paraId:88,tocIndex:40},{value:"options",paraId:88,tocIndex:40},{value:"Property settings offset.",paraId:88,tocIndex:40},{value:"type ICenter = [number, number];\ninterface ICameraOptions {\n  padding:\n    | number\n    | [number, number, number, number]\n    | {\n        top?: number,\n        bottom?: number,\n        right?: number,\n        left?: number,\n      };\n}\n\nscene.setCenter([lng, lat]);\nscene.setCenter([lng, lat], {\n  padding: {\n    top: 100,\n  },\n});\n",paraId:89,tocIndex:40},{value:"🌟",paraId:90,tocIndex:40},{value:"padding",paraId:90,tocIndex:40},{value:"Parameters support the following three value transfer methods. The unit of the value is",paraId:90,tocIndex:40},{value:"px",paraId:90,tocIndex:40},{value:", indicating the offset distance between the center point of the map and the edge of the container.",paraId:90,tocIndex:40},{value:"export interface ICameraOptions {\n  padding:\n    | number\n    | [number, number, number, number]\n    | {\n        top?: number,\n        bottom?: number,\n        right?: number,\n        left?: number,\n      };\n}\n",paraId:91,tocIndex:40},{value:"Online case",paraId:92},{value:"Set map level and center.",paraId:93,tocIndex:41},{value:"type ICenter = [number, number];\nscene.setZoomAndCenter(zoom, center);\n",paraId:94,tocIndex:41},{value:"Set map zoom level",paraId:95,tocIndex:42},{value:"scene.setZoom(10);\n",paraId:96,tocIndex:42},{value:"Set the clockwise rotation angle of the map. The rotation origin is the center point of the map container. The value range is [0-360].",paraId:97,tocIndex:43},{value:"scene.setRotation(rotation);\n",paraId:98,tocIndex:43},{value:"The map is zoomed in one level.",paraId:99,tocIndex:44},{value:"scene.zoomIn();\n",paraId:100,tocIndex:44},{value:"The map shrinks one level.",paraId:101,tocIndex:45},{value:"scene.zoomOut();\n",paraId:102,tocIndex:45},{value:"Pan the map to the specified latitude and longitude location.",paraId:103,tocIndex:46},{value:"type ILngLat = [number, number];\nscene.panTo(LngLat);\n",paraId:104,tocIndex:46},{value:"Moves the map in pixels in the X and Y directions.",paraId:105,tocIndex:47},{value:"x",paraId:106,tocIndex:47},{value:"Moving pixels horizontally to the right is the positive direction.",paraId:106,tocIndex:47},{value:"y",paraId:106,tocIndex:47},{value:"Move pixels vertically downward in the positive direction.",paraId:106,tocIndex:47},{value:"scene.panBy(x, y);\n",paraId:107,tocIndex:47},{value:"Set the map tilt angle.",paraId:108,tocIndex:48},{value:"scene.setPitch(pitch);\n",paraId:109,tocIndex:48},{value:"Used to set some interactive configurations of the map.",paraId:110,tocIndex:49},{value:"interface IStatusOptions {\n  showIndoorMap: boolean;\n  resizeEnable: boolean;\n  dragEnable: boolean;\n  keyboardEnable: boolean;\n  doubleClickZoom: boolean;\n  zoomEnable: boolean;\n  rotateEnable: boolean;\n}\n\nscene.setMapStatus({ dragEnable: false });\n",paraId:111,tocIndex:49},{value:"The map is zoomed to a certain range.",paraId:112,tocIndex:50},{value:"bound",paraId:113,tocIndex:50},{value:"Represents the latitude and longitude range [[minlng,minlat],[maxlng,maxlat]].",paraId:113,tocIndex:50},{value:"options",paraId:113,tocIndex:50},{value:"User input, override",paraId:113,tocIndex:50},{value:"animate",paraId:113,tocIndex:50},{value:"Direct configuration, override",paraId:113,tocIndex:50},{value:"Scene",paraId:113,tocIndex:50},{value:"Incoming configuration items.",paraId:113,tocIndex:50},{value:"type IBounds = [[number, number], [number, number]];\ninterface IOptions {\n  [key]: any;\n  animate: boolean;\n}\n\nscene.fitBounds([\n  [112, 32],\n  [114, 35],\n]);\n",paraId:114,tocIndex:50},{value:"Convert canvas coordinates to latitude and longitude coordinates",paraId:115,tocIndex:51},{value:"type IPoint = [number, number];\ninterface ILngLat {\n  lng: number;\n  lat: number;\n}\n\nscene.pixelToLngLat([10, 10]);\n",paraId:116,tocIndex:51},{value:"Convert latitude and longitude coordinates to canvas coordinates.",paraId:117,tocIndex:52},{value:"type ILngLat = [number, number];\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\nscene.lngLatToPixel([120, 10]);\n",paraId:118,tocIndex:52},{value:"The map pixel coordinates are converted into longitude and latitude coordinates, and the pixel coordinates are the distance between a point on the map and the upper left corner of the container.",paraId:119,tocIndex:53},{value:"type IPoint = [number, number];\ninterface ILngLat {\n  lng: number;\n  lat: number;\n}\nscene.pixelToLngLat([10, 10]);\n",paraId:120,tocIndex:53},{value:"Convert latitude and longitude coordinates to pixel coordinates.",paraId:121,tocIndex:54},{value:"type ILngLat = [number, number];\ninterface IPoint {\n  x: number;\n  y: number;\n}\nscene.lngLatToPixel([120, 10]);\n",paraId:122,tocIndex:54},{value:"Exporting a map currently only supports the export of visualization layers and does not support the export of basemaps.",paraId:123,tocIndex:55},{value:"type IImage = 'png' | 'jpg';\nscene.exportMap('png');\n",paraId:124,tocIndex:55},{value:"scene",paraId:125,tocIndex:56},{value:"Destroy method, leave the page, call when you don’t need to use the map, after calling",paraId:125,tocIndex:56},{value:"scene",paraId:125,tocIndex:56},{value:"The resources and resources in will be destroyed.",paraId:125,tocIndex:56},{value:"scene.destroy();\n",paraId:126,tocIndex:56},{value:"Supports processing of data passed in by users",paraId:127,tocIndex:58},{value:"unicode",paraId:127,tocIndex:58},{value:"mapping, which internally maintains a set of names and corresponding",paraId:127,tocIndex:58},{value:"key",paraId:127,tocIndex:58},{value:"key-value pairs.",paraId:127,tocIndex:58},{value:"scene.addIconFont('icon1', '');\nscene.addIconFont('icon2', '');\nscene.addFontFace(fontFamily, fontPath);\nconst pointIconFontLayer = new PointLayer({})\n  .source(\n    [\n      {\n        j: 140,\n        w: 34,\n        m: 'icon1',\n      },\n      {\n        j: 140,\n        w: 36,\n        m: 'icon2',\n      },\n    ],\n    {\n      parser: {\n        type: 'json',\n        x: 'j',\n        y: 'w',\n      },\n    },\n  )\n  .shape('m', 'text')\n  .size(12)\n  .color('w', ['#f00', '#f00', '#0f0'])\n  .style({\n    fontFamily,\n    iconfont: true,\n    textAllowOverlap: true,\n  });\n",paraId:128,tocIndex:58},{value:"Incoming multiple groups at the same time",paraId:129,tocIndex:59},{value:"name - unicode",paraId:129,tocIndex:59},{value:"key-value pairs.",paraId:129,tocIndex:59},{value:"type IKeyValue = [name: string, unicode: string];\ntype IOption = Array<IKeyValue>;\n\nscene.addIconFonts([\n  ['icon1', ''],\n  ['icon2', ''],\n]);\n",paraId:130,tocIndex:59},{value:"exist",paraId:131,tocIndex:61},{value:"scene",paraId:131,tocIndex:61},{value:"Add globally",paraId:131,tocIndex:61},{value:"L7",paraId:131,tocIndex:61},{value:"The layer object can use the image resources in .",paraId:131,tocIndex:61},{value:"type IImage = HTMLImageElement | string | File；\n\nscene.addImage( '02','https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg');\n",paraId:132,tocIndex:61},{value:"Example address",paraId:133},{value:"Determine whether the corresponding image resource has been added globally.",paraId:134,tocIndex:62},{value:"scene.hasImage('imageID');\n",paraId:135,tocIndex:62},{value:"Delete the corresponding image resource globally.",paraId:136,tocIndex:63},{value:"scene.removeImage('imageID');\n",paraId:137,tocIndex:63},{value:"Add to",paraId:138,tocIndex:64},{value:"iconfont",paraId:138,tocIndex:64},{value:"font file.",paraId:138,tocIndex:64},{value:"fontFamily",paraId:139,tocIndex:64},{value:"Font name defined by the user for himself",paraId:139,tocIndex:64},{value:"fontPath",paraId:139,tocIndex:64},{value:"Imported file address",paraId:139,tocIndex:64},{value:"let fontFamily = 'iconfont';\nlet fontPath = '//at.alicdn.com/t/font_2534097_iiet9d3nekn.woff2?t=1620444089776';\nscene.addFontFace(fontFamily, fontPath);\n",paraId:140,tocIndex:64},{value:"Get the drawing supported by the current device",paraId:141,tocIndex:66},{value:"WebGL",paraId:141,tocIndex:66},{value:"The size of the point sprite.",paraId:141,tocIndex:66},{value:"exist",paraId:142,tocIndex:68},{value:"scene",paraId:142,tocIndex:68},{value:"Bind event listener.",paraId:142,tocIndex:68},{value:"eventName",paraId:143,tocIndex:68},{value:"Event name.",paraId:143,tocIndex:68},{value:"handler",paraId:143,tocIndex:68},{value:"Event callback function.",paraId:143,tocIndex:68},{value:"remove in",paraId:144,tocIndex:69},{value:"scene",paraId:144,tocIndex:69},{value:"The event listener bound on.",paraId:144,tocIndex:69},{value:"eventName",paraId:145,tocIndex:69},{value:"Event name.",paraId:145,tocIndex:69},{value:"handler",paraId:145,tocIndex:69},{value:"Event callback function.",paraId:145,tocIndex:69},{value:"scene",paraId:146,tocIndex:70},{value:"Some common scene events will be triggered, and users can monitor them when needed.",paraId:146,tocIndex:70},{value:"scene",paraId:147,tocIndex:71},{value:"Initialization completion event, we often use",paraId:147,tocIndex:71},{value:"scene",paraId:147,tocIndex:71},{value:"Add after initialization is complete",paraId:147,tocIndex:71},{value:"Layer",paraId:147,tocIndex:71},{value:"。",paraId:147,tocIndex:71},{value:"scene.on('loaded', () => {\n  scene.addLayer(layer);\n});\n",paraId:148,tocIndex:71},{value:"Map container change event",paraId:149,tocIndex:72},{value:"scene.on('resize', () => {}); // Map container size change event\n",paraId:150,tocIndex:72},{value:"By default, L7 redraws on demand and enables real-time rendering by starting the animation, which facilitates the SpectorJS plug-in to capture frame rendering.",paraId:151,tocIndex:73},{value:"Used during debugging to stop real-time rendering",paraId:152,tocIndex:74},{value:"scene.on('loaded', () => {}); //Triggered after map loading is completed\nscene.on('mapmove', () => {}); // Event triggered when the map is moved\nscene.on('movestart', () => {}); // Triggered when the map pan starts\nscene.on('moveend', () => {}); // Triggered after the map movement ends, including translation and zooming when the center point changes. If the map has a dragging and easing effect, it will be triggered after the easing ends.\nscene.on('zoomchange', () => {}); // Triggered after the map zoom level changes\nscene.on('zoomstart', () => {}); // Triggered when zooming starts\nscene.on('zoomend', () => {}); // Triggered when zooming stops\n",paraId:153,tocIndex:75},{value:"For other map events, you can view the event document of the corresponding basemap. Map events can also be viewed through",paraId:154,tocIndex:75},{value:"Scene.map",paraId:154,tocIndex:75},{value:"Make settings.",paraId:154,tocIndex:75},{value:"Mapbox",paraId:155,tocIndex:75},{value:"Gaode",paraId:155,tocIndex:75},{value:"scene.on('click', (ev) => {}); // Left mouse button click event\nscene.on('dblclick', (ev) => {}); // Left mouse button double-click event\nscene.on('mousemove', (ev) => {}); // Triggered when the mouse moves on the map\nscene.on('mousewheel', (ev) => {}); // Triggered when the mouse wheel starts to zoom the map\nscene.on('mouseover', (ev) => {}); // Triggered when the mouse moves into the map container\nscene.on('mouseout', (ev) => {}); // Triggered when the mouse moves out of the map container\nscene.on('mouseup', (ev) => {}); // Triggered when the mouse is clicked and raised on the map\nscene.on('mousedown', (ev) => {}); // Triggered when the mouse is clicked on the map\nscene.on('contextmenu', (ev) => {}); // Right mouse click event\nscene.on('dragstart', (ev) => {}); //Triggered when you start dragging the map\nscene.on('dragging', (ev) => {}); // Triggered during dragging the map\nscene.on('dragend', (ev) => {}); //Triggered when stopping dragging the map. If the map has a dragging and easing effect, it will be triggered before dragging stops and easing starts.\n\nscene.on('webglcontextlost', () => {}); // webgl context lost\n",paraId:156,tocIndex:76},{value:"Experimental parameters may be discarded.",paraId:157,tocIndex:77},{value:"Applicable to Gaode map, whether to turn off the offset coordinate system, the default is",paraId:158,tocIndex:78},{value:"true",paraId:158,tocIndex:78},{value:"。",paraId:158,tocIndex:78},{value:"const scene = new Scene({\n  offsetCoordinate: true,\n});\n",paraId:159,tocIndex:78}]},24984:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(32344);const t=[{value:"L7 supports CSV comma delimited CSV data loading.",paraId:0},{value:"CSV is a text data structure and it is difficult to express complex geographic data structures, so CSV only supports two data structures.",paraId:1},{value:"Point data: longitude and latitude coordinates need to be specified",paraId:2},{value:"Line segment and arc data: need to be specified",paraId:2},{value:"Starting and ending points",paraId:2},{value:"longitude and latitude coordinates",paraId:2},{value:"type string required json",paraId:3,tocIndex:0},{value:"x string point data represents longitude",paraId:3,tocIndex:0},{value:"y string point data represents latitude",paraId:3,tocIndex:0},{value:"x1 string longitude",paraId:3,tocIndex:0},{value:"x2 string latitude",paraId:3,tocIndex:0},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n});\n",paraId:4,tocIndex:1},{value:"CSV data demo example",paraId:5},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng1',\n    y1: 'lat2',\n  },\n});\n",paraId:6,tocIndex:2},{value:"CSV line segment data demo example",paraId:7}]},94002:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(20497);const t=[{value:"GeoJSON is a format for encoding various geographic data structures. GeoJSON objects can represent geometries, features, or collections of features. GeoJSON supports the following geometry types: point, line, polygon, multipoint, multiline, polygon, and geometry collection. A feature in GeoJSON contains a geometric object and other attributes, and a feature collection represents a series of features.",paraId:0,tocIndex:0},{value:"The GeoJSON Format",paraId:0,tocIndex:0},{value:"L7 data source supports passing in the Geometry collection FeatureCollection",paraId:1,tocIndex:0},{value:"A feature Collection consists of pairs of features",paraId:2,tocIndex:1},{value:'{\n  "type": "FeatureCollection",\n  "features": [\n    {\n      "type": "Feature",\n      "properties": {\n        "name": "tom"\n      },\n      "geometry": {\n        "type": "Polygon",\n        "coordinates": [\n          [\n            [-2.8125, 34.59704151614417],\n            [65.390625, 34.59704151614417],\n            [65.390625, 61.10078883158897],\n            [-2.8125, 61.10078883158897],\n            [-2.8125, 34.59704151614417]\n          ]\n        ]\n      }\n    }\n  ]\n}\n',paraId:3,tocIndex:1},{value:"A feature has geometry spatial information and properties attribute information, where geometry is a required field.",paraId:4,tocIndex:2},{value:'{\n  "type": "Feature",\n  "properties": {},\n  "geometry": {}\n}\n',paraId:5,tocIndex:2},{value:"Supports Gemetry Object type",paraId:6,tocIndex:3},{value:'{\n  "type": "Point",\n  "coordinates": [100.0, 0.0]\n}\n',paraId:7,tocIndex:4},{value:'{\n  "type": "MultiPoint",\n  "coordinates": [\n    [100.0, 0.0],\n    [101.0, 1.0]\n  ]\n}\n',paraId:8,tocIndex:5},{value:"Line",paraId:9,tocIndex:5},{value:'{\n  "type": "LineString",\n  "coordinates": [\n    [100.0, 0.0],\n    [101.0, 1.0]\n  ]\n}\n',paraId:10,tocIndex:6},{value:'{\n  "type": "MultiLineString",\n  "coordinates": [\n    [\n      [100.0, 0.0],\n      [101.0, 1.0]\n    ],\n    [\n      [102.0, 2.0],\n      [103.0, 3.0]\n    ]\n  ]\n}\n',paraId:11,tocIndex:7},{value:"Polygon",paraId:12,tocIndex:7},{value:'{\n  "type": "Polygon",\n  "coordinates": [\n    [\n      [100.0, 0.0],\n      [101.0, 0.0],\n      [101.0, 1.0],\n      [100.0, 1.0],\n      [100.0, 0.0]\n    ]\n  ]\n}\n',paraId:13,tocIndex:8},{value:"With holes:",paraId:14,tocIndex:8},{value:'{\n  "type": "Polygon",\n  "coordinates": [\n    [\n      [-170.0, 10.0],\n      [170.0, 10.0],\n      [170.0, -10.0],\n      [-170.0, -10.0],\n      [-170.0, 10.0]\n    ],\n    [\n      [175.0, 5.0],\n      [-175.0, 5.0],\n      [-175.0, -5.0],\n      [175.0, -5.0],\n      [175.0, 5.0]\n    ]\n  ]\n}\n',paraId:15,tocIndex:8},{value:'{\n  "type": "MultiPolygon",\n  "coordinates": [\n    [\n      [\n        [102.0, 2.0],\n        [103.0, 2.0],\n        [103.0, 3.0],\n        [102.0, 3.0],\n        [102.0, 2.0]\n      ]\n    ],\n    [\n      [\n        [100.0, 0.0],\n        [101.0, 0.0],\n        [101.0, 1.0],\n        [100.0, 1.0],\n        [100.0, 0.0]\n      ],\n      [\n        [100.2, 0.2],\n        [100.8, 0.2],\n        [100.8, 0.8],\n        [100.2, 0.8],\n        [100.2, 0.2]\n      ]\n    ]\n  ]\n}\n',paraId:16,tocIndex:9},{value:"geojson detailed documentation",paraId:17},{value:"turfjs",paraId:18,tocIndex:11},{value:": JavaScript library for geographic data calculation, processing, statistics, and analysis",paraId:18,tocIndex:11},{value:"http://geojson.io/",paraId:19,tocIndex:12},{value:"You can view, draw and modify GeoJSON data online",paraId:19,tocIndex:12},{value:"https://mapshaper.org/",paraId:20,tocIndex:12},{value:"Ability to view larger geojson and also simplify GeoJSON data",paraId:20,tocIndex:12}]},89894:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(90509);const t=[{value:"Image data is mainly used to add images to the map based on longitude and latitude ranges. For example, a scanned version of a paper map needs to be displayed on the map.",paraId:0},{value:"type: image",paraId:1,tocIndex:0},{value:"extent: the latitude and longitude range of the image",paraId:2,tocIndex:0},{value:"[minlng, minlat,maxLng, maxLat]",paraId:2,tocIndex:0},{value:"Optional",paraId:2,tocIndex:0},{value:"coordinates:",paraId:3,tocIndex:0},{value:"[[number,number],[number,number],[number,number],[number,number]]",paraId:3,tocIndex:0},{value:"; Optional",paraId:3,tocIndex:0},{value:"Four geographic coordinates, expressed as arrays of longitude and latitude numbers, define the image's corner points. Coordinates start from the upper left corner of the image and proceed in clockwise order. They don't have to represent rectangles.",paraId:4,tocIndex:0},{value:"layer.source('https://gw.alipayobjects.com/zos/rmsportal/FnHFeFklTzKDdUESRNDv.jpg', {\n  parser: {\n    type: 'image',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:5,tocIndex:0},{value:"tilt picture",paraId:6,tocIndex:0},{value:"layer.source(\n  'https://mdn.alipayobjects.com/huamei_gjo0cl/afts/img/A*vm_9S64uA0UAAAAAAAAAAAAADjDHAQ/original',\n\n  {\n    parser: {\n      type: 'image',\n      coordinates: [\n        [100.959388, 41.619522],\n        [101.229887, 41.572654],\n        [101.16971, 41.377836],\n        [100.900015, 41.424628],\n      ],\n    },\n  },\n);\n",paraId:7,tocIndex:0}]},38863:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(46302);const t=[{value:"Although GeoJSON is a universal geographical data format, in specific usage scenarios, data service personnel may not be familiar with GeoJSON, or do not have the tools to generate GeoJSON. Therefore, L7 defines the concept of Parser for data, and your data can be in any format. , just use the geographic information field corresponding to the specified data.",paraId:0},{value:"⚠️ json is not a standard geographical data structure, so be sure to set Parser when using it",paraId:1,tocIndex:0},{value:"json data parsing uses the corresponding JSON parser",paraId:2,tocIndex:0},{value:"Supports two parsing methods",paraId:3,tocIndex:1},{value:"This method only supports analytical point data, or line segments with only two points, or arc data.",paraId:4,tocIndex:2},{value:"type ",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"required",paraId:5,tocIndex:2},{value:"json",paraId:5,tocIndex:2},{value:"x ",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"Point data represents longitude",paraId:5,tocIndex:2},{value:"y ",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"Point data represents latitude",paraId:5,tocIndex:2},{value:"x1 ",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"longitude",paraId:5,tocIndex:2},{value:"x2 ",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"latitude",paraId:5,tocIndex:2},{value:"If the data is point data, you only need to set the x,y fields.",paraId:6,tocIndex:2},{value:"If it is line segment or arc data, you need to know the coordinates of the starting and ending points, x, y, x1, y1",paraId:7,tocIndex:2},{value:"layer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat',\n  },\n});\n",paraId:8,tocIndex:2},{value:"JSON data demo example",paraId:9},{value:"It can also analyze arbitrarily complex points, lines and surfaces.",paraId:10,tocIndex:3},{value:"type ",paraId:11,tocIndex:3},{value:"string",paraId:11,tocIndex:3},{value:"required",paraId:11,tocIndex:3},{value:"json",paraId:11,tocIndex:3},{value:"coordinates ",paraId:11,tocIndex:3},{value:"array",paraId:11,tocIndex:3},{value:"Required, mainly used to express more complex formats, equivalent to the geojson coordinates attribute",paraId:11,tocIndex:3},{value:"layer.source(data, {\n  parser: {\n    type: 'json',\n    coordinates: 'coord',\n  },\n});\n",paraId:12,tocIndex:3},{value:"type json",paraId:13,tocIndex:6},{value:"x: longitude field",paraId:13,tocIndex:6},{value:"y: latitude field",paraId:13,tocIndex:6},{value:"const data = [\n  {\n    lng: 112.345,\n    lat: 30.455,\n    value: 10,\n  },\n  {\n    lng: 114.345,\n    lat: 31.455,\n    value: 10,\n  },\n];\n\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat',\n  },\n});\n",paraId:14,tocIndex:6},{value:"Point coodinates data format",paraId:15},{value:"const data = [\n  {\n    coord: [112.345, 30.455],\n    value: 10,\n  },\n  {\n    coord: [114.345, 32.455],\n    value: 10,\n  },\n];\n\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    coordinates: 'coord',\n  },\n});\n",paraId:16},{value:"type: json",paraId:17,tocIndex:9},{value:"x ",paraId:17,tocIndex:9},{value:"string",paraId:17,tocIndex:9},{value:"longitude",paraId:17,tocIndex:9},{value:"y ",paraId:17,tocIndex:9},{value:"string",paraId:17,tocIndex:9},{value:"latitude",paraId:17,tocIndex:9},{value:"x1 ",paraId:17,tocIndex:9},{value:"string",paraId:17,tocIndex:9},{value:"longitude",paraId:17,tocIndex:9},{value:"x2 ",paraId:17,tocIndex:9},{value:"string",paraId:17,tocIndex:9},{value:"latitude",paraId:17,tocIndex:9},{value:"Simple analysis only supports line segments composed of two points. It is mainly used when drawing arcs. You only need to specify the starting and ending point coordinates of the line segment.",paraId:18,tocIndex:9},{value:"const data = [\n  {\n    lng1: 112.345,\n    lat1: 30.455,\n    lng2: 112.345,\n    lat2: 30.455,\n    value: 10,\n  },\n  {\n    lng1: 114.345,\n    lat1: 31.455,\n    lng2: 112.345,\n    lat2: 30.455,\n    value: 10,\n  },\n];\n\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng1',\n    y1: 'lat2',\n  },\n});\n",paraId:19,tocIndex:9},{value:"Drawing line segments and arcs also supports using coordinates to organize data.",paraId:20,tocIndex:10},{value:"coordinates contains two coordinates,\nThe first coordinate corresponds to x, y\nThe second coordinate corresponds to x1, y1",paraId:21,tocIndex:10},{value:"const data = [\n  {\n    id: '1',\n    coord: [\n      [101.953125, 50.51342652633956],\n      [119.17968749999999, 33.137551192346145],\n    ],\n  },\n];\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    coordinates: 'coord',\n  },\n});\n",paraId:22,tocIndex:10},{value:"If you need to use drawing trajectory data, you need to specify the point sequence of the line through codinates.",paraId:23,tocIndex:10},{value:"coordinate format The coordinate field of geojson supports LineString, MultiLineString",paraId:24,tocIndex:10},{value:"Line coodinates data format",paraId:25},{value:"const data = [\n  {\n    name: 'path1',\n    path: [\n      [58.00781249999999, 32.84267363195431],\n      [85.78125, 25.16517336866393],\n      [101.953125, 41.77131167976407],\n      [114.9609375, 39.639537564366684],\n      [117.42187500000001, 28.613459424004414],\n    ],\n  },\n];\n",paraId:26},{value:"Specify by coordinates when using",paraId:27},{value:"layer.source(data, {\n  parser: {\n    type: 'json',\n    coordinates: 'path',\n  },\n});\n",paraId:28},{value:"The coordinates field of surface data is relatively complex and does not support simple parsing methods.",paraId:29,tocIndex:11},{value:"The coordinates field needs to be specified. The format is the same as the coordinates field of GeoJSON.",paraId:30,tocIndex:12},{value:"Face codinates data format",paraId:31},{value:"Note that surface data coord is a three-layer data structure",paraId:32},{value:"[\n  {\n    type: 'Polygon',\n    geometryCoord: [\n      [\n        [115.1806640625, 30.637912028341123],\n        [114.9609375, 29.152161283318915],\n        [117.79541015625001, 27.430289738862594],\n        [118.740234375, 29.420460341013133],\n        [117.46582031249999, 31.50362930577303],\n        [115.1806640625, 30.637912028341123],\n      ],\n    ],\n  },\n];\n\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    coordinates: 'geometryCoord',\n  },\n});\n",paraId:33}]},68777:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(90474);const t=[{value:"When L7 loads the vector tile map, it needs to be",paraId:0},{value:"source",paraId:0},{value:"Parse the tile service and configure the request parameters of the tile service.",paraId:0},{value:" ",paraId:1,tocIndex:1},{value:"string",paraId:1,tocIndex:1},{value:" ",paraId:1,tocIndex:1},{value:"required",paraId:1,tocIndex:1},{value:" ",paraId:1,tocIndex:1},{value:"default:",paraId:1,tocIndex:1},{value:" mvt",paraId:1,tocIndex:1},{value:"number",paraId:2},{value:" ",paraId:3,tocIndex:2},{value:"number",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"Optional",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"default:",paraId:3,tocIndex:2},{value:" 256",paraId:3,tocIndex:2},{value:"Request tile size",paraId:3,tocIndex:2},{value:" number ",paraId:4,tocIndex:3},{value:"Optional",paraId:4,tocIndex:3},{value:" *default:*0",paraId:4,tocIndex:3},{value:"Tile request tile level offset",paraId:4,tocIndex:3},{value:" ",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" ",paraId:5,tocIndex:4},{value:"Optional",paraId:5,tocIndex:4},{value:" *default:*0",paraId:5,tocIndex:4},{value:"Maximum tile zoom level",paraId:5,tocIndex:4},{value:"20",paraId:5,tocIndex:4},{value:" ",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"Optional",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"default:",paraId:6,tocIndex:5},{value:" 2-",paraId:6,tocIndex:5},{value:"Tile minimum scaling, etc.",paraId:6,tocIndex:5},{value:"[number, number, number, number]",paraId:2},{value:" ",paraId:7,tocIndex:6},{value:"number[]",paraId:7,tocIndex:6},{value:" ",paraId:7,tocIndex:6},{value:"Optional",paraId:7,tocIndex:6},{value:"not limited:_",paraId:7,tocIndex:6},{value:"Map display range",paraId:7,tocIndex:6},{value:"(tile: { x: number, y: number, z: number }, callback: (err: any, data: any) => void) => void,",paraId:2},{value:"__",paraId:8,tocIndex:7},{value:"Optional",paraId:8,tocIndex:7},{value:"callback parameters",paraId:9,tocIndex:7},{value:"err when data is returned",paraId:10,tocIndex:7},{value:"data arraybuffer type, pbf",paraId:10,tocIndex:7},{value:"Customize the tile data acquisition method, trial business scenarios require data authentication, or special processing scenarios",paraId:11,tocIndex:7},{value:"瓦片数据集，可以获取当前视野内的瓦片信息, 瓦片状态",paraId:12,tocIndex:9},{value:"const source = layer1.getSource();\nconst tileSet = source.tileset;\n",paraId:13,tocIndex:9},{value:"瓦片是否加载完成",paraId:14,tocIndex:11},{value:"当前瓦片对象",paraId:15,tocIndex:12},{value:"当前瓦片层级；这里的曾经和map 的缩放层级不相等",paraId:16,tocIndex:13},{value:"地图拖动，需要加载新的瓦片时触发",paraId:17,tocIndex:15},{value:"tileSet.on('tiles-load-start', () => {\n  console.log('tile start');\n});\n",paraId:18,tocIndex:15},{value:"所有需要加载的瓦片资源加载完成后触发",paraId:19,tocIndex:16},{value:"tileSet.on('tiles-load-finished', () => {\n  console.log('tile finished');\n});\n",paraId:20,tocIndex:16},{value:"重新加载瓦片，会重新请求数据，适用与动态瓦片场景，如瓦片数据发生了更新，或者瓦片Join 的数据发生了更新",paraId:21,tocIndex:18},{value:"source.reloadAllTile();\n",paraId:22,tocIndex:18},{value:"重新加载特定瓦片的",paraId:23,tocIndex:19},{value:"参数",paraId:24,tocIndex:19},{value:"z 缩放等级",paraId:25,tocIndex:19},{value:"x 瓦片 x 坐标",paraId:25,tocIndex:19},{value:"y 瓦片 y 坐标",paraId:25,tocIndex:19},{value:"source.reloadTileById(z, x, y);\n",paraId:26,tocIndex:19},{value:"根据经纬度范围更新瓦片",paraId:27,tocIndex:20},{value:"参数",paraId:28,tocIndex:20},{value:"extent: 经纬范围 [minLng, minLat, maxLng, maxLat]",paraId:29,tocIndex:20},{value:"zoom: 缩放等级",paraId:29,tocIndex:20},{value:"根据经纬度更新瓦片，经纬度坐标转换成瓦片坐标更新",paraId:30,tocIndex:21},{value:"lng 经度",paraId:31,tocIndex:21},{value:"lat 纬度",paraId:31,tocIndex:21},{value:"zoom 缩放等级",paraId:31,tocIndex:21},{value:"source.reloadTileByLnglat(112, 30, 10);\n",paraId:32,tocIndex:21},{value:"const tileSource = new Source('http://localhost:3000/zhejiang.mbtiles/{z}/{x}/{y}.pbf', {\n  parser: {\n    type: 'mvt',\n    tileSize: 256,\n    zoomOffset: 0,\n    maxZoom: 9,\n    extent: [-180, -85.051129, 179, 85.051129],\n  },\n});\n",paraId:33,tocIndex:23},{value:"const source = new Source('https://gridwise.alibaba-inc.com/tile/test?z={z}&x={x}&y={y}', {\n  parser: {\n    type: 'mvt',\n    tileSize: 256,\n    getCustomData: (tile, cb) => {\n      const url = `https://gridwise.alibaba-inc.com/tile/test?z=${tile.z}&x=${tile.x}&y=${tile.y}`;\n      fetch(url)\n        .then((res) => res.arrayBuffer())\n        .then((data) => {\n          cb(null, data);\n        });\n    },\n  },\n});\n",paraId:34,tocIndex:24}]},26674:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92391);const t=[{value:"Raster data 数据栅格的可视化，栅格数据主要来源是卫星遥感数据，如数字高程图、植被分布图和夜光图。",paraId:0},{value:"data 数据",paraId:1},{value:"option 配置项\n",paraId:1},{value:"parser 数据解析参数",paraId:2},{value:"data 解析后的数据，为数组",paraId:3,tocIndex:0},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:4,tocIndex:0},{value:"以 geotiff 为例需要先将数据解析出来，作为 data 输入给 source",paraId:5,tocIndex:0},{value:"import * as GeoTIFF from 'geotiff';\n\nasync function getTiffData() {\n  async function getTiffData() {\n    const response = await fetch(\n      'https://gw.alipayobjects.com/zos/antvdemo/assets/light_clip/lightF182013.tiff',\n    );\n    const arrayBuffer = await response.arrayBuffer();\n    const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n    const image = await tiff.getImage();\n    const width = image.getWidth();\n    const height = image.getHeight();\n    const values = await image.readRasters();\n    return {\n      data: values[0],\n      width,\n      height,\n    };\n  }\n}\nconst tiffdata = await getTiffData();\nlayer.source(tiffdata.data, {\n  parser: {\n    type: 'raster',\n    width: tiffdata.width,\n    height: tiffdata.height,\n    extent: [73.4821902409999979, 3.8150178409999995, 135.1066187319999869, 57.6300459959999998],\n  },\n});\n",paraId:6,tocIndex:0},{value:"type: raster",paraId:7,tocIndex:1},{value:"extent: 栅格的经纬度范围 [minlng, minlat,maxLng, maxLat]",paraId:7,tocIndex:1},{value:"width 数据宽度",paraId:7,tocIndex:1},{value:"height 数据高度",paraId:7,tocIndex:1},{value:"根据栅格数据的经纬度范围，将其添加到地图上。",paraId:8,tocIndex:1},{value:"layer.source(rasterData, {\n  parser: {\n    type: 'raster',\n    extent: [121.168, 30.2828, 121.384, 30.4219],\n  },\n});\n",paraId:9,tocIndex:1},{value:"Raster ndi",paraId:10}]},69664:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(24745);const t=[{value:"raster-ndi(Normalized Difference Indices) source 是将多波段数据进行归一化指数计算，比如计算NDVI/NDWI 等指数，",paraId:0},{value:"data 数据",paraId:1},{value:"option 配置项\n",paraId:1},{value:"parser 数据解析参数\n",paraId:2},{value:"type 解析类型 ",paraId:3},{value:"ndi",paraId:3},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'ndi',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3], // 从零开始\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:4},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:5,tocIndex:0},{value:"data 为数组类型 ",paraId:6,tocIndex:0},{value:"RasterDataType[]",paraId:6,tocIndex:0},{value:"如果是多波段 Tiff 可以直接使用geotiff,js 读取所有波段，",paraId:7,tocIndex:0},{value:"如果是单文件单波段数据，需要单独读取并合并成一个数据。",paraId:7,tocIndex:0},{value:"单文件多波段读取示例",paraId:8,tocIndex:0},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:9,tocIndex:0},{value:"type 解析类型 'rgb' ",paraId:10,tocIndex:1},{value:"必选",paraId:10,tocIndex:1},{value:"bands ",paraId:11,tocIndex:1},{value:"[number,number] 指定需要归一化的波段,data 数组长度需要大于等于 2  ",paraId:11,tocIndex:1},{value:"必选`",paraId:11,tocIndex:1},{value:"注：bands 序号从零开始（landsat 8 里的 5，4, 波段这样要设置为 4,3）",paraId:12,tocIndex:1},{value:"width 长度 ",paraId:13,tocIndex:1},{value:"必选",paraId:13,tocIndex:1},{value:"height 宽度 ",paraId:14,tocIndex:1},{value:"必选",paraId:14,tocIndex:1},{value:"Raster ndi",paraId:15}]},45384:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(84682);const t=[{value:"raster-rgb source synthesizes multi-band data into RGB data for display. For example, for LandSat8 data, we can perform RGB combination display according to the 5,4,3 or 4,3,2 bands.",paraId:0},{value:"data data",paraId:1},{value:"option configuration item\n",paraId:1},{value:"parser data parsing parameters\n",paraId:2},{value:"type parsing type",paraId:3},{value:"rgb",paraId:3},{value:"layer.source(bandsValues, {\n  parser: {\n    type: 'rgb',\n    width: bandsValues.width,\n    height: bandsValues.height,\n    bands: [4, 3, 2], // 从零开始\n    extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n  },\n});\n",paraId:4},{value:"type RasterDataType =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n",paraId:5,tocIndex:0},{value:"data is an array type",paraId:6,tocIndex:0},{value:"RasterDataType[]",paraId:6,tocIndex:0},{value:"If it is a multi-band Tiff, you can directly use geotiff,js to read all bands.",paraId:7,tocIndex:0},{value:"If it is a single file and single band data, it needs to be read separately and merged into one data.",paraId:7,tocIndex:0},{value:"Single file multi-band reading example",paraId:8,tocIndex:0},{value:"async function getTiffData(url: string) {\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  const tiff = await GeoTIFF.fromArrayBuffer(arrayBuffer);\n  const image1 = await tiff.getImage();\n  const bandsValues = await image1.readRasters();\n  return bandsValues;\n}\n",paraId:9,tocIndex:0},{value:"type parsing type 'rgb'",paraId:10,tocIndex:1},{value:"必选",paraId:10,tocIndex:1},{value:"bands ",paraId:11,tocIndex:1},{value:"[number,number,number] 指定 R/G/B 通道对应的数据索引,data 数组长度需要大于等于 3  ",paraId:11,tocIndex:1},{value:"Required`",paraId:11,tocIndex:1},{value:"Note: The bands serial number starts from zero (bands 5, 4, and 3 in landsat 8 should be set to 4, 3, 2)",paraId:12,tocIndex:1},{value:"width length",paraId:13,tocIndex:1},{value:"必选",paraId:13,tocIndex:1},{value:"height width",paraId:14,tocIndex:1},{value:"必选",paraId:14,tocIndex:1},{value:"countCut color stretching parameter",paraId:15,tocIndex:1},{value:"[number,number]",paraId:15,tocIndex:1},{value:"Value is percentage, default value",paraId:15,tocIndex:1},{value:"[2,98]",paraId:15,tocIndex:1},{value:" ",paraId:15,tocIndex:1},{value:"可选",paraId:15,tocIndex:1},{value:"Raster RGB",paraId:16}]},93500:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(31254);const t=[{value:"When L7 loads the raster tile map, it needs to be",paraId:0},{value:"source",paraId:0},{value:"Parse the tile service and configure the request parameters of the tile service.",paraId:0},{value:"Tile URL, only supports EPSG 3857 coordinate system, supports TMS, WMS, WMTS protocols",paraId:1,tocIndex:0},{value:"Pass parameters through url template, required to participate",paraId:2,tocIndex:1},{value:"{}",paraId:2,tocIndex:1},{value:"1-4 server encoding {1-4}",paraId:3,tocIndex:1},{value:"z zoom level",paraId:3,tocIndex:1},{value:"x tile x coordinate",paraId:3,tocIndex:1},{value:"y tile y coordinate",paraId:3,tocIndex:1},{value:"const url = 'http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}';\n",paraId:4,tocIndex:1},{value:"url template parameters",paraId:5,tocIndex:2},{value:"1-x server encoding {1-4}",paraId:6,tocIndex:2},{value:"bbox tile range template BBOXSR only supports 4326, IMAGESR only supports 3857",paraId:6,tocIndex:2},{value:"Example",paraId:7,tocIndex:2},{value:"const url =\n  'https://pnr.sz.gov.cn/d-suplicmap/dynamap_1/rest/services/LAND_CERTAIN/MapServer/export?F=image&FORMAT=PNG32&TRANSPARENT=true&layers=show:1&SIZE=256,256&BBOX={bbox}&BBOXSR=4326&IMAGESR=3857&DPI=90';\n",paraId:8,tocIndex:2},{value:"url template parameters",paraId:9,tocIndex:3},{value:"1-4 server encoding {1-4}",paraId:10,tocIndex:3},{value:"WMTS two ways",paraId:11,tocIndex:3},{value:"The usage is similar to TMS, you can splice url strings",paraId:12,tocIndex:3},{value:"Set service parameters through parser parameter wmtsOptions",paraId:12,tocIndex:3},{value:"const url1 = 'https://t0.tianditu.gov.cn/img_w/wmts?tk=b72aa81ac2b3cae941d1eb213499e15e&';\nconst layer1 = new RasterLayer({\n  zIndex: 1,\n}).source(url1, {\n  parser: {\n    type: 'rasterTile',\n    tileSize: 256,\n    wmtsOptions: {\n      layer: 'img',\n      tileMatrixset: 'w',\n      format: 'tiles',\n    },\n  },\n});\n",paraId:13,tocIndex:3},{value:" ",paraId:14,tocIndex:5},{value:"string",paraId:14,tocIndex:5},{value:" ",paraId:14,tocIndex:5},{value:"required",paraId:14,tocIndex:5},{value:" ",paraId:14,tocIndex:5},{value:"default:",paraId:14,tocIndex:5},{value:" rasterTile",paraId:14,tocIndex:5},{value:"The fixed value is",paraId:14,tocIndex:5},{value:"rasterTile",paraId:14,tocIndex:5},{value:"number",paraId:15},{value:" ",paraId:16,tocIndex:6},{value:"number",paraId:16,tocIndex:6},{value:" ",paraId:16,tocIndex:6},{value:"Optional",paraId:16,tocIndex:6},{value:" ",paraId:16,tocIndex:6},{value:"default:",paraId:16,tocIndex:6},{value:" 256",paraId:16,tocIndex:6},{value:"Request tile size optional",paraId:16,tocIndex:6},{value:" number ",paraId:17,tocIndex:7},{value:"Optional",paraId:17,tocIndex:7},{value:" *default:*0",paraId:17,tocIndex:7},{value:"Tile request tile level offset",paraId:17,tocIndex:7},{value:" ",paraId:18,tocIndex:8},{value:"number",paraId:18,tocIndex:8},{value:" ",paraId:18,tocIndex:8},{value:"Optional",paraId:18,tocIndex:8},{value:" *default:*0",paraId:18,tocIndex:8},{value:"Maximum tile zoom level",paraId:19,tocIndex:8},{value:"20",paraId:19,tocIndex:8},{value:" ",paraId:20,tocIndex:9},{value:"number",paraId:20,tocIndex:9},{value:" ",paraId:20,tocIndex:9},{value:"Optional",paraId:20,tocIndex:9},{value:" ",paraId:20,tocIndex:9},{value:"default:",paraId:20,tocIndex:9},{value:" 2-",paraId:20,tocIndex:9},{value:"[number, number, number, number]",paraId:15},{value:" ",paraId:21,tocIndex:10},{value:"number[]",paraId:21,tocIndex:10},{value:" ",paraId:21,tocIndex:10},{value:"Optional",paraId:21,tocIndex:10},{value:"not limited:_",paraId:21,tocIndex:10},{value:" ",paraId:22,tocIndex:11},{value:"string",paraId:22,tocIndex:11},{value:" ",paraId:22,tocIndex:11},{value:"Optional",paraId:22,tocIndex:11},{value:" ",paraId:22,tocIndex:11},{value:"default:",paraId:22,tocIndex:11},{value:" image",paraId:22,tocIndex:11},{value:"Tile data type",paraId:23,tocIndex:11},{value:"image image type",paraId:24,tocIndex:11},{value:"arraybuffer data type such as geotiff",paraId:24,tocIndex:11},{value:" ",paraId:25,tocIndex:12},{value:"func",paraId:25,tocIndex:12},{value:" ",paraId:25,tocIndex:12},{value:"Optional",paraId:25,tocIndex:12},{value:"_default:",paraId:25,tocIndex:12},{value:"Used when data raster is used to format raster data into standard data and customize data processing functions",paraId:26,tocIndex:12},{value:" ",paraId:27,tocIndex:13},{value:"Object",paraId:27,tocIndex:13},{value:" ",paraId:27,tocIndex:13},{value:"Optional",paraId:27,tocIndex:13},{value:" ",paraId:27,tocIndex:13},{value:"default:",paraId:27,tocIndex:13},{value:" null",paraId:27,tocIndex:13},{value:" ",paraId:28,tocIndex:14},{value:"string",paraId:28,tocIndex:14},{value:" ",paraId:28,tocIndex:14},{value:"required",paraId:28,tocIndex:14},{value:" ",paraId:28,tocIndex:14},{value:"default:",paraId:28,tocIndex:14},{value:" img",paraId:28,tocIndex:14},{value:"Layers",paraId:28,tocIndex:14},{value:" ",paraId:29,tocIndex:15},{value:"string",paraId:29,tocIndex:15},{value:" ",paraId:29,tocIndex:15},{value:"required",paraId:29,tocIndex:15},{value:" ",paraId:29,tocIndex:15},{value:"default:",paraId:29,tocIndex:15},{value:" w",paraId:29,tocIndex:15},{value:" ",paraId:30,tocIndex:16},{value:"string",paraId:30,tocIndex:16},{value:" ",paraId:30,tocIndex:16},{value:"required",paraId:30,tocIndex:16},{value:" ",paraId:30,tocIndex:16},{value:"default:",paraId:30,tocIndex:16},{value:" tiles",paraId:30,tocIndex:16},{value:"Service type",paraId:30,tocIndex:16},{value:"const rasterSource = new Source(\n  'http://webst01.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n  {\n    parser: {\n      type: 'rasterTile',\n      tileSize: 256,\n      zoomOffset: 0,\n      extent: [-180, -85.051129, 179, 85.051129],\n    },\n  },\n);\n",paraId:31,tocIndex:16},{value:"瓦片数据集，可以获取当前视野内的瓦片信息, 瓦片状态",paraId:32,tocIndex:18},{value:"const source = layer1.getSource();\nconst tileSet = source.tileset;\n",paraId:33,tocIndex:18},{value:"瓦片是否加载完成",paraId:34,tocIndex:20},{value:"当前瓦片对象",paraId:35,tocIndex:21},{value:"当前瓦片层级；这里的曾经和map 的缩放层级不相等",paraId:36,tocIndex:22},{value:"地图拖动，需要加载新的瓦片时触发",paraId:37,tocIndex:24},{value:"tileSet.on('tiles-load-start', () => {\n  console.log('tile start');\n});\n",paraId:38,tocIndex:24},{value:"所有需要加载的瓦片资源加载完成后触发",paraId:39,tocIndex:25},{value:"tileSet.on('tiles-load-finished', () => {\n  console.log('tile finished');\n});\n",paraId:40,tocIndex:25},{value:"重新加载瓦片，会重新请求数据，适用与动态瓦片场景，如瓦片数据发生了更新，或者瓦片Join 的数据发生了更新",paraId:41,tocIndex:27},{value:"source.reloadAllTile();\n",paraId:42,tocIndex:27},{value:"重新加载特定瓦片的",paraId:43,tocIndex:28},{value:"参数",paraId:44,tocIndex:28},{value:"z 缩放等级",paraId:45,tocIndex:28},{value:"x 瓦片 x 坐标",paraId:45,tocIndex:28},{value:"y 瓦片 y 坐标",paraId:45,tocIndex:28},{value:"source.reloadTileById(z, x, y);\n",paraId:46,tocIndex:28},{value:"根据经纬度范围更新瓦片",paraId:47,tocIndex:29},{value:"参数",paraId:48,tocIndex:29},{value:"extent: 经纬范围 [minLng, minLat, maxLng, maxLat]",paraId:49,tocIndex:29},{value:"zoom: 缩放等级",paraId:49,tocIndex:29},{value:"根据经纬度更新瓦片，经纬度坐标转换成瓦片坐标更新",paraId:50,tocIndex:30},{value:"lng 经度",paraId:51,tocIndex:30},{value:"lat 纬度",paraId:51,tocIndex:30},{value:"zoom 缩放等级",paraId:51,tocIndex:30},{value:"source.reloadTileByLnglat(112, 30, 10);\n",paraId:52,tocIndex:30}]},14575:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(779);const t=[{value:"source geographical data processing module, mainly includes data analysis (parser) and data processing (transforms).",paraId:0,tocIndex:0},{value:"const source = new Source(data, option);\n",paraId:1,tocIndex:0},{value:"data",paraId:2,tocIndex:0},{value:"option\n",paraId:2,tocIndex:0},{value:"cluster ",paraId:3,tocIndex:0},{value:"boolean",paraId:3,tocIndex:0},{value:"Whether to aggregate",paraId:3,tocIndex:0},{value:"clusterOptions aggregation configuration items",paraId:3,tocIndex:0},{value:"parser data parsing configuration",paraId:3,tocIndex:0},{value:"transforms data processing configuration",paraId:3,tocIndex:0},{value:"Different parser types correspond to different data types",paraId:4,tocIndex:1},{value:"The tile layer data is a url template and supports TMS, WMS, and WMTS data services.",paraId:5,tocIndex:1},{value:"Non-tile layer data is a data object",paraId:5,tocIndex:1},{value:"source",paraId:6,tocIndex:2},{value:"pass",paraId:6,tocIndex:2},{value:"option",paraId:6,tocIndex:2},{value:"to describe or process data, which mainly include",paraId:6,tocIndex:2},{value:"parser",paraId:6,tocIndex:2},{value:"and",paraId:6,tocIndex:2},{value:"transforms",paraId:6,tocIndex:2},{value:"。",paraId:6,tocIndex:2},{value:"parser can process different types of spatial data into a unified data format. Spatial data is divided into three categories: vector data, raster data and tile services:",paraId:7,tocIndex:3},{value:"Vector data support",paraId:8,tocIndex:3},{value:"GeoJSON",paraId:9,tocIndex:3},{value:"、",paraId:8,tocIndex:3},{value:"CSV",paraId:10,tocIndex:3},{value:"、",paraId:8,tocIndex:3},{value:"JSON",paraId:11,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"Raster data support",paraId:8,tocIndex:3},{value:"Raster",paraId:12,tocIndex:3},{value:"、",paraId:8,tocIndex:3},{value:"Image",paraId:13,tocIndex:3},{value:"type",paraId:8,tocIndex:3},{value:"Tile service support",paraId:8,tocIndex:3},{value:"MVT",paraId:14,tocIndex:3},{value:"、",paraId:8,tocIndex:3},{value:"RasterTile",paraId:15,tocIndex:3},{value:", GeoJSON VT type",paraId:8,tocIndex:3},{value:"type IParserType =\n  | 'csv'\n  | 'json'\n  | 'geojson'\n  | 'image'\n  | 'raster'\n  | 'rasterTile'\n  | 'mvt'\n  | 'geojsonvt';\n\ninterface IParser {\n  type: IParserType;\n  x?: string;\n  y?: string;\n  x1?: string;\n  y1?: string;\n  coordinates?: string;\n  geometry?: string;\n  [key: string]: any;\n}\n",paraId:16,tocIndex:3},{value:"geojson",paraId:17,tocIndex:4},{value:"It is the default data format and you do not need to set the parser parameter.",paraId:17,tocIndex:4},{value:"layer.source(data);\n",paraId:18,tocIndex:4},{value:"Transforms processes standardized data and can perform data operations such as data conversion, data statistics, grid layout, and data aggregation. After processing, standard data is returned. The standardized data structure includes coordinates geographical coordinate fields, and other attribute fields.",paraId:19,tocIndex:5},{value:'[\n  {\n    "coordinates": [[]], // Geographical coordinates field\n    "_id": "122", // New fields after standardization\n    "name": "test",\n    "value": 1\n    // ....\n  }\n]\n',paraId:20,tocIndex:5},{value:"Currently, grid and hexagon heat maps support the data processing method transforms configuration item.",paraId:21,tocIndex:5},{value:"type data processing type",paraId:22,tocIndex:5},{value:"transforms cfg data processing configuration items",paraId:22,tocIndex:5},{value:"Generate a square grid layout, based on data field statistics, mainly used in grid heat maps",paraId:23,tocIndex:6},{value:"type: 'grid'",paraId:24,tocIndex:6},{value:"size: grid radius",paraId:24,tocIndex:6},{value:"field: data statistics field",paraId:24,tocIndex:6},{value:"method: aggregation method, with 5 statistical dimensions: count, max, min, sum, mean",paraId:24,tocIndex:6},{value:"layer.source(data, {\n  transforms: [\n    {\n      type: 'grid',\n      size: 15000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:25,tocIndex:6},{value:"Generate hexagonal grid layout, statistics based on data fields",paraId:26,tocIndex:7},{value:"type: 'hexagon'",paraId:27,tocIndex:7},{value:"size: grid radius",paraId:27,tocIndex:7},{value:"field: data statistics field",paraId:27,tocIndex:7},{value:"method: aggregation method, with 5 statistical dimensions: count, max, min, sum, mean",paraId:27,tocIndex:7},{value:"Data connection, in many cases in business, geographical data and business data are two separate sets of data. We can associate geographical data and business data through the join method.",paraId:28,tocIndex:8},{value:"Configuration items",paraId:29,tocIndex:8},{value:"type: join",paraId:30,tocIndex:8},{value:"sourceField: the name of the business data field that needs to be connected",paraId:30,tocIndex:8},{value:"data: the data source to be connected, only supports json format",paraId:30,tocIndex:8},{value:"targetField: associated geographic data field name",paraId:30,tocIndex:8},{value:"// geoData is geographical data\nconst geoData = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {\n        city: 'Beijing',\n      },\n      geometry: {},\n    },\n  ],\n};\n\n// customData attribute data or business data\nconst customData = [\n  {\n    name: 'Beijing',\n    value: 13,\n  },\n  {\n    name: 'Tianjin',\n    value: 20,\n  },\n];\n\n// Through the join method, we can join the two data together\n\nlayer\n  .source(geoData, {\n    transforms: [\n      {\n        type: 'join',\n        sourceField: 'name', //customData corresponding field name\n        targetField: 'city', // geoData corresponding field name, the geographical data bound to\n        data: customData,\n      },\n    ],\n  })\n  .color('value'); // You can use the value field of customData to map data to color.\n",paraId:31,tocIndex:8},{value:"cluster:",paraId:32,tocIndex:9},{value:"boolean",paraId:32,tocIndex:9},{value:"cluster",paraId:33,tocIndex:9},{value:"Indicates whether to aggregate data. Currently, only point layers support it.",paraId:33,tocIndex:9},{value:"radius: aggregate radius",paraId:34,tocIndex:10},{value:"number",paraId:34,tocIndex:10},{value:"default 40",paraId:34,tocIndex:10},{value:"minZoom: Minimum aggregate zoom level",paraId:34,tocIndex:10},{value:"number",paraId:34,tocIndex:10},{value:"default 0",paraId:34,tocIndex:10},{value:"maxZoom: Maximum aggregate zoom level",paraId:34,tocIndex:10},{value:"number",paraId:34,tocIndex:10},{value:" default 16",paraId:34,tocIndex:10},{value:"Aggregation graph use cases",paraId:35},{value:"Use the aggregation graph to obtain the original data of the aggregation node",paraId:36,tocIndex:12},{value:"parameter:\nid cluster_id of the aggregation node",paraId:37,tocIndex:12},{value:"layer.on('click', (e) => {\n  console.log(source.getClustersLeaves(e.feature.cluster_id));\n});\n",paraId:38,tocIndex:12},{value:"Update source data",paraId:39,tocIndex:13},{value:"data: data is the same as source initialization parameter",paraId:40,tocIndex:14},{value:"option: configuration item is the same as source initialization parameter",paraId:40,tocIndex:14},{value:"Get feature elements based on featureID",paraId:41,tocIndex:15},{value:"id featureId, unique feature ID encoded internally by L7",paraId:42,tocIndex:16},{value:"const source = layer.getSource();\nsource.getFeatureById(1);\n",paraId:43,tocIndex:16},{value:"Updating source's attribute data based on ID will trigger re-rendering",paraId:44,tocIndex:17},{value:"id featureId, unique feature ID encoded internally by L7",paraId:45,tocIndex:18},{value:"Properties needs to update attribute data, merge operation",paraId:45,tocIndex:18},{value:"const source = layer.getSource();\nlayer.on('click', (e) => {\n  source.updateFeaturePropertiesById(e.featureId, {\n    name: Math.random() * 10,\n  });\n});\n",paraId:46,tocIndex:18},{value:"Obtain the feature L7 encoding featureId based on the key and value of the attribute, and ensure that the value of the attribute is a unique value. If there are multiple, return the first one.",paraId:47,tocIndex:19},{value:"key: attribute field",paraId:48,tocIndex:20},{value:"value: corresponding value",paraId:48,tocIndex:20},{value:"const source = layer.getSource();\nsource.getFeatureId('name', '张三');\n",paraId:49,tocIndex:20},{value:"If the data changes, the data may need to be updated.\nThis can be done by calling",paraId:50,tocIndex:21},{value:"layer",paraId:50,tocIndex:21},{value:"of",paraId:50,tocIndex:21},{value:"setData",paraId:50,tocIndex:21},{value:"Method to update data.",paraId:50,tocIndex:21},{value:"For details, see",paraId:51,tocIndex:21},{value:"Layer",paraId:52,tocIndex:21},{value:"layer.setData(data);\n",paraId:53,tocIndex:21},{value:"瓦片数据集，可以获取当前视野内的瓦片信息, 瓦片状态",paraId:54,tocIndex:23},{value:"const source = layer1.getSource();\nconst tileSet = source.tileset;\n",paraId:55,tocIndex:23},{value:"瓦片是否加载完成",paraId:56,tocIndex:25},{value:"当前瓦片对象",paraId:57,tocIndex:26},{value:"当前瓦片层级；这里的曾经和map 的缩放层级不相等",paraId:58,tocIndex:27},{value:"地图拖动，需要加载新的瓦片时触发",paraId:59,tocIndex:29},{value:"tileSet.on('tiles-load-start', () => {\n  console.log('tile start');\n});\n",paraId:60,tocIndex:29},{value:"所有需要加载的瓦片资源加载完成后触发",paraId:61,tocIndex:30},{value:"tileSet.on('tiles-load-finished', () => {\n  console.log('tile finished');\n});\n",paraId:62,tocIndex:30},{value:"重新加载瓦片，会重新请求数据，适用与动态瓦片场景，如瓦片数据发生了更新，或者瓦片Join 的数据发生了更新",paraId:63,tocIndex:32},{value:"source.reloadAllTile();\n",paraId:64,tocIndex:32},{value:"重新加载特定瓦片的",paraId:65,tocIndex:33},{value:"参数",paraId:66,tocIndex:33},{value:"z 缩放等级",paraId:67,tocIndex:33},{value:"x 瓦片 x 坐标",paraId:67,tocIndex:33},{value:"y 瓦片 y 坐标",paraId:67,tocIndex:33},{value:"source.reloadTileById(z, x, y);\n",paraId:68,tocIndex:33},{value:"根据经纬度范围更新瓦片",paraId:69,tocIndex:34},{value:"参数",paraId:70,tocIndex:34},{value:"extent: 经纬范围 [minLng, minLat, maxLng, maxLat]",paraId:71,tocIndex:34},{value:"zoom: 缩放等级",paraId:71,tocIndex:34},{value:"根据经纬度更新瓦片，经纬度坐标转换成瓦片坐标更新",paraId:72,tocIndex:35},{value:"lng 经度",paraId:73,tocIndex:35},{value:"lat 纬度",paraId:73,tocIndex:35},{value:"zoom 缩放等级",paraId:73,tocIndex:35},{value:"source.reloadTileByLnglat(112, 30, 10);\n",paraId:74,tocIndex:35},{value:"JSON data format parsing",paraId:75},{value:"CSV data format analysis",paraId:76},{value:"Raster data type",paraId:77},{value:"Image data format analysis",paraId:78}]},52520:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(62689);const t=[{value:" ",paraId:0,tocIndex:0},{value:"string",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"required",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"Only valid for vector layers, used to set the data source of vector layers.",paraId:1,tocIndex:0},{value:"🌟 Generally, there are multiple layers of data in the data returned by the vector service, and we need to select from them.",paraId:2,tocIndex:0},{value:"const layer = new PointLayer({\n  sourceLayer: 'city',\n});\n",paraId:3,tocIndex:0},{value:" ",paraId:4,tocIndex:1},{value:"string",paraId:4,tocIndex:1},{value:" ",paraId:4,tocIndex:1},{value:"optional",paraId:4,tocIndex:1},{value:" *default:*automatic numbering",paraId:4,tocIndex:1},{value:"Only vector layers take effect, used to specify the encoding of vector layers.",paraId:5,tocIndex:1},{value:"id",paraId:5,tocIndex:1},{value:"。",paraId:5,tocIndex:1},{value:"🌟 Encoding",paraId:6,tocIndex:1},{value:"id",paraId:6,tocIndex:1},{value:"Used when a layer is highlighted.",paraId:6,tocIndex:1},{value:"const layer = new PointLayer({\n  featureId: 'id',\n});\n",paraId:7,tocIndex:1}]},15260:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(16591);const t=[{value:"of tile layer",paraId:0},{value:"style",paraId:0},{value:"Parameters depend on the layer used. Such as vector point layer,",paraId:0},{value:"style",paraId:0},{value:"The parameters of are the parameters of the corresponding point layer.",paraId:0},{value:"Set the domain of data mapping.",paraId:1,tocIndex:1},{value:"\nps: The fixed value range is",paraId:1,tocIndex:1},{value:"[0, 1]",paraId:1,tocIndex:1},{value:", we map the incoming value (domain) to the value domain",paraId:1,tocIndex:1},{value:"[0, 1]",paraId:1,tocIndex:1},{value:"Later from",paraId:1,tocIndex:1},{value:"rampColor",paraId:1,tocIndex:1},{value:"The built ribbon picks up colors, and RGB multi-channel rasters are not supported.",paraId:1,tocIndex:1},{value:"clampLow",paraId:2,tocIndex:2},{value:"The default value is",paraId:2,tocIndex:2},{value:"false",paraId:2,tocIndex:2},{value:",Set as",paraId:2,tocIndex:2},{value:"true",paraId:2,tocIndex:2},{value:", lower than",paraId:2,tocIndex:2},{value:"domain",paraId:2,tocIndex:2},{value:"The data will not be displayed.",paraId:2,tocIndex:2},{value:"clampHigh",paraId:2,tocIndex:2},{value:"The default value is",paraId:2,tocIndex:2},{value:"false",paraId:2,tocIndex:2},{value:",Set as",paraId:2,tocIndex:2},{value:"true",paraId:2,tocIndex:2},{value:", higher than",paraId:2,tocIndex:2},{value:"domain",paraId:2,tocIndex:2},{value:"The data will not be displayed.",paraId:2,tocIndex:2},{value:"ps: rgb multi-channel raster is not supported",paraId:3,tocIndex:2},{value:"colors color array",paraId:4,tocIndex:3},{value:"positions data interval",paraId:4,tocIndex:3},{value:"Configure the color band of the value range mapping color. The range of the value range is",paraId:5,tocIndex:3},{value:"[0 - 1]",paraId:5,tocIndex:3},{value:", correspondingly we need to provide each",paraId:5,tocIndex:3},{value:"position",paraId:5,tocIndex:3},{value:"Position sets a color value.",paraId:5,tocIndex:3},{value:"⚠️ colors, positions must be the same length",paraId:6,tocIndex:3},{value:"layer.style({\n  rampColors: {\n    colors: ['#FF4818', '#F7B74A', '#FFF598', '#91EABC', '#2EA9A1', '#206C7C'],\n    positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n  },\n});\n",paraId:7,tocIndex:3},{value:"ps: ⚠️ The lengths of color and position must be the same, rgb multi-channel raster is not supported",paraId:8,tocIndex:3},{value:"of vector layers",paraId:9,tocIndex:4},{value:"style",paraId:9,tocIndex:4},{value:"The style remains the same as the normal layer.",paraId:9,tocIndex:4},{value:"🌟 Data raster supports layer events, while image raster currently does not support layer events.",paraId:10,tocIndex:5},{value:"🌟 Data grid tiles",paraId:11,tocIndex:6},{value:"// The method of binding events is consistent with that of ordinary layers.\nlayer.on('click', e => {...})\n",paraId:12,tocIndex:6},{value:"🌟 Data grid tiles\nThe event parameters of data grid tiles return new parameters compared to the events of ordinary layers.",paraId:13,tocIndex:7},{value:"🌟 Data grid tiles\nThe actual value of the tile at the mouse event location.",paraId:14,tocIndex:8}]},34468:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(87501);const t=[{value:"L7",paraId:0},{value:"In addition to the tile services provided by the backend, vector tiles also provide",paraId:0},{value:"geojson-vt",paraId:0},{value:"The tile slicing scheme allows the front end to use vector tiles without back-end support.",paraId:0},{value:"import { PolygonLayer } from '@antv/l7';\nfetch('https://gw.alipayobjects.com/os/bmw-prod/2b7aae6e-5f40-437f-8047-100e9a0d2808.json')\n  .then((d) => d.json())\n  .then((data) => {\n    const source = new Source(data, {\n      parser: { type: 'geojsonvt', maxZoom: 9 },\n    });\n    const polygon = new PolygonLayer({ featureId: 'COLOR' }).source(source).color('red');\n  });\n",paraId:1,tocIndex:0},{value:"When using front-end tile segmentation, we no longer need to specify a data source for the tile layer.",paraId:2,tocIndex:1},{value:"When using vector tiles split by front-end tiles,",paraId:3,tocIndex:2},{value:"source",paraId:3,tocIndex:2},{value:"The method receives not the address of the data service, but the standard",paraId:3,tocIndex:2},{value:"GeoJSON",paraId:3,tocIndex:2},{value:"data.",paraId:3,tocIndex:2},{value:"When using front-end tile segmentation we need to",paraId:4,tocIndex:3},{value:"source parser",paraId:4,tocIndex:3},{value:"The type is set to",paraId:4,tocIndex:3},{value:"geojsonvt",paraId:4,tocIndex:3},{value:"。",paraId:4,tocIndex:3},{value:"const source = new Source(data, {\n  parser: {\n    type: 'geojsonvt',\n    maxZoom: 9,\n    geojsonvtOptions: {},\n  },\n});\n",paraId:5,tocIndex:3},{value:"geojsonOptions",paraId:6,tocIndex:3},{value:"The following parameters are supported:",paraId:6,tocIndex:3},{value:"parameter",paraId:7,tocIndex:3},{value:"type",paraId:7,tocIndex:3},{value:"default value",paraId:7,tocIndex:3},{value:"describe",paraId:7,tocIndex:3},{value:"maxZoom",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"14",paraId:7,tocIndex:3},{value:"max zoom to preserve detail on",paraId:7,tocIndex:3},{value:"indexMaxZoom",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"5",paraId:7,tocIndex:3},{value:"max zoom in the tile index",paraId:7,tocIndex:3},{value:"indexMaxPoints",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"100000",paraId:7,tocIndex:3},{value:"max number of points per tile in the tile index",paraId:7,tocIndex:3},{value:"tolerance",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"3",paraId:7,tocIndex:3},{value:"simplification tolerance (higher means simpler)",paraId:7,tocIndex:3},{value:"extent",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"4096",paraId:7,tocIndex:3},{value:"tile extent",paraId:7,tocIndex:3},{value:"buffer",paraId:7,tocIndex:3},{value:"number",paraId:7,tocIndex:3},{value:"64",paraId:7,tocIndex:3},{value:"tile buffer on each side",paraId:7,tocIndex:3},{value:"lineMetrics",paraId:7,tocIndex:3},{value:"boolean",paraId:7,tocIndex:3},{value:"false",paraId:7,tocIndex:3},{value:"whether to calculate line metrics",paraId:7,tocIndex:3},{value:"promoteId",paraId:7,tocIndex:3},{value:"`string",paraId:7,tocIndex:3},{value:"null`",paraId:7,tocIndex:3},{value:"null",paraId:7,tocIndex:3},{value:"name of a feature property to be promoted to feature.id",paraId:7,tocIndex:3},{value:"generateId",paraId:7,tocIndex:3},{value:"boolean",paraId:7,tocIndex:3},{value:"true",paraId:7,tocIndex:3},{value:"whether to generate feature ids. Cannot be used with promoteId",paraId:7,tocIndex:3},{value:"debug",paraId:7,tocIndex:3},{value:"0, 1 or 2",paraId:7,tocIndex:3},{value:"0",paraId:7,tocIndex:3},{value:"logging level (0, 1 or 2)",paraId:7,tocIndex:3}]},88162:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(52040);const t=[{value:"L7",paraId:0},{value:"The raster layer supports loading",paraId:0},{value:"TMS",paraId:0},{value:"、",paraId:0},{value:"WMS",paraId:0},{value:"、",paraId:0},{value:"WMTS",paraId:0},{value:"and other image tiles in various formats, and also supports",paraId:0},{value:"Tiff",paraId:0},{value:"、",paraId:0},{value:"Lerc",paraId:0},{value:"Data raster tiles in various formats.",paraId:0},{value:"Classification",paraId:1},{value:"Layer",paraId:1},{value:"parserType",paraId:1},{value:"dataType",paraId:1},{value:"describe",paraId:1},{value:"grid tiles",paraId:1},{value:"RasterLayer",paraId:1},{value:"rasterTile",paraId:1},{value:"image",paraId:1},{value:"、",paraId:1},{value:"/",paraId:1},{value:"Picture grid",paraId:1},{value:"grid tiles",paraId:1},{value:"RasterLayer",paraId:1},{value:"rasterTile",paraId:1},{value:"arraybuffer",paraId:1},{value:"data grid",paraId:1},{value:"grid tiles",paraId:1},{value:"RasterLayer",paraId:1},{value:"rasterTile",paraId:1},{value:"rgb",paraId:1},{value:"Color remote sensing image raster",paraId:1},{value:"🌟 Currently only supports 3857 coordinate system",paraId:2},{value:"The data source of vector tiles needs to pass in the tile service of vector data and the corresponding configuration parameters.",paraId:3,tocIndex:0},{value:"The path processing of data services supports single service and multi-service writing methods, and also supports simultaneous requests for multiple files.",paraId:4,tocIndex:1},{value:"Single server Requests tile data from one server.",paraId:5,tocIndex:1},{value:"Multiple servers request tile data for the same service from multiple servers.",paraId:6,tocIndex:1},{value:"Use braces to request the setting of multiple servers, such as",paraId:7,tocIndex:1},{value:"{1-3}",paraId:7,tocIndex:1},{value:"、",paraId:7,tocIndex:1},{value:"{a-c}",paraId:7,tocIndex:1},{value:"。",paraId:7,tocIndex:1},{value:"Request multiple files. Request tile data from multiple tile services at the same time.",paraId:8,tocIndex:1},{value:"Use an array to set up multiple services.",paraId:9,tocIndex:1},{value:"Currently, the format for requesting multiple files is only supported by raster tiles.",paraId:9,tocIndex:1},{value:"import { Source } from '@antv/l7'\n// single server\nconst source = new Source('http://webst01.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}', {...})\n\n//Multiple servers\nconst source = new Source('http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}', {...} )\n\n//Request multiple files\nconst urls = [\n  'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff',\n  'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff',\n]\n\nconst urls = [\n  {\n    url: 'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff',\n    bands: [0]\n  },\n  {\n    url: 'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff'\n  },\n  ...\n]\nconst tileSource = new Source(urls, {...});\n",paraId:10,tocIndex:1},{value:"via configuration",paraId:11,tocIndex:2},{value:"parser",paraId:11,tocIndex:2},{value:"In the parameters, we can specify different tile types and parameters of the tile service.",paraId:11,tocIndex:2},{value:"const source = new Source(url, {\n  parser: {...}\n})\n",paraId:12,tocIndex:2},{value:"parameter",paraId:13,tocIndex:2},{value:"type",paraId:13,tocIndex:2},{value:"default value",paraId:13,tocIndex:2},{value:"describe",paraId:13,tocIndex:2},{value:"type",paraId:13,tocIndex:2},{value:"string",paraId:13,tocIndex:2},{value:"/",paraId:13,tocIndex:2},{value:"Describe the different types of tiles",paraId:13,tocIndex:2},{value:"tileSize",paraId:13,tocIndex:2},{value:"number",paraId:13,tocIndex:2},{value:"256",paraId:13,tocIndex:2},{value:"Requested tile size",paraId:13,tocIndex:2},{value:"minZoom",paraId:13,tocIndex:2},{value:"number",paraId:13,tocIndex:2},{value:"0",paraId:13,tocIndex:2},{value:"Request the minimum level of tiles",paraId:13,tocIndex:2},{value:"maxZoom",paraId:13,tocIndex:2},{value:"number",paraId:13,tocIndex:2},{value:"Infinity",paraId:13,tocIndex:2},{value:"Request the maximum level of tiles",paraId:13,tocIndex:2},{value:"zoomOffset",paraId:13,tocIndex:2},{value:"number",paraId:13,tocIndex:2},{value:"0",paraId:13,tocIndex:2},{value:"Request tile level offset",paraId:13,tocIndex:2},{value:"extent",paraId:13,tocIndex:2},{value:"[number, number, number, number]",paraId:13,tocIndex:2},{value:"[-Infinity,-Infinity,Infinity,Infinity,]",paraId:13,tocIndex:2},{value:"Request the bounds of a tile",paraId:13,tocIndex:2},{value:"updateStrategy",paraId:13,tocIndex:2},{value:"UpdateTileStrategy",paraId:13,tocIndex:2},{value:"replace",paraId:13,tocIndex:2},{value:"Tile replacement strategy",paraId:13,tocIndex:2},{value:"type UpdateTileStrategy = 'realtime' | 'overlap' | 'replace';\n",paraId:14,tocIndex:2},{value:"About using different grid tiles",paraId:15,tocIndex:2},{value:"parser",paraId:15,tocIndex:2},{value:"parameter.",paraId:15,tocIndex:2},{value:"Tile type",paraId:16,tocIndex:2},{value:"type",paraId:16,tocIndex:2},{value:"dataType",paraId:16,tocIndex:2},{value:"describe",paraId:16,tocIndex:2},{value:"TMS",paraId:16,tocIndex:2},{value:"rasterTile",paraId:16,tocIndex:2},{value:"image",paraId:16,tocIndex:2},{value:"Picture grid",paraId:16,tocIndex:2},{value:"WMS",paraId:16,tocIndex:2},{value:"rasterTile",paraId:16,tocIndex:2},{value:"image",paraId:16,tocIndex:2},{value:"Picture grid",paraId:16,tocIndex:2},{value:"WMTS",paraId:16,tocIndex:2},{value:"rasterTile",paraId:16,tocIndex:2},{value:"image",paraId:16,tocIndex:2},{value:"Picture grid",paraId:16,tocIndex:2},{value:"arraybuffer",paraId:16,tocIndex:2},{value:"rasterTile",paraId:16,tocIndex:2},{value:"arraybuffer",paraId:16,tocIndex:2},{value:"Data raster, single channel",paraId:16,tocIndex:2},{value:"rgb",paraId:16,tocIndex:2},{value:"rasterRgb",paraId:16,tocIndex:2},{value:"arraybuffer",paraId:16,tocIndex:2},{value:"Data raster, multi-channel",paraId:16,tocIndex:2},{value:"🌟",paraId:17,tocIndex:2},{value:"WMTS",paraId:17,tocIndex:2},{value:"Format tiles have additional parameters.",paraId:17,tocIndex:2},{value:"parameter",paraId:18,tocIndex:2},{value:"type",paraId:18,tocIndex:2},{value:"value",paraId:18,tocIndex:2},{value:"describe",paraId:18,tocIndex:2},{value:"wmtsOptions",paraId:18,tocIndex:2},{value:"IWmtsOptions",paraId:18,tocIndex:2},{value:"/",paraId:18,tocIndex:2},{value:"Set request parameters",paraId:18,tocIndex:2},{value:"IWmtsOptions",paraId:19,tocIndex:2},{value:"The parameters are used for splicing",paraId:19,tocIndex:2},{value:"url",paraId:19,tocIndex:2},{value:"。",paraId:19,tocIndex:2},{value:"interface IWmtsOptions {\n  layer: string;\n  version?: string;\n  style?: string;\n  format: string;\n  service?: string;\n  tileMatrixset: string;\n}\n",paraId:20,tocIndex:2},{value:"Used to specify the parsing method of the tile service, the value is",paraId:21,tocIndex:4},{value:"rasterTile",paraId:21,tocIndex:4},{value:"and",paraId:21,tocIndex:4},{value:"mvt",paraId:21,tocIndex:4},{value:"。",paraId:21,tocIndex:4},{value:"rasterTile",paraId:21,tocIndex:4},{value:"For parsing of raster tiles,",paraId:21,tocIndex:4},{value:"mvt",paraId:21,tocIndex:4},{value:"For parsing of vector tiles.",paraId:21,tocIndex:4},{value:"use",paraId:22,tocIndex:5},{value:"dataType",paraId:22,tocIndex:5},{value:"Distinguish between picture raster and data raster, the value is",paraId:22,tocIndex:5},{value:"image",paraId:22,tocIndex:5},{value:"and",paraId:22,tocIndex:5},{value:"arraybuffer",paraId:22,tocIndex:5},{value:",The default is",paraId:22,tocIndex:5},{value:"image",paraId:22,tocIndex:5},{value:"。",paraId:22,tocIndex:5},{value:"//Set the image grid\nlayer.source({\n  'http://webst01.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n  {\n    parser: {\n      type: 'rasterTile',\n      dataType: 'image',\n      ...\n    }\n  }\n})\n\n//Set data grid\nlayer.source({\n  'http://webst01.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n  {\n    parser: {\n      type: 'rasterTile',\n      dataType: 'arraybuffer',\n      ...\n    }\n  }\n})\n",paraId:23,tocIndex:5},{value:"Set the request level for tile data. When the map’s zoom level",paraId:24,tocIndex:6},{value:"zoom",paraId:24,tocIndex:6},{value:"less than",paraId:24,tocIndex:6},{value:"minZoom",paraId:24,tocIndex:6},{value:"after, or",paraId:24,tocIndex:6},{value:"zoom",paraId:24,tocIndex:6},{value:"more than the",paraId:24,tocIndex:6},{value:"maxZoom",paraId:24,tocIndex:6},{value:"No more new tiles will be requested.",paraId:24,tocIndex:6},{value:"minZoom",paraId:24,tocIndex:6},{value:"The default value is",paraId:24,tocIndex:6},{value:"-Infinity",paraId:24,tocIndex:6},{value:"。",paraId:24,tocIndex:6},{value:"maxZoom",paraId:24,tocIndex:6},{value:"The default value is",paraId:24,tocIndex:6},{value:"Infinity",paraId:24,tocIndex:6},{value:"。",paraId:24,tocIndex:6},{value:"The set value is the tile size returned by the tile service.",paraId:25,tocIndex:7},{value:"tileSize",paraId:25,tocIndex:7},{value:"The default value is 256.",paraId:25,tocIndex:7},{value:"\nps: This value is determined when producing tiles, we set",paraId:25,tocIndex:7},{value:"tileSize",paraId:25,tocIndex:7},{value:"It needs to be consistent with what is returned by the tile service.",paraId:25,tocIndex:7},{value:"Set the boundary of requesting tile data, the format is",paraId:26,tocIndex:8},{value:"[minLng, maxLat, maxLng, minLat]",paraId:26,tocIndex:8},{value:", only tile data within the range will be requested.",paraId:26,tocIndex:8},{value:"The set value is used to change the level of requested tile data. Usually on the mobile terminal, higher-level tiles can be requested for better clarity.",paraId:27,tocIndex:9},{value:"zoomOffset",paraId:27,tocIndex:9},{value:"The default value of is 0",paraId:27,tocIndex:9},{value:" ",paraId:28,tocIndex:10},{value:"IFormat",paraId:28,tocIndex:10},{value:" ",paraId:28,tocIndex:10},{value:"required",paraId:28,tocIndex:10},{value:" ",paraId:28,tocIndex:10},{value:"format",paraId:29,tocIndex:10},{value:"Method used to extract band data from the incoming raster file binary data.",paraId:29,tocIndex:10},{value:"The first parameter is the raster file binary data.",paraId:30,tocIndex:10},{value:"The second parameter is the band that should be extracted from the raster file specified by the first parameter. The method parameter is what we pass",paraId:30,tocIndex:10},{value:"source",paraId:30,tocIndex:10},{value:"parameters passed",paraId:30,tocIndex:10},{value:"data",paraId:30,tocIndex:10},{value:"numerical value.",paraId:30,tocIndex:10},{value:"format",paraId:30,tocIndex:10},{value:"Is a",paraId:30,tocIndex:10},{value:"async",paraId:30,tocIndex:10},{value:"method.",paraId:30,tocIndex:10},{value:"interface IRasterData {\n  rasterData: HTMLImageElement | Uint8Array | ImageBitmap | null | undefined;\n  width: number;\n  height: number;\n}\ntype IRasterFormat = (\n  data: ArrayBuffer,\n  bands: number[],\n) => Promise<IRasterData | IRasterData[]>;\n\nconst source = new Source(data, {\n  parser: {\n    format: async (data, bands) => {\n      ...\n      return {\n        rasterData: bandData,\n        width: 256;\n        height: 256;\n      }\n    }\n  }\n})\n",paraId:31,tocIndex:10},{value:"The single-channel drawing result is controlled by a single numerical value, such as a grayscale image. The color corresponding to the numerical value can be configured by expressing",paraId:32,tocIndex:11},{value:"rampColors",paraId:32,tocIndex:11},{value:"Ribbon control.",paraId:32,tocIndex:11},{value:"layer.style({\n  opacity: 0.5,\n});\n",paraId:33,tocIndex:11},{value:"style",paraId:34,tocIndex:12},{value:"type",paraId:34,tocIndex:12},{value:"describe",paraId:34,tocIndex:12},{value:"default value",paraId:34,tocIndex:12},{value:"opacity",paraId:34,tocIndex:12},{value:"number",paraId:34,tocIndex:12},{value:"Graphic transparency",paraId:34,tocIndex:12},{value:"1",paraId:34,tocIndex:12},{value:"clampLow",paraId:34,tocIndex:12},{value:"boolean",paraId:34,tocIndex:12},{value:"Set as",paraId:34,tocIndex:12},{value:"true",paraId:34,tocIndex:12},{value:", lower than",paraId:34,tocIndex:12},{value:"domain",paraId:34,tocIndex:12},{value:"data will not be displayed",paraId:34,tocIndex:12},{value:"false",paraId:34,tocIndex:12},{value:"clampHigh",paraId:34,tocIndex:12},{value:"boolean",paraId:34,tocIndex:12},{value:"Set as",paraId:34,tocIndex:12},{value:"true",paraId:34,tocIndex:12},{value:", higher than",paraId:34,tocIndex:12},{value:"domain",paraId:34,tocIndex:12},{value:"data will not be displayed",paraId:34,tocIndex:12},{value:"false",paraId:34,tocIndex:12},{value:"domain",paraId:34,tocIndex:12},{value:"[number, number]",paraId:34,tocIndex:12},{value:"Data mapping interval",paraId:34,tocIndex:12},{value:"[ 0, 8000 ]",paraId:34,tocIndex:12},{value:"noDataValue",paraId:34,tocIndex:12},{value:"number",paraId:34,tocIndex:12},{value:"Values ​​that will not be displayed",paraId:34,tocIndex:12},{value:"-9999999",paraId:34,tocIndex:12},{value:"rampColors",paraId:34,tocIndex:12},{value:"IRampColors",paraId:34,tocIndex:12},{value:"The color ramp for the range mapping color",paraId:34,tocIndex:12},{value:"/",paraId:34,tocIndex:12},{value:"type type supports `linear','quantize','custom','cat'",paraId:35,tocIndex:13},{value:"colors color array",paraId:35,tocIndex:13},{value:"positions data segmentation interval, optional, quantize does not need to set position, position is the original data value",paraId:35,tocIndex:13},{value:"⚠️ 2.13 new features",paraId:36,tocIndex:13},{value:"The enumeration type ribbon only supports integer types from 0 to 255, and positions are used to set the enumeration.",paraId:37,tocIndex:14},{value:"{\n  type:'cat',\n  colors:['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n  positions:[1,20,101,102,200],\n}\n",paraId:38,tocIndex:14},{value:"Equally spaced segments are evenly divided only according to the interval domain of the data, such as domain [0,10000]. If it is divided into 5 segments, the distance between each segment is 2000.\nThere is no need to set positions for equal spacing. You only need to set colors. Set the number of segments according to the length of colors.",paraId:39,tocIndex:15},{value:"rampColors: {\n  type:'quantize',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac']\n}\n",paraId:40,tocIndex:15},{value:"linear is an enhanced version of the existing continuous type. Positions supports setting source data without converting it to 0-1.",paraId:41,tocIndex:16},{value:"rampColors: {\n  type:'linear',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000]\n}\n\n⚠️ Compatible with versions before 2.13.0. When type is not set, the position value range is 0-1.\n",paraId:42,tocIndex:16},{value:"Customized segmented ribbons distinguish equal-spaced ribbons, and user-defined segment intervals.\nThe length of custom positions needs to be 1 more than the length of colors, and positions",paraId:43,tocIndex:17},{value:"rampColors: {\n  type:'custom',\n  colors: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n  positions [0,200,1000,4000,8000,10000]\n}\n",paraId:44,tocIndex:17}]},76282:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(94164);const t=[{value:"Display tile range and row and row number information for testing and verifying tile services",paraId:0},{value:"import { Scene, TileDebugLayer } from '@antv/l7';\nconst debugerLayer = new TileDebugLayer();\nscene.addLayer(debugerLayer);\n",paraId:1}]},45366:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(37751);const t=[{value:"L7",paraId:0,tocIndex:0},{value:"The vector tile layer reuses the data visualization capabilities of ordinary layers and supports data mapping of layer styles. Currently, vector tiles support point, line, surface, mask and other layers.",paraId:0,tocIndex:0},{value:"Classification",paraId:1,tocIndex:0},{value:"Layer",paraId:1,tocIndex:0},{value:"parserType",paraId:1,tocIndex:0},{value:"describe",paraId:1,tocIndex:0},{value:"vector tiles",paraId:1,tocIndex:0},{value:"PointLayer",paraId:1,tocIndex:0},{value:"parser of PointLayer、",paraId:1,tocIndex:0},{value:"geojsonvt",paraId:1,tocIndex:0},{value:"vector point layer",paraId:1,tocIndex:0},{value:"vector tiles",paraId:1,tocIndex:0},{value:"LineLayer",paraId:1,tocIndex:0},{value:"parser of LineLayer、",paraId:1,tocIndex:0},{value:"geojsonvt",paraId:1,tocIndex:0},{value:"vector line layer",paraId:1,tocIndex:0},{value:"vector tiles",paraId:1,tocIndex:0},{value:"PolygonLayer",paraId:1,tocIndex:0},{value:"parser of PolygonLayer、",paraId:1,tocIndex:0},{value:"geojsonvt",paraId:1,tocIndex:0},{value:"Vector geometry layer",paraId:1,tocIndex:0},{value:"vector tiles",paraId:1,tocIndex:0},{value:"MaskLayer",paraId:1,tocIndex:0},{value:"parser of MaskLayer、",paraId:1,tocIndex:0},{value:"geojsonvt",paraId:1,tocIndex:0},{value:"Vector mask layer",paraId:1,tocIndex:0},{value:"vector tiles",paraId:1,tocIndex:0},{value:"TileDebugLayer",paraId:1,tocIndex:0},{value:"/",paraId:1,tocIndex:0},{value:"TileDebugLayer",paraId:1,tocIndex:0},{value:"No need to execute",paraId:1,tocIndex:0},{value:"source",paraId:1,tocIndex:0},{value:"method",paraId:1,tocIndex:0},{value:"Other configuration items of the tile layer are consistent with the basic layers PointLayer, Linelayer, and PolygonLayer.",paraId:2,tocIndex:0},{value:" ",paraId:3,tocIndex:2},{value:"string",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"required",paraId:3,tocIndex:2},{value:" ",paraId:3,tocIndex:2},{value:"Only valid for vector layers, used to set the data source of vector layers.",paraId:4,tocIndex:2},{value:"🌟 Generally, there are multiple layers of data in the data returned by the vector service, and we need to select from them.",paraId:5,tocIndex:2},{value:"const layer = new PointLayer({\n  sourceLayer: 'city',\n});\n",paraId:6,tocIndex:2},{value:" ",paraId:7,tocIndex:3},{value:"string",paraId:7,tocIndex:3},{value:" ",paraId:7,tocIndex:3},{value:"optional",paraId:7,tocIndex:3},{value:" *default:*automatic numbering",paraId:7,tocIndex:3},{value:"Only vector layers take effect, used to specify the encoding of vector layers.",paraId:8,tocIndex:3},{value:"id",paraId:8,tocIndex:3},{value:"。",paraId:8,tocIndex:3},{value:"🌟 Encoding",paraId:9,tocIndex:3},{value:"id",paraId:9,tocIndex:3},{value:"Used when a layer is highlighted.",paraId:9,tocIndex:3},{value:"const layer = new PointLayer({\n  featureId: 'id',\n});\n",paraId:10,tocIndex:3},{value:"The data source of vector tiles needs to pass in the tile service of vector data and the corresponding configuration parameters.",paraId:11,tocIndex:4},{value:"The data service path supports single service and multi-service writing.",paraId:12,tocIndex:5},{value:"Single server Requests tile data from one server.",paraId:13,tocIndex:5},{value:"Multiple servers request tile data for the same service from multiple servers.",paraId:14,tocIndex:5},{value:"Use braces to request the setting of multiple servers, such as",paraId:15,tocIndex:5},{value:"{1-3}",paraId:15,tocIndex:5},{value:"、",paraId:15,tocIndex:5},{value:"{a-c}",paraId:15,tocIndex:5},{value:"。",paraId:15,tocIndex:5},{value:"// single server\nconst source = new Source('http://webst01.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}', {...})\n\n//Multiple servers\nconst source = new Source('http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}', {...} )\n",paraId:16,tocIndex:5},{value:"Regarding the configuration parameters, what we need to relate to is the inside",paraId:17,tocIndex:6},{value:"parser",paraId:17,tocIndex:6},{value:"Parameters corresponding to the field.",paraId:17,tocIndex:6},{value:"const source = new Source(url, {\n  parser: {...}\n})\n",paraId:18,tocIndex:6},{value:"parameter",paraId:19,tocIndex:6},{value:"type",paraId:19,tocIndex:6},{value:"default value",paraId:19,tocIndex:6},{value:"describe",paraId:19,tocIndex:6},{value:"type",paraId:19,tocIndex:6},{value:"string",paraId:19,tocIndex:6},{value:"/",paraId:19,tocIndex:6},{value:"The fixed value is",paraId:19,tocIndex:6},{value:"mvt",paraId:19,tocIndex:6},{value:"tileSize",paraId:19,tocIndex:6},{value:"number",paraId:19,tocIndex:6},{value:"256",paraId:19,tocIndex:6},{value:"Requested tile size",paraId:19,tocIndex:6},{value:"minZoom",paraId:19,tocIndex:6},{value:"number",paraId:19,tocIndex:6},{value:"0",paraId:19,tocIndex:6},{value:"Request the minimum level of tiles",paraId:19,tocIndex:6},{value:"maxZoom",paraId:19,tocIndex:6},{value:"number",paraId:19,tocIndex:6},{value:"Infinity",paraId:19,tocIndex:6},{value:"Request the maximum level of tiles",paraId:19,tocIndex:6},{value:"zoomOffset",paraId:19,tocIndex:6},{value:"number",paraId:19,tocIndex:6},{value:"0",paraId:19,tocIndex:6},{value:"Request tile level offset",paraId:19,tocIndex:6},{value:"extent",paraId:19,tocIndex:6},{value:"[number, number, number, number]",paraId:19,tocIndex:6},{value:"[-Infinity,-Infinity,Infinity,Infinity,]",paraId:19,tocIndex:6},{value:"Request the bounds of a tile",paraId:19,tocIndex:6},{value:"updateStrategy",paraId:19,tocIndex:6},{value:"UpdateTileStrategy",paraId:19,tocIndex:6},{value:"replace",paraId:19,tocIndex:6},{value:"Tile replacement strategy",paraId:19,tocIndex:6},{value:"type UpdateTileStrategy = 'realtime' | 'overlap' | 'replace';\n",paraId:20,tocIndex:6},{value:"🌟 Recommended reuse of vector tiles Source",paraId:21,tocIndex:6},{value:"const vectorSource = new Source(\n  'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/rs_l7/{z}/{x}/{y}.pbf',\n  {\n    parser: {\n      type: 'mvt',\n      maxZoom: 9,\n      extent: [-180, -85.051129, 179, 85.051129],\n    },\n  },\n);\n// 复用\nlayer1.source(vectorSource);\nlayer2.source(vectorSource);\n",paraId:22,tocIndex:6}]},39037:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(31001);const t=[{value:"Error: Cannot apply @injectable decorator multiple times.\n",paraId:0,tocIndex:0},{value:"🌟Solution:",paraId:1,tocIndex:0},{value:"\ndelete",paraId:1,tocIndex:0},{value:"node_modules",paraId:1,tocIndex:0},{value:"Download all different versions of",paraId:1,tocIndex:0},{value:"L7",paraId:1,tocIndex:0},{value:"package, reinstall and start.",paraId:1,tocIndex:0},{value:"During initialization, you can",paraId:2,tocIndex:1},{value:"map",paraId:2,tocIndex:1},{value:"Configuration item settings",paraId:2,tocIndex:1},{value:"Gaode map can be viewed",paraId:3,tocIndex:1},{value:"https://lbs.amap.com/api/javascript-api/reference/map",paraId:3,tocIndex:1},{value:"mapbox ",paraId:3,tocIndex:1},{value:"https://docs.mapbox.com/mapbox-gl-js/api/#map",paraId:3,tocIndex:1},{value:"Set after loading is complete\ntransfer",paraId:4,tocIndex:1},{value:"scene",paraId:4,tocIndex:1},{value:"of",paraId:4,tocIndex:1},{value:"setMapStatus",paraId:5,tocIndex:1},{value:"method",paraId:4,tocIndex:1},{value:"Browser exists",paraId:6,tocIndex:2},{value:"webgl",paraId:6,tocIndex:2},{value:"The upper limit of instances is 16 in general browsers, so the number of map instances that can exist in the browser is limited.",paraId:6,tocIndex:2},{value:"Need to be called after destroying the map",paraId:6,tocIndex:2},{value:"scene.destroy();",paraId:6,tocIndex:2},{value:"right",paraId:6,tocIndex:2},{value:"webgl",paraId:6,tocIndex:2},{value:"The instance is destroyed.",paraId:6,tocIndex:2}]},44929:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(22710);const t=[{value:"Currently, the data formats supported by L7 are:",paraId:0,tocIndex:0},{value:"GeoJSON",paraId:0,tocIndex:0},{value:"，",paraId:0,tocIndex:0},{value:"CSV",paraId:0,tocIndex:0},{value:"，",paraId:0,tocIndex:0},{value:"JSON",paraId:0,tocIndex:0},{value:"，",paraId:0,tocIndex:0},{value:"Image",paraId:0,tocIndex:0},{value:"。",paraId:0,tocIndex:0},{value:"GeoJSON",paraId:1,tocIndex:0},{value:"Supports all standard spatial data formats such as points, lines, and areas.",paraId:1,tocIndex:0},{value:"CSV",paraId:2,tocIndex:0},{value:"Supports data types such as points, line segments, and arcs.",paraId:2,tocIndex:0},{value:"JSON",paraId:3,tocIndex:0},{value:"Supports simple point, line, and area data types, but does not support multi-point, multi-line, and multi-area data formats.",paraId:3,tocIndex:0},{value:"GeoJSON",paraId:4,tocIndex:1},{value:"Is a format for encoding various geographic data structures. GeoJSON objects can represent geometries, features, or feature collections. GeoJSON supports the following geometry types: point, line, polygon, multipoint, multiline, polygon, and geometry collection. Features in GeoJSON include a geometric object and other attributes, and feature collections represent a series of features.",paraId:4,tocIndex:1},{value:'{\n  "type": "FeatureCollection",\n  "features": [\n    {\n      "type": "Feature",\n      "properties": {},\n      "geometry": {\n        "type": "Polygon",\n        "coordinates": [\n          [\n            [110.478515625, 32.76880048488168],\n            [117.68554687499999, 32.76880048488168],\n            [117.68554687499999, 37.64903402157866]\n          ]\n        ]\n      }\n    }\n  ]\n}\n',paraId:5,tocIndex:1},{value:"turfjs",paraId:6,tocIndex:2},{value:": JavaScript library for geographic data calculation, processing, statistics, and analysis",paraId:6,tocIndex:2},{value:"http://geojson.io/",paraId:7,tocIndex:3},{value:"You can view, draw and modify GeoJSON data online",paraId:7,tocIndex:3},{value:"https://mapshaper.org/",paraId:8,tocIndex:3},{value:"Can view larger geojson and simplify GeoJSON data",paraId:8,tocIndex:3},{value:"geojson, svg download",paraId:9,tocIndex:5},{value:"https://img.hcharts.cn/mapdata/",paraId:10,tocIndex:6}]},61104:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(2531);const t=[{value:"Choose any one you want to see",paraId:0,tocIndex:0},{value:"demo",paraId:0,tocIndex:0},{value:"。",paraId:0,tocIndex:0},{value:"You may not have noticed that there is a row of tool buttons above the code area.",paraId:1,tocIndex:0},{value:"Click the third button on the left and you will enter",paraId:2,tocIndex:1},{value:"codesandbox",paraId:2,tocIndex:1},{value:"。",paraId:2,tocIndex:1},{value:"You find that you have entered an online code editor, where you can modify the code and see the effect at any time.",paraId:3,tocIndex:1},{value:"You may want to say that I just want to run it locally and don't want to modify it online.",paraId:4,tocIndex:1},{value:"Of course it is possible.",paraId:5,tocIndex:1},{value:"exist",paraId:6,tocIndex:2},{value:"codesandbox",paraId:6,tocIndex:2},{value:"The file directory tool has a download button, refer to the red part in the picture.",paraId:6,tocIndex:2},{value:"Click to download and you can put this",paraId:7,tocIndex:2},{value:"demo",paraId:7,tocIndex:2},{value:"Download the source code locally.",paraId:7,tocIndex:2},{value:"Unzip the project and enter the project directory.",paraId:8,tocIndex:3},{value:"Install environment dependencies",paraId:9,tocIndex:3},{value:"If you don't know",paraId:10,tocIndex:3},{value:"yarn",paraId:10,tocIndex:3},{value:"You may need to add some front-end knowledge, if not",paraId:10,tocIndex:3},{value:"yarn",paraId:10,tocIndex:3},{value:"You need to install the environment.",paraId:10,tocIndex:3},{value:"yarn install\n",paraId:11,tocIndex:3},{value:"Startup project",paraId:12,tocIndex:3},{value:"yarn start\n",paraId:13,tocIndex:3},{value:"The browser will automatically open",paraId:14,tocIndex:3},{value:"http://localhost:3000/",paraId:14,tocIndex:3},{value:",so",paraId:14,tocIndex:3},{value:"demo",paraId:14,tocIndex:3},{value:"Just started running.",paraId:14,tocIndex:3},{value:"Now you can freely modify the code locally and add your own layers.",paraId:15,tocIndex:3},{value:"L7",paraId:15,tocIndex:3},{value:"all",paraId:15,tocIndex:3},{value:"demo",paraId:15,tocIndex:3},{value:"All can be found in",paraId:15,tocIndex:3},{value:"codesandbox",paraId:15,tocIndex:3},{value:"Open and you can download the code.",paraId:15,tocIndex:3}]},76366:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(81252);const t=[{value:"The developers here refer to developers who develop L7 and have the ability to fix bugs, improve documentation, upgrade functions, and develop new functions for L7.",paraId:0},{value:"Fork the L7 repository into its own space.",paraId:1,tocIndex:0},{value:"git clone https://github.com/antvis/L7  --depth=1\n",paraId:2,tocIndex:1},{value:"node version recommended v16.20.2",paraId:3,tocIndex:2},{value:"yarn install\n",paraId:4,tocIndex:2},{value:"If you need function debugging",paraId:5,tocIndex:3},{value:"yarn run dev\n",paraId:6,tocIndex:3},{value:"Open",paraId:7,tocIndex:3},{value:"http://localhost:6006/",paraId:7,tocIndex:3},{value:"：",paraId:7,tocIndex:3},{value:"If you need to update the API or write documentation or demo, use this command",paraId:8,tocIndex:4},{value:"yarn start\n",paraId:9,tocIndex:4},{value:"Open",paraId:10,tocIndex:4},{value:"http://localhost:8000/",paraId:10,tocIndex:4},{value:"：",paraId:10,tocIndex:4},{value:"Run unit tests:",paraId:11,tocIndex:5},{value:"yarn test // run in full\n\nyarn test ../tes.spec.ts // single file\n",paraId:12,tocIndex:5},{value:"Commits can be templated using yarn commit:",paraId:13,tocIndex:6},{value:"yarn commit\n",paraId:14,tocIndex:6},{value:"L7 Issues and Features are operated and managed through open source communities, allowing for completely open exploration and exchange of technical solutions. development tasks,",paraId:15,tocIndex:7},{value:"Claim View",paraId:15,tocIndex:7},{value:'For L7 developers, we have formulated a growth plan to help everyone move from junior to advanced visualization engine developers in the GIS field. If you are interested, you can add WeChat "antv2030" and indicate "Participate in L7 R&D". We look forward to your joining and learning together.',paraId:16,tocIndex:7}]},97420:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(21361);const t=[{value:"Aggregate a set of point data into square grids of equal size. A square grid represents the statistical values ​​of all points in the grid. The grid heat map features a grid layout.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple grid heat map.",paraId:2,tocIndex:0},{value:"you can found ",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:" on the ",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:" official website",paraId:3,tocIndex:0},{value:"import { Scene, HeatmapLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [107.054293, 35.246265],\n    zoom: 4.056,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/7359a5e9-3c5e-453f-b207-bc892fb23b84.csv')\n    .then((res) => res.text())\n    .then((data) => {\n      const layer = new HeatmapLayer({})\n        .source(data, {\n          parser: {\n            type: 'csv',\n            x: 'lng',\n            y: 'lat',\n          },\n          transforms: [\n            {\n              type: 'grid',\n              size: 20000,\n              field: 'v',\n              method: 'sum',\n            },\n          ],\n        })\n        .shape('square')\n        .style({\n          coverage: 1,\n          angle: 0,\n        })\n        .color(\n          'count',\n          [\n            '#0B0030',\n            '#100243',\n            '#100243',\n            '#1B048B',\n            '#051FB7',\n            '#0350C1',\n            '#0350C1',\n            '#0072C4',\n            '#0796D3',\n            '#2BA9DF',\n            '#30C7C4',\n            '#6BD5A0',\n            '#A7ECB2',\n            '#D0F4CA',\n          ].reverse(),\n        );\n\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Grid data only supports point data as the data source, and the data format supports",paraId:6,tocIndex:1},{value:"csv",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"json",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"geojson",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"layout method pass",paraId:7,tocIndex:2},{value:"source",paraId:7,tocIndex:2},{value:"of",paraId:7,tocIndex:2},{value:"transforms",paraId:7,tocIndex:2},{value:"Property configuration.",paraId:7,tocIndex:2},{value:"type data aggregation type",paraId:8,tocIndex:2},{value:"hexagon",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"size grid radius in meters.",paraId:8,tocIndex:2},{value:"field Aggregation field.",paraId:8,tocIndex:2},{value:"method aggregation method",paraId:8,tocIndex:2},{value:"count",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"max",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"min",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"sum",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"mean",paraId:8,tocIndex:2},{value:"5 statistical dimensions.",paraId:8,tocIndex:2},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n  transforms: [\n    {\n      type: 'grid',\n      size: 15000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:9,tocIndex:2},{value:"Although the grid heat map uses a standard quadrilateral grid for data aggregation, the display effect can be set to various shapes, and the shape only supports constants.",paraId:10,tocIndex:3},{value:"circle,",paraId:11,tocIndex:4},{value:"triangle",paraId:11,tocIndex:4},{value:"square",paraId:11,tocIndex:4},{value:"heaxgon",paraId:11,tocIndex:4},{value:"layer.shape('circle');\n",paraId:12,tocIndex:4},{value:"cylinder",paraId:13,tocIndex:5},{value:"triangleColumn",paraId:13,tocIndex:5},{value:"hexagonColumn",paraId:13,tocIndex:5},{value:"squareColumn,",paraId:13,tocIndex:5},{value:"layer.shape('cylinder');\n",paraId:14,tocIndex:5},{value:"No need to set size method",paraId:15,tocIndex:7},{value:"size represents height, supports constants and data mapping",paraId:16,tocIndex:8},{value:"layer.size(10); // constant\nlayer.size('value', [10, 50]); // Map size based on value field\nlayer.size('value', (value) => {}); // Callback function to set height\n",paraId:17,tocIndex:8},{value:"Same as layer color method",paraId:18,tocIndex:9},{value:"coverage Grid coverage 0 - 1",paraId:19,tocIndex:10},{value:"angle Grid rotation angle 0 - 360",paraId:19,tocIndex:10},{value:"opacity transparency 0 - 1.0",paraId:19,tocIndex:10},{value:"layer.style({\n  coverage: 0.9,\n  angle: 0,\n  opacity: 1.0,\n});\n",paraId:20,tocIndex:10}]},89926:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(68320);const t=[{value:"Aggregate a set of point data into hexagonal grids of equal size. One hexagonal grid represents the statistical values ​​of all points in the grid. The Honeycomb Heatmap feature is laid out in a hexagonal heatmap grid.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let’s introduce how to draw a simple cellular heat map.",paraId:2,tocIndex:0},{value:"you can found ",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:" on the ",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:" official website",paraId:3,tocIndex:0},{value:"import { Scene, HeatmapLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'dark',\n    pitch: 43,\n    center: [120.13383079335335, 29.651873105004427],\n    zoom: 7.068989519212174,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/a1a8158d-6fe3-424b-8e50-694ccf61c4d7.csv')\n    .then((res) => res.text())\n    .then((data) => {\n      const layer = new HeatmapLayer({})\n        .source(data, {\n          parser: {\n            type: 'csv',\n            x: 'lng',\n            y: 'lat',\n          },\n          transforms: [\n            {\n              type: 'hexagon',\n              size: 2500,\n              field: 'v',\n              method: 'sum',\n            },\n          ],\n        })\n        .size('sum', (sum) => {\n          return sum * 200;\n        })\n        .shape('hexagonColumn')\n        .style({\n          coverage: 0.8,\n          angle: 0,\n        })\n        .color('sum', [\n          '#094D4A',\n          '#146968',\n          '#1D7F7E',\n          '#289899',\n          '#34B6B7',\n          '#4AC5AF',\n          '#5FD3A6',\n          '#7BE39E',\n          '#A1EDB8',\n          '#C3F9CC',\n          '#DEFAC0',\n          '#ECFFB1',\n        ]);\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Grid data only supports point data as the data source, and the data format supports",paraId:6,tocIndex:1},{value:"csv",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"json",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"geojson",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"layout method pass",paraId:7,tocIndex:2},{value:"source",paraId:7,tocIndex:2},{value:"of",paraId:7,tocIndex:2},{value:"transforms",paraId:7,tocIndex:2},{value:"Property configuration.",paraId:7,tocIndex:2},{value:"type data aggregation type",paraId:8,tocIndex:2},{value:"hexagon",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"size grid radius in meters.",paraId:8,tocIndex:2},{value:"field Aggregation field.",paraId:8,tocIndex:2},{value:"method aggregation method",paraId:8,tocIndex:2},{value:"count",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"max",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"min",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"sum",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"mean",paraId:8,tocIndex:2},{value:"5 statistical dimensions.",paraId:8,tocIndex:2},{value:"layer.source(data, {\n  parser: {\n    type: 'csv',\n    x: 'lng',\n    y: 'lat',\n  },\n  transforms: [\n    {\n      type: 'hexagon',\n      size: 15000,\n      field: 'v',\n      method: 'sum',\n    },\n  ],\n});\n",paraId:9,tocIndex:2},{value:"Although the grid heat map uses a standard quadrilateral grid for data aggregation, the display effect can be set to its shape. The shape only supports constants.",paraId:10,tocIndex:3},{value:"circle,",paraId:11,tocIndex:4},{value:"triangle",paraId:11,tocIndex:4},{value:"square",paraId:11,tocIndex:4},{value:"heaxgon",paraId:11,tocIndex:4},{value:"layer.shape('circle');\n",paraId:12,tocIndex:4},{value:"cylinder",paraId:13,tocIndex:5},{value:"triangleColumn",paraId:13,tocIndex:5},{value:"hexagonColumn",paraId:13,tocIndex:5},{value:"squareColumn,",paraId:13,tocIndex:5},{value:"layer.shape('cylinder');\n",paraId:14,tocIndex:5},{value:"No need to set size method",paraId:15,tocIndex:7},{value:"size represents height, supports constants and data mapping",paraId:16,tocIndex:8},{value:"layer.size(10); // constant\nlayer.size('value', [10, 50]); // Map size based on value field\nlayer.size('value', (value) => {}); // Callback function to set height\n",paraId:17,tocIndex:8},{value:"coverage Grid coverage 0 - 1",paraId:18,tocIndex:9},{value:"angle Grid rotation angle 0 - 360",paraId:18,tocIndex:9},{value:"opacity transparency 0 - 1.0",paraId:18,tocIndex:9},{value:"layer.style({\n  coverage: 0.9,\n  angle: 0,\n  opacity: 1.0,\n});\n",paraId:19,tocIndex:9}]},73289:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(49493);const t=[{value:"Heat maps are a very common requirement in map visualization scenarios. The aggregate surface phenomenon of a certain degree of heat distribution within a region is often used to describe crowd distribution, density, and changing trends.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a classic heat map.",paraId:2,tocIndex:0},{value:"you can found ",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:" on the ",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:" official website",paraId:3,tocIndex:0},{value:"import { Scene, HeatmapLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'dark',\n    center: [127.5671666579043, 7.445038892195569],\n    zoom: 2.632456779444394,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const layer = new HeatmapLayer({})\n        .source(data)\n        .shape('heatmap')\n        .size('mag', [0, 1.0]) // weight映射通道\n        .style({\n          intensity: 2,\n          radius: 20,\n          rampColors: {\n            colors: ['#FF4818', '#F7B74A', '#FFF598', '#91EABC', '#2EA9A1', '#206C7C'].reverse(),\n            positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n          },\n        });\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Classic heat maps only support point data as the data source, and the data format supports",paraId:6,tocIndex:1},{value:"csv",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"json",paraId:6,tocIndex:1},{value:"、",paraId:6,tocIndex:1},{value:"geojson",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"const source = new Source([{\n  lng: 120, lat: 30\n},...], {\n  parser: {\n    type: 'json',\n    x: 'lng',\n    y: 'lat'\n  }\n})\n",paraId:7,tocIndex:1},{value:"Classic heat map",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"is a constant",paraId:8,tocIndex:2},{value:"heatmap",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"We need to map the value to",paraId:9,tocIndex:3},{value:"[0, 1]",paraId:9,tocIndex:3},{value:"value range space.",paraId:9,tocIndex:3},{value:"field",paraId:10,tocIndex:3},{value:": Heat map weight field",paraId:10,tocIndex:3},{value:"values",paraId:10,tocIndex:3},{value:": Data mapping interval heat map display",paraId:10,tocIndex:3},{value:"[0, 1]",paraId:10,tocIndex:3},{value:"best effect",paraId:10,tocIndex:3},{value:"layer.size('weight', [0, 1]);\n",paraId:11,tocIndex:3},{value:"Heatmap passed",paraId:12,tocIndex:4},{value:"style",paraId:12,tocIndex:4},{value:"The specified parameters configure the color.",paraId:12,tocIndex:4},{value:"intensity",paraId:13,tocIndex:5},{value:"Global thermal weight, recommended weight range",paraId:13,tocIndex:5},{value:"1 - 5",paraId:13,tocIndex:5},{value:"。",paraId:13,tocIndex:5},{value:"radius",paraId:13,tocIndex:5},{value:"Thermal radius, unit pixel.",paraId:13,tocIndex:5},{value:"rampColors",paraId:13,tocIndex:5},{value:"Ribbon parameters.",paraId:13,tocIndex:5},{value:"colors",paraId:14,tocIndex:6},{value:"Color array",paraId:14,tocIndex:6},{value:"positions",paraId:14,tocIndex:6},{value:"data interval",paraId:14,tocIndex:6},{value:"Configure the color band of the value range mapping color. The range of the value range is",paraId:15,tocIndex:6},{value:"[0 - 1]",paraId:15,tocIndex:6},{value:", correspondingly we need to provide each",paraId:15,tocIndex:6},{value:"position",paraId:15,tocIndex:6},{value:"Position sets a color value.",paraId:15,tocIndex:6},{value:"⚠️ colors, positions must be the same length",paraId:16,tocIndex:6},{value:"layer.style({\n  rampColors: {\n    colors: ['#FF4818', '#F7B74A', '#FFF598', '#91EABC', '#2EA9A1', '#206C7C'],\n    positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n  },\n});\n",paraId:17,tocIndex:6}]},76116:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(10432);const t=[{value:"In addition to data display, geographical visualization also requires user interaction. User interaction is generally divided into two types.",paraId:0},{value:"Layer interaction",paraId:1},{value:"Data interaction",paraId:1},{value:"The mouse performs related operations on the visualization layer, and the layer will respond accordingly.",paraId:2,tocIndex:0},{value:"L7",paraId:2,tocIndex:0},{value:"of",paraId:2,tocIndex:0},{value:"Layer",paraId:2,tocIndex:0},{value:"Layers currently natively support two interaction capabilities.",paraId:2,tocIndex:0},{value:"active",paraId:3,tocIndex:0},{value:"Mouse over highlight",paraId:3,tocIndex:0},{value:"select",paraId:3,tocIndex:0},{value:"Mouse selection highlight",paraId:3,tocIndex:0},{value:"Turn on or off",paraId:4,tocIndex:1},{value:"mousehover",paraId:4,tocIndex:1},{value:"Element highlighting effect.",paraId:4,tocIndex:1},{value:"activeOption",paraId:4,tocIndex:1},{value:"color",paraId:5,tocIndex:1},{value:": Highlight color",paraId:5,tocIndex:1},{value:"mix",paraId:5,tocIndex:1},{value:": Optional parameter, the default is 0, which means the highlight color is the specified solid color. The maximum valid value is 1, which means the highlight color is all the background color.",paraId:5,tocIndex:1},{value:"// Turn on Active and use the default highlight color\nlayer.active(true);\n\n// Turn on Active custom highlight color\n\nlayer.active({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.active(false);\n",paraId:6,tocIndex:1},{value:"Turn on or off",paraId:7,tocIndex:2},{value:"mouseclick",paraId:7,tocIndex:2},{value:"Element selection highlight effect.",paraId:7,tocIndex:2},{value:"selectOption",paraId:7,tocIndex:2},{value:"color",paraId:8,tocIndex:2},{value:": Select highlight color",paraId:8,tocIndex:2},{value:"mix",paraId:8,tocIndex:2},{value:": Optional parameter, the default is 0, which means that the selected highlight color is the specified solid color. The maximum effective value is 1, which means that all the selected highlight colors are background colors.",paraId:8,tocIndex:2},{value:"// Turn on Active and use the default highlight color\nlayer.select(true);\n\n// Turn on Active custom highlight color\n\nlayer.select({\n  color: 'red',\n  mix: 0.6,\n});\n\n//Turn off the highlight effect\nlayer.select(false);\n",paraId:9,tocIndex:2},{value:"Sometimes we may need to directly specify a certain data highlight. For example, when the mouse clicks on the data in the data panel, we need to highlight the corresponding element of the map.",paraId:10,tocIndex:3},{value:"layer.setActive(id);\n",paraId:11,tocIndex:4},{value:"layer.setSelect(id);\n",paraId:12,tocIndex:5}]},51447:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(8237);const t=[{value:"✨ 2022.11.22 Version 2.11.0 officially released",paraId:0,tocIndex:0},{value:"⚠️ We will continue to follow up on user needs for version 1.x",paraId:1,tocIndex:0},{value:"Old version official website address",paraId:1,tocIndex:0},{value:"L7 is an open source large-scale geospatial data visual analysis development framework based on WebGL launched by Ant Financial’s AntV data visualization team. The L in L7 stands for Location, and 7 represents the seven continents of the world, implying the ability to provide visual analysis of global location data. L7 is based on graphic semiotics, converting abstract and complex spatial data into 2D and 3D symbols, and achieving rich visual expression through visual variables such as color, size, volume, and texture.",paraId:2,tocIndex:0},{value:"\n      ",paraId:3},{value:"\n      ",paraId:3},{value:"Your user agent does not support the HTML5 Video element.",paraId:4,tocIndex:0},{value:"🌏 Data-driven visual display",paraId:5,tocIndex:1},{value:"Data-driven, from numbers to shapes, it supports a variety of map visualization types to gain better insight into data.",paraId:6,tocIndex:1},{value:"🌏 2D, 3D integrated massive data high-performance rendering",paraId:7,tocIndex:1},{value:"Real-time, dynamic rendering of millions of spatial data.",paraId:8,tocIndex:1},{value:"🌏 Simple and flexible data access",paraId:9,tocIndex:1},{value:"Supports CSV, JSON, geojson and other data format access, and can customize data formats according to needs without complex spatial data conversion.",paraId:10,tocIndex:1},{value:"🌏 Support multiple map basemaps and support offline intranet deployment",paraId:11,tocIndex:1},{value:"AMap is a legal and compliant geographical base map in China, and Mapbox meets the needs of international business.",paraId:12,tocIndex:1},{value:"bubble chart",paraId:13,tocIndex:3},{value:"Scatter plot",paraId:13,tocIndex:3},{value:"symbolic map",paraId:13,tocIndex:3},{value:"3D column map",paraId:13,tocIndex:3},{value:"aggregate map",paraId:13,tocIndex:3},{value:"composite chart map",paraId:13,tocIndex:3},{value:"Custom Marker",paraId:13,tocIndex:3},{value:"Route map",paraId:14,tocIndex:4},{value:"Arc, supports 2D arc, 3D arc and great circle route",paraId:14,tocIndex:4},{value:"Contour",paraId:14,tocIndex:4},{value:"fill chart",paraId:15,tocIndex:5},{value:"3D fill plot",paraId:15,tocIndex:5},{value:"Classic heat map",paraId:16,tocIndex:6},{value:"Cellular heat map",paraId:16,tocIndex:6},{value:"Grid heat map",paraId:16,tocIndex:6},{value:"picture",paraId:17,tocIndex:7},{value:"Raster",paraId:17,tocIndex:7},{value:"grid tiles",paraId:18,tocIndex:8},{value:"vector tiles",paraId:18,tocIndex:8},{value:"For more technical details and detailed progress, please pay attention",paraId:19,tocIndex:9},{value:"GitHub",paraId:19,tocIndex:9},{value:", everyone is welcome to give a little star, so that more people can see this open source project.",paraId:19,tocIndex:9},{value:"We will respond promptly to L7 related technical issues and demand feedback.",paraId:20,tocIndex:9},{value:"We will respond promptly to L7 related technical issues and demand feedback. Geospatial Visualization L7 Support Group DingTalk Group",paraId:21,tocIndex:9},{value:"Group number 1: 30460926 (Nearly full)",paraId:22,tocIndex:9},{value:"Group number 2: 32292906 (full)",paraId:22,tocIndex:9},{value:"Group number 3: 1935013288",paraId:22,tocIndex:9},{value:"WeChat group: Add WeChat ID: think-gis to join the group Remarks L7 Invite to join the group",paraId:22,tocIndex:9}]},42880:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(54493);const t=[{value:"Sometimes for the sake of visualization, you will choose to use arcs to connect two points on the map. At the same time, you can also use arcs to achieve some interesting effects.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Next we will introduce how to use arcs to draw a simulated wind field.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [60, 40.7128],\n    zoom: 2,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/7455fead-1dc0-458d-b91a-fb4cf99e701e.txt')\n    .then((res) => res.text())\n    .then((data) => {\n      const layer = new LineLayer({ blend: 'normal' })\n        .source(data, {\n          parser: {\n            type: 'csv',\n            x: 'lng1',\n            y: 'lat1',\n            x1: 'lng2',\n            y1: 'lat2',\n          },\n        })\n        .size(1)\n        .shape('arc')\n        .color('#6495ED')\n        .animate({\n          duration: 4,\n          interval: 0.2,\n          trailLength: 0.6,\n        });\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"To draw an arc, you need to provide the coordinates of both the starting point and the ending point (if the starting and ending points are swapped, the shape of the arc will be symmetrical and opposite, and the direction of the flying line animation will be opposite).",paraId:6,tocIndex:1},{value:"const data = [\n  {\n    lng1: 120,\n    lat1: 30,\n    lng2: 130,\n    lat2: 30,\n  },\n];\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng2',\n    y1: 'lat2',\n  },\n});\n",paraId:7,tocIndex:1},{value:"In order to draw an arc graph, we need to",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"The parameters are set to",paraId:8,tocIndex:2},{value:"arc",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:9,tocIndex:4},{value:"duration 动画时间 单位(s)秒",paraId:10,tocIndex:5},{value:"interval 轨迹间隔, 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"trailLength 轨迹长度 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:11,tocIndex:5},{value:"L7 目前动画参数为相对单位，我们默认一条线段的长度为 1\n",paraId:12,tocIndex:6},{value:"如果 interval = 0.2,则一条轨迹将会分成 5 段，如果 interval = 0.5 则为两段。",paraId:13,tocIndex:6},{value:"在线案例",paraId:14},{value:"arc 图层的弧线默认分段数是 30，然而有有些时候用户并不需要这么多的分段数，适当降低分段数量可以在保证效果的情况下提高性能。",paraId:15,tocIndex:8},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    segmentNumber: 15,\n  });\n",paraId:16,tocIndex:8},{value:"thetaOffset 参数 表示 arc 弧线的弧度，默认值是 0.314",paraId:17,tocIndex:9},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    thetaOffset: 0.35,\n  });\n",paraId:18,tocIndex:9},{value:"在线案例",paraId:19},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:20,tocIndex:10},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:21,tocIndex:10},{value:"在线案例",paraId:22},{value:"线图层通过在 style 中设置线的类型，同时指定虚线部分和实线部分",paraId:23,tocIndex:11},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1.5)\n  .shape('line')\n  .color('标准名称', ['#5B8FF9', '#5CCEA1', '#F6BD16'])\n  .active(true)\n  .style({\n    lineType: 'dash',\n    dashArray: [5, 5],\n  });\nscene.addLayer(layer);\n",paraId:24,tocIndex:11},{value:"lineType\n默认为 solid，表示实线，dash 表示虚线",paraId:25,tocIndex:11},{value:"dashArray[len1: number, len2: number]\nlen1 实线长度\nlen2 间隔长度",paraId:25,tocIndex:11},{value:"在线案例",paraId:26},{value:"线图层支持纹理贴图和多种表现形式，通过 ",paraId:27},{value:"scene.addImage",paraId:27},{value:" 方法添加到全局的资源，使用 ",paraId:27},{value:"texture",paraId:27},{value:" 方法指定贴图。",paraId:27},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // 间隔\n    duration: 1, // 持续时间，延时\n    trailLength: 2, // 流线长度\n  })\n  .style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 20, // 设置贴图纹理的间距\n  });\n",paraId:28},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"lineTexture 指定是否开启纹理贴图能力",paraId:29},{value:"iconStep 指定贴图在线图层上面排布的间隔",paraId:29},{value:"在线案例",paraId:30},{value:"✨ animate",paraId:31,tocIndex:12},{value:"\n当线图层 (",paraId:31,tocIndex:12},{value:"shape",paraId:31,tocIndex:12},{value:" 为 ",paraId:31,tocIndex:12},{value:"arc",paraId:31,tocIndex:12},{value:"/",paraId:31,tocIndex:12},{value:"arc3d",paraId:31,tocIndex:12},{value:") 开启动画模式的时候，纹理在线图层上的分布还会和 ",paraId:31,tocIndex:12},{value:"animate",paraId:31,tocIndex:12},{value:" 的参数相关.",paraId:31,tocIndex:12},{value:"线图层上排列的纹理的数量大致为 duration/interval",paraId:32,tocIndex:12},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// 此时 纹理贴图数量为  duration / interval = 5\n",paraId:33,tocIndex:12},{value:"✨ textureBlend 参数",paraId:34,tocIndex:12},{value:"\n通过控制 style 方法中的 textureBlend 参数，我们可以控制纹理图层和线图层的混合情况",paraId:34,tocIndex:12},{value:"normal",paraId:35,tocIndex:12},{value:"replace",paraId:35,tocIndex:12},{value:".style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 30, // 设置贴图纹理的间距\n    textureBlend: 'replace', // 设置纹理混合方式，默认值为 normal，可选值有 normal/replace 两种\n  });\n\n",paraId:36,tocIndex:12},{value:"在线案例",paraId:37}]},77910:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(38720);const t=[{value:"In addition to 2D arcs, we also point out 3D arcs. In use, just change",paraId:0},{value:"shape",paraId:0},{value:"parameters.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to draw a simple",paraId:2,tocIndex:0},{value:"3D",paraId:2,tocIndex:0},{value:"Arc diagram.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { LineLayer } from '@antv/l7';\nconst layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    opacity: 0.8,\n  });\n",paraId:5,tocIndex:0},{value:"To draw an arc, you need to provide the coordinates of both the starting point and the ending point (if the starting and ending points are swapped, the shape of the arc will be symmetrical and opposite, and the direction of the flying line animation will be opposite).",paraId:6,tocIndex:1},{value:"const data = [\n  {\n    lng1: 120,\n    lat1: 30,\n    lng2: 130,\n    lat2: 30,\n  },\n];\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng2',\n    y1: 'lat2',\n  },\n});\n",paraId:7,tocIndex:1},{value:"In order to draw an arc graph, we need to",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"The parameters are set to",paraId:8,tocIndex:2},{value:"arc3d",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:9,tocIndex:4},{value:"duration 动画时间 单位(s)秒",paraId:10,tocIndex:5},{value:"interval 轨迹间隔, 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"trailLength 轨迹长度 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:11,tocIndex:5},{value:"L7 目前动画参数为相对单位，我们默认一条线段的长度为 1\n",paraId:12,tocIndex:6},{value:"如果 interval = 0.2,则一条轨迹将会分成 5 段，如果 interval = 0.5 则为两段。",paraId:13,tocIndex:6},{value:"在线案例",paraId:14},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:15,tocIndex:8},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:16,tocIndex:8},{value:"在线案例",paraId:17},{value:"线图层通过在 style 中设置线的类型，同时指定虚线部分和实线部分",paraId:18,tocIndex:9},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1.5)\n  .shape('line')\n  .color('标准名称', ['#5B8FF9', '#5CCEA1', '#F6BD16'])\n  .active(true)\n  .style({\n    lineType: 'dash',\n    dashArray: [5, 5],\n  });\nscene.addLayer(layer);\n",paraId:19,tocIndex:9},{value:"lineType\n默认为 solid，表示实线，dash 表示虚线",paraId:20,tocIndex:9},{value:"dashArray[len1: number, len2: number]\nlen1 实线长度\nlen2 间隔长度",paraId:20,tocIndex:9},{value:"在线案例",paraId:21},{value:"线图层支持纹理贴图和多种表现形式，通过 ",paraId:22},{value:"scene.addImage",paraId:22},{value:" 方法添加到全局的资源，使用 ",paraId:22},{value:"texture",paraId:22},{value:" 方法指定贴图。",paraId:22},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // 间隔\n    duration: 1, // 持续时间，延时\n    trailLength: 2, // 流线长度\n  })\n  .style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 20, // 设置贴图纹理的间距\n  });\n",paraId:23},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"lineTexture 指定是否开启纹理贴图能力",paraId:24},{value:"iconStep 指定贴图在线图层上面排布的间隔",paraId:24},{value:"在线案例",paraId:25},{value:"✨ animate",paraId:26,tocIndex:10},{value:"\n当线图层 (",paraId:26,tocIndex:10},{value:"shape",paraId:26,tocIndex:10},{value:" 为 ",paraId:26,tocIndex:10},{value:"arc",paraId:26,tocIndex:10},{value:"/",paraId:26,tocIndex:10},{value:"arc3d",paraId:26,tocIndex:10},{value:") 开启动画模式的时候，纹理在线图层上的分布还会和 ",paraId:26,tocIndex:10},{value:"animate",paraId:26,tocIndex:10},{value:" 的参数相关.",paraId:26,tocIndex:10},{value:"线图层上排列的纹理的数量大致为 duration/interval",paraId:27,tocIndex:10},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// 此时 纹理贴图数量为  duration / interval = 5\n",paraId:28,tocIndex:10},{value:"✨ textureBlend 参数",paraId:29,tocIndex:10},{value:"\n通过控制 style 方法中的 textureBlend 参数，我们可以控制纹理图层和线图层的混合情况",paraId:29,tocIndex:10},{value:"normal",paraId:30,tocIndex:10},{value:"replace",paraId:30,tocIndex:10},{value:".style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 30, // 设置贴图纹理的间距\n    textureBlend: 'replace', // 设置纹理混合方式，默认值为 normal，可选值有 normal/replace 两种\n  });\n\n",paraId:31,tocIndex:10},{value:"在线案例",paraId:32}]},48451:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(98198);const t=[{value:"Consider the earth as a sphere, and draw a plane through any two points on the ground and the center of the earth. The circle seen when the plane intersects the earth's surface is a great circle. The great circle arc between two points is the shortest distance between the two points on the ground. The route along this great arc is called a great circle route.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple large arc line.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'dark',\n    center: [107.77791556935472, 35.443286920228644],\n    zoom: 2.9142882493605033,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/rmsportal/UEXQMifxtkQlYfChpPwT.txt')\n    .then((res) => res.text())\n    .then((data) => {\n      const layer = new LineLayer({})\n        .source(data, {\n          parser: {\n            type: 'csv',\n            x: 'lng1',\n            y: 'lat1',\n            x1: 'lng2',\n            y1: 'lat2',\n          },\n        })\n        .size(1)\n        .shape('greatcircle')\n        .color('#8C1EB2')\n        .style({\n          opacity: 0.8,\n        });\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"To draw an arc, you need to provide the coordinates of both the starting point and the ending point (if the starting and ending points are swapped, the shape of the arc will be symmetrical and opposite, and the direction of the flying line animation will be opposite).",paraId:6,tocIndex:1},{value:"const data = [\n  {\n    lng1: 120,\n    lat1: 30,\n    lng2: 130,\n    lat2: 30,\n  },\n];\nlayer.source(data, {\n  parser: {\n    type: 'json',\n    x: 'lng1',\n    y: 'lat1',\n    x1: 'lng2',\n    y1: 'lat2',\n  },\n});\n",paraId:7,tocIndex:1},{value:"In order to draw a great arc line graph, we need to",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"The parameters are set to",paraId:8,tocIndex:2},{value:"greatcircle",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:9,tocIndex:4},{value:"duration 动画时间 单位(s)秒",paraId:10,tocIndex:5},{value:"interval 轨迹间隔, 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"trailLength 轨迹长度 取值区间 0 - 1",paraId:10,tocIndex:5},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:11,tocIndex:5},{value:"L7 目前动画参数为相对单位，我们默认一条线段的长度为 1\n",paraId:12,tocIndex:6},{value:"如果 interval = 0.2,则一条轨迹将会分成 5 段，如果 interval = 0.5 则为两段。",paraId:13,tocIndex:6},{value:"在线案例",paraId:14},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:15,tocIndex:8},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:16,tocIndex:8},{value:"在线案例",paraId:17},{value:"线图层通过在 style 中设置线的类型，同时指定虚线部分和实线部分",paraId:18,tocIndex:9},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1.5)\n  .shape('line')\n  .color('标准名称', ['#5B8FF9', '#5CCEA1', '#F6BD16'])\n  .active(true)\n  .style({\n    lineType: 'dash',\n    dashArray: [5, 5],\n  });\nscene.addLayer(layer);\n",paraId:19,tocIndex:9},{value:"lineType\n默认为 solid，表示实线，dash 表示虚线",paraId:20,tocIndex:9},{value:"dashArray[len1: number, len2: number]\nlen1 实线长度\nlen2 间隔长度",paraId:20,tocIndex:9},{value:"在线案例",paraId:21},{value:"线图层支持纹理贴图和多种表现形式，通过 ",paraId:22},{value:"scene.addImage",paraId:22},{value:" 方法添加到全局的资源，使用 ",paraId:22},{value:"texture",paraId:22},{value:" 方法指定贴图。",paraId:22},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // 间隔\n    duration: 1, // 持续时间，延时\n    trailLength: 2, // 流线长度\n  })\n  .style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 20, // 设置贴图纹理的间距\n  });\n",paraId:23},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"lineTexture 指定是否开启纹理贴图能力",paraId:24},{value:"iconStep 指定贴图在线图层上面排布的间隔",paraId:24},{value:"在线案例",paraId:25},{value:"✨ animate",paraId:26,tocIndex:10},{value:"\n当线图层 (",paraId:26,tocIndex:10},{value:"shape",paraId:26,tocIndex:10},{value:" 为 ",paraId:26,tocIndex:10},{value:"arc",paraId:26,tocIndex:10},{value:"/",paraId:26,tocIndex:10},{value:"arc3d",paraId:26,tocIndex:10},{value:") 开启动画模式的时候，纹理在线图层上的分布还会和 ",paraId:26,tocIndex:10},{value:"animate",paraId:26,tocIndex:10},{value:" 的参数相关.",paraId:26,tocIndex:10},{value:"线图层上排列的纹理的数量大致为 duration/interval",paraId:27,tocIndex:10},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// 此时 纹理贴图数量为  duration / interval = 5\n",paraId:28,tocIndex:10},{value:"✨ textureBlend 参数",paraId:29,tocIndex:10},{value:"\n通过控制 style 方法中的 textureBlend 参数，我们可以控制纹理图层和线图层的混合情况",paraId:29,tocIndex:10},{value:"normal",paraId:30,tocIndex:10},{value:"replace",paraId:30,tocIndex:10},{value:".style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 30, // 设置贴图纹理的间距\n    textureBlend: 'replace', // 设置纹理混合方式，默认值为 normal，可选值有 normal/replace 两种\n  });\n\n",paraId:31,tocIndex:10},{value:"在线案例",paraId:32}]},38714:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(48197);const t=[{value:"We often need to draw common paths such as roads, action routes, water systems, etc. on the map. These drawn lines can be collectively called a path map, that is, a line layer positioned with a set of point coordinate pairs that are not closed at the beginning and end.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a common path diagram.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [120.15, 30.246],\n    zoom: 13.5,\n    style: 'dark',\n    rotation: -90,\n  }),\n});\nscene.addImage(\n  'arrow',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nfetch('https://gw.alipayobjects.com/os/basement_prod/40ef2173-df66-4154-a8c0-785e93a5f18e.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const layer = new LineLayer({})\n      .source(data)\n      .size(3)\n      .shape('line')\n      .texture('arrow')\n      .color('rgb(22,119,255)')\n      .animate({\n        interval: 1, // interval\n        duration: 1, // duration, delay\n        trailLength: 2, // streamline length\n      })\n      .style({\n        opacity: 0.6,\n        lineTexture: true, // Enable line mapping function\n        iconStep: 10, // Set the spacing of the texture\n        borderWidth: 0.4, //The default value is 0, the maximum valid value is 0.5\n        borderColor: '#fff', // Default is #ccc\n      });\n    scene.addLayer(layer);\n  });\n",paraId:5,tocIndex:0},{value:"We generally refer to the path diagram as",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"The parameters are set to",paraId:6,tocIndex:1},{value:"line",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"For path diagrams, we generally only need to set a constant to represent the width of the path.",paraId:7,tocIndex:2},{value:"layer.size(2); // Draw a path with width 2\n",paraId:8,tocIndex:2},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:9,tocIndex:4},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:10,tocIndex:4},{value:"在线案例",paraId:11},{value:"线图层通过在 style 中设置线的类型，同时指定虚线部分和实线部分",paraId:12,tocIndex:5},{value:"const layer = new LineLayer({})\n  .source(data)\n  .size(1.5)\n  .shape('line')\n  .color('标准名称', ['#5B8FF9', '#5CCEA1', '#F6BD16'])\n  .active(true)\n  .style({\n    lineType: 'dash',\n    dashArray: [5, 5],\n  });\nscene.addLayer(layer);\n",paraId:13,tocIndex:5},{value:"lineType\n默认为 solid，表示实线，dash 表示虚线",paraId:14,tocIndex:5},{value:"dashArray[len1: number, len2: number]\nlen1 实线长度\nlen2 间隔长度",paraId:14,tocIndex:5},{value:"在线案例",paraId:15},{value:"线图层支持在 style 中设置边框的宽度和颜色",paraId:16,tocIndex:6},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    borderWidth: 0.35, // 默认文 0，最大有效值为 0.5\n    borderColor: '#888', // 默认为 #ccc\n  });\n",paraId:17,tocIndex:6},{value:"在线案例",paraId:18},{value:"线图层支持纹理贴图和多种表现形式，通过 ",paraId:19},{value:"scene.addImage",paraId:19},{value:" 方法添加到全局的资源，使用 ",paraId:19},{value:"texture",paraId:19},{value:" 方法指定贴图。",paraId:19},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // 间隔\n    duration: 1, // 持续时间，延时\n    trailLength: 2, // 流线长度\n  })\n  .style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 20, // 设置贴图纹理的间距\n  });\n",paraId:20},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"lineTexture 指定是否开启纹理贴图能力",paraId:21},{value:"iconStep 指定贴图在线图层上面排布的间隔",paraId:21},{value:"在线案例",paraId:22},{value:"✨ animate",paraId:23,tocIndex:7},{value:"\n当线图层 (",paraId:23,tocIndex:7},{value:"shape",paraId:23,tocIndex:7},{value:" 为 ",paraId:23,tocIndex:7},{value:"arc",paraId:23,tocIndex:7},{value:"/",paraId:23,tocIndex:7},{value:"arc3d",paraId:23,tocIndex:7},{value:") 开启动画模式的时候，纹理在线图层上的分布还会和 ",paraId:23,tocIndex:7},{value:"animate",paraId:23,tocIndex:7},{value:" 的参数相关.",paraId:23,tocIndex:7},{value:"线图层上排列的纹理的数量大致为 duration/interval",paraId:24,tocIndex:7},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// 此时 纹理贴图数量为  duration / interval = 5\n",paraId:25,tocIndex:7},{value:"✨ textureBlend 参数",paraId:26,tocIndex:7},{value:"\n通过控制 style 方法中的 textureBlend 参数，我们可以控制纹理图层和线图层的混合情况",paraId:26,tocIndex:7},{value:"normal",paraId:27,tocIndex:7},{value:"replace",paraId:27,tocIndex:7},{value:".style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 30, // 设置贴图纹理的间距\n    textureBlend: 'replace', // 设置纹理混合方式，默认值为 normal，可选值有 normal/replace 两种\n  });\n\n",paraId:28,tocIndex:7},{value:"在线案例",paraId:29},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:30,tocIndex:9},{value:"duration 动画时间 单位(s)秒",paraId:31,tocIndex:10},{value:"interval 轨迹间隔, 取值区间 0 - 1",paraId:31,tocIndex:10},{value:"trailLength 轨迹长度 取值区间 0 - 1",paraId:31,tocIndex:10},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:32,tocIndex:10},{value:"L7 目前动画参数为相对单位，我们默认一条线段的长度为 1\n",paraId:33,tocIndex:11},{value:"如果 interval = 0.2,则一条轨迹将会分成 5 段，如果 interval = 0.5 则为两段。",paraId:34,tocIndex:11},{value:"在线案例",paraId:35}]},89206:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(37957);const t=[{value:"The simple line layer provides users with a better choice for large data volumes and can easily render line segments with hundreds of thousands of nodes. However, compared with ordinary line layers, the simple line layer is also lost. some other abilities.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple line.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { LineLayer } from '@antv/l7';\nconst layer = new LineLayer()\n  .source(data)\n  .shape('simple')\n  .size(10) // The size method does not take effect. The line width is always 1px.\n  .color('#f00')\n  .style(...)\n",paraId:5,tocIndex:0},{value:"In order to draw a simple line we need to",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"The parameters are set to",paraId:6,tocIndex:1},{value:"simple",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:7,tocIndex:2},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:8,tocIndex:2},{value:"在线案例",paraId:9},{value:"🌟 Simple line layer does not support animation and textures",paraId:10}]},43572:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(6426);const t=[{value:"Geographic fencing gives the concept of height based on the original line layer, and other uses are consistent with ordinary line drawings.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple geofence.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [119.297868, 29.732983],\n    zoom: 7.11,\n    rotation: 1.22,\n    pitch: 45.42056074766357,\n    style: 'dark',\n  }),\n});\n\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/93a55259-328e-4e8b-8dc2-35e05844ed31.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const layer = new LineLayer({}).source(data).size(40).shape('wall').style({\n        opacity: 1,\n        sourceColor: '#0DCCFF',\n        targetColor: 'rbga(255,255,255, 0)',\n      });\n      scene.addLayer(layer);\n    });\n});\n",paraId:5,tocIndex:1},{value:"In order to draw geofences we need to",paraId:6,tocIndex:2},{value:"shape",paraId:6,tocIndex:2},{value:"The parameters are set to",paraId:6,tocIndex:2},{value:"wall",paraId:6,tocIndex:2},{value:"。",paraId:6,tocIndex:2},{value:"layer.animate(true);\nlayer.animate(false);\n",paraId:7,tocIndex:4},{value:"duration 动画时间 单位(s)秒",paraId:8,tocIndex:5},{value:"interval 轨迹间隔, 取值区间 0 - 1",paraId:8,tocIndex:5},{value:"trailLength 轨迹长度 取值区间 0 - 1",paraId:8,tocIndex:5},{value:"layer.animate({\n  duration: 4,\n  interval: 0.2,\n  trailLength: 0.1,\n});\n",paraId:9,tocIndex:5},{value:"L7 目前动画参数为相对单位，我们默认一条线段的长度为 1\n",paraId:10,tocIndex:6},{value:"如果 interval = 0.2,则一条轨迹将会分成 5 段，如果 interval = 0.5 则为两段。",paraId:11,tocIndex:6},{value:"在线案例",paraId:12},{value:"线图层通过在 style 中设置起始颜色和终点颜色来设置颜色渐变，渐变色的优先级比 color 方法设置的颜色更高",paraId:13,tocIndex:8},{value:"const layer = new LineLayer({})\n  .source(data, {\n    parser: {\n      type: 'csv',\n      x: 'lng1',\n      y: 'lat1',\n      x1: 'lng2',\n      y1: 'lat2',\n    },\n  })\n  .size(1)\n  .shape('arc')\n  .color('#8C1EB2')\n  .style({\n    sourceColor: '#f00', // 起点颜色\n    targetColor: '#0f0', // 终点颜色\n  });\n",paraId:14,tocIndex:8},{value:"在线案例",paraId:15},{value:"🌟 The current gradient direction is vertically upward",paraId:16},{value:"线图层支持纹理贴图和多种表现形式，通过 ",paraId:17},{value:"scene.addImage",paraId:17},{value:" 方法添加到全局的资源，使用 ",paraId:17},{value:"texture",paraId:17},{value:" 方法指定贴图。",paraId:17},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/bmw-prod/ce83fc30-701f-415b-9750-4b146f4b3dd6.svg',\n);\nconst layer = new LineLayer()\n  .source(data)\n  .size(4)\n  .shape('line')\n  .texture('02')\n  .color('#25d8b7')\n  .animate({\n    interval: 1, // 间隔\n    duration: 1, // 持续时间，延时\n    trailLength: 2, // 流线长度\n  })\n  .style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 20, // 设置贴图纹理的间距\n  });\n",paraId:18},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"lineTexture 指定是否开启纹理贴图能力",paraId:19},{value:"iconStep 指定贴图在线图层上面排布的间隔",paraId:19},{value:"在线案例",paraId:20},{value:"✨ animate",paraId:21,tocIndex:9},{value:"\n当线图层 (",paraId:21,tocIndex:9},{value:"shape",paraId:21,tocIndex:9},{value:" 为 ",paraId:21,tocIndex:9},{value:"arc",paraId:21,tocIndex:9},{value:"/",paraId:21,tocIndex:9},{value:"arc3d",paraId:21,tocIndex:9},{value:") 开启动画模式的时候，纹理在线图层上的分布还会和 ",paraId:21,tocIndex:9},{value:"animate",paraId:21,tocIndex:9},{value:" 的参数相关.",paraId:21,tocIndex:9},{value:"线图层上排列的纹理的数量大致为 duration/interval",paraId:22,tocIndex:9},{value:".animate({\n    duration: 1,\n    interval: 0.2,\n    trailLength: 0.1\n});\n\n// 此时 纹理贴图数量为  duration / interval = 5\n",paraId:23,tocIndex:9},{value:"✨ textureBlend 参数",paraId:24,tocIndex:9},{value:"\n通过控制 style 方法中的 textureBlend 参数，我们可以控制纹理图层和线图层的混合情况",paraId:24,tocIndex:9},{value:"normal",paraId:25,tocIndex:9},{value:"replace",paraId:25,tocIndex:9},{value:".style({\n    lineTexture: true, // 开启线的贴图功能\n    iconStep: 30, // 设置贴图纹理的间距\n    textureBlend: 'replace', // 设置纹理混合方式，默认值为 normal，可选值有 normal/replace 两种\n  });\n\n",paraId:26,tocIndex:9},{value:"在线案例",paraId:27},{value:"🌟 Geofence supports new style parameter iconStepCount",paraId:28},{value:"Texture interval will only take effect when texture is turned on",paraId:29},{value:"Texture spacing supports configuring the spacing between textures",paraId:29},{value:"Texture spacing needs to be used in conjunction with texture spacing",paraId:29},{value:".style({\n  lineTexture: true, // Enable line mapping function\n  iconStep: 40, // Set the spacing of the texture\n  iconStepCount: 4\n})\n",paraId:30},{value:"wall",paraId:31,tocIndex:10},{value:"Fixed height configuration supported",paraId:31,tocIndex:10},{value:"heightfixed",paraId:31,tocIndex:10},{value:"。",paraId:31,tocIndex:10},{value:".style({\n     heightfixed: true // The default is false. The actual world height does not change after it is turned on (note the size adjustment)\n })\n",paraId:32,tocIndex:10}]},62493:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(522);const t=[{value:"first,",paraId:0,tocIndex:1},{value:"Register a developer account",paraId:0,tocIndex:1},{value:", become a developer of AMap open platform",paraId:0,tocIndex:1},{value:'After logging in, enter the "Application Management" page and "Create a New Application"',paraId:1,tocIndex:1},{value:"for application",paraId:2,tocIndex:1},{value:"Add Key",paraId:2,tocIndex:1},{value:', please select "Web client (JSAPI)" for "Service Platform"',paraId:2,tocIndex:1},{value:"AMap version 2.0 dynamically introduces the AMap map within L7",paraId:3,tocIndex:2},{value:"JS API",paraId:3,tocIndex:2},{value:", so it is no longer necessary to introduce Gaode separately",paraId:3,tocIndex:2},{value:"JS API",paraId:3,tocIndex:2},{value:", just set",paraId:3,tocIndex:2},{value:"type",paraId:3,tocIndex:2},{value:"for",paraId:3,tocIndex:2},{value:"amap",paraId:3,tocIndex:2},{value:"and pass in",paraId:3,tocIndex:2},{value:"token",paraId:3,tocIndex:2},{value:"。",paraId:3,tocIndex:2},{value:'<script src="https://unpkg.com/@antv/l7"><\/script>\n',paraId:4,tocIndex:2},{value:"At the same time, it is necessary to",paraId:5,tocIndex:3},{value:"div",paraId:5,tocIndex:3},{value:"Set the height and width.",paraId:5,tocIndex:3},{value:'<div id="map"></div>\n',paraId:6,tocIndex:3},{value:"const scene = new L7.Scene({\n  id: 'map',\n  map: new L7.GaodeMap({\n    style: 'dark', // Style URL\n    center: [120.19382669582967, 30.258134],\n    pitch: 0,\n    zoom: 12,\n    token: 'AMap token',\n  }),\n});\n",paraId:7,tocIndex:4},{value:"In this way we have completed passing",paraId:8,tocIndex:4},{value:"L7",paraId:8,tocIndex:4},{value:"Instantiate the Gaode map.",paraId:8,tocIndex:4},{value:"First we need to get the data and get the data method. Here we get the online geographical data.",paraId:9,tocIndex:5},{value:"Then we can initialize a",paraId:9,tocIndex:5},{value:"Layer",paraId:9,tocIndex:5},{value:", and added to",paraId:9,tocIndex:5},{value:"Scene",paraId:9,tocIndex:5},{value:"The layer addition is completed.",paraId:9,tocIndex:5},{value:"fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const pointLayer = new L7.PointLayer({})\n      .source(data.list, {\n        parser: {\n          type: 'json',\n          x: 'j',\n          y: 'w',\n        },\n      })\n      .shape('cylinder')\n      .size('t', function (level) {\n        return [1, 2, level * 2 + 20];\n      })\n      .color('t', [\n        '#094D4A',\n        '#146968',\n        '#1D7F7E',\n        '#289899',\n        '#34B6B7',\n        '#4AC5AF',\n        '#5FD3A6',\n        '#7BE39E',\n        '#A1EDB8',\n        '#CEF8D6',\n      ]);\n    scene.addLayer(pointLayer);\n  });\n",paraId:10,tocIndex:5},{value:"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>创建地图场景</title>\n    <style>\n      html,\n      body {\n        overflow: hidden;\n        margin: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"map\"></div>\n    <script src=\"https://unpkg.com/@antv/l7\"><\/script>\n    <script>\n      const scene = new L7.Scene({\n        id: 'map',\n        map: new L7.GaodeMap({\n          style: 'dark', // 样式URL\n          center: [120.19382669582967, 30.258134],\n          pitch: 0,\n          zoom: 12,\n          token: '高德地图token',\n        }),\n      });\n\n      fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n        .then((res) => res.json())\n        .then((data) => {\n          const pointLayer = new L7.PointLayer({})\n            .source(data.list, {\n              parser: {\n                type: 'json',\n                x: 'j',\n                y: 'w',\n              },\n            })\n            .shape('cylinder')\n            .size('t', function (level) {\n              return [1, 2, level * 2 + 20];\n            })\n            .color('t', [\n              '#094D4A',\n              '#146968',\n              '#1D7F7E',\n              '#289899',\n              '#34B6B7',\n              '#4AC5AF',\n              '#5FD3A6',\n              '#7BE39E',\n              '#A1EDB8',\n              '#CEF8D6',\n            ]);\n          scene.addLayer(pointLayer);\n        });\n    <\/script>\n  </body>\n</html>\n",paraId:11,tocIndex:6}]},47843:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(61547);const t=[{value:"When we use Gaode Map as the map base map, we can use the plug-in provided by Gaode Map to achieve our needs.",paraId:0},{value:"Road query",paraId:1,tocIndex:0},{value:"const scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'blank',\n    center: [103.83735604457024, 1.360253881403068],\n    pitch: 4.00000000000001,\n    zoom: 10.210275860702593,\n    rotation: 19.313180925794313,\n  }),\n});\n",paraId:2,tocIndex:0},{value:"Online case",paraId:3},{value:"Map toolbar",paraId:4,tocIndex:1},{value:"scene.on('loaded', () => {\n  window.AMap.plugin([ 'AMap.ToolBar', 'AMap.LineSearch' ], () => {\n    scene.map.addControl(new AMap.ToolBar());\n\n    const linesearch = new AMap.LineSearch({\n      pageIndex: 1, //Page number, default value is 1\n      pageSize: 1, //The number of results displayed on a single page, the default value is 20, the maximum value is 50\n      city: 'Beijing', // Limit the query city, which can be the city name (Chinese/Chinese full spelling), city code, the default value is \"National\"\n      extensions: 'all' // Whether to return bus route details, the default value is \"base\"\n    });\n",paraId:5,tocIndex:1},{value:"Online case",paraId:6},{value:"load using",paraId:7,tocIndex:2},{value:"xyz",paraId:7,tocIndex:2},{value:"map tiles",paraId:7,tocIndex:2},{value:"scene.on('loaded', () => {\n  var xyzTileLayer = new window.AMap.TileLayer({\n    getTileUrl:\n      'https://wprd0{1,2,3,4}.is.autonavi.com/appmaptile?x=[x]&y=[y]&z=[z]&size=1&scl=1&style=8&ltype=11',\n    zIndex: 100,\n  });\n  scene.map.add(xyzTileLayer);\n});\n",paraId:8,tocIndex:2},{value:"Online case",paraId:9},{value:"Load using default satellite tiles",paraId:10,tocIndex:3},{value:"scene.on('loaded', () => {\n  scene.map.add(new window.AMap.TileLayer.Satellite());\n});\n",paraId:11,tocIndex:3},{value:"Online case",paraId:12}]},22875:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(99258);const t=[{value:"In many cases we just do simple geographical visualization without loading a map. This tutorial will tell you how to use basemapless mode in L7.",paraId:0},{value:"L7",paraId:1},{value:"Added a baseless map style at the map style level",paraId:1},{value:"blank",paraId:1},{value:"No basemap mode.",paraId:1},{value:"Do not need to use",paraId:1},{value:"mapbox token",paraId:1},{value:", no need to register",paraId:1},{value:"mapbox",paraId:1},{value:"account.",paraId:1},{value:"const scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'blank',\n    center: [103.83735604457024, 1.360253881403068],\n    pitch: 4.00000000000001,\n    zoom: 10.210275860702593,\n    rotation: 19.313180925794313,\n  }),\n});\n",paraId:2},{value:"🌟 If you just need to make a map of China and fill the world map like this, it is recommended that you use this mode.",paraId:3}]},80909:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(79508);const t=[{value:"L7",paraId:0},{value:"Implemented by providing plug-ins",paraId:0},{value:"Leaflet",paraId:0},{value:"support, implementation",paraId:0},{value:"Leaflet",paraId:0},{value:"map and",paraId:0},{value:"L7",paraId:0},{value:"Fusion of visualization layers.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"L7-Leaflet",paraId:2,tocIndex:0},{value:"It is an open source plug-in",paraId:2,tocIndex:0},{value:"github address",paraId:2,tocIndex:0},{value:"npm install  @antv/l7-leaflet\n",paraId:3,tocIndex:2},{value:'<script src="https://unpkg.com/@antv/l7-leaflet"><\/script>\n',paraId:4,tocIndex:3},{value:"import * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { LineLayer } from '@antv/l7';\nimport { L7Layer } from '@antv/l7-leaflet';\n\nimport React, { useEffect } from 'react';\n\nexport default () => {\n  useEffect(() => {\n    const map = L.map('map', {\n      minZoom: 1,\n    }).setView([30, 112], 3);\n    const mapType = 'vec';\n    L.tileLayer(\n      'https://t{s}.tianditu.gov.cn/' +\n        mapType +\n        '_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=' +\n        mapType +\n        '&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}&tk=b72aa81ac2b3cae941d1eb213499e15e',\n      {\n        subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\n        attribution:\n          '© <a href=\"http://lbs.tianditu.gov.cn/home.html\">天地图 GS(2022)3124号 - 甲测资字1100471</a>',\n      },\n    ).addTo(map);\n    const mapLabelType = 'cva';\n    L.tileLayer(\n      'https://t{s}.tianditu.gov.cn/' +\n        mapLabelType +\n        '_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=' +\n        mapLabelType +\n        '&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}&tk=b72aa81ac2b3cae941d1eb213499e15e',\n      {\n        subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\n      },\n    ).addTo(map);\n\n    L.marker([30, 112])\n      .addTo(map)\n      .setIcon(\n        new L.Icon({\n          iconUrl:\n            'https://gw.alipayobjects.com/mdn/rms_5e897d/afts/img/A*6ONoRKNECC0AAAAAAAAAAAAAARQnAQ',\n          iconSize: [16, 16],\n        }),\n      )\n      .bindPopup('A pretty CSS3 popup.<br> Easily customizable.')\n      .openPopup();\n\n    const l7layer = new L7Layer().addTo(map);\n    const scene = l7layer.getScene();\n    fetch('https://gw.alipayobjects.com/os/rmsportal/UEXQMifxtkQlYfChpPwT.txt')\n      .then((res) => res.text())\n      .then((data) => {\n        const layer = new LineLayer({})\n          .source(data, {\n            parser: {\n              type: 'csv',\n              x: 'lng1',\n              y: 'lat1',\n              x1: 'lng2',\n              y1: 'lat2',\n            },\n          })\n          .size(1)\n          .shape('arc')\n          .color('#8C1EB2')\n          .style({\n            opacity: 0.8,\n            blur: 0.99,\n          });\n        scene.addLayer(layer);\n      });\n  }, []);\n\n  return (\n    <div\n      id=\"map\"\n      style={{\n        height: '500px',\n        position: 'relative',\n      }}\n    />\n  );\n};\n",paraId:5,tocIndex:5},{value:"import * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { LineLayer } from '@antv/l7';\nimport { L7Layer } from '@antv/l7-leaflet';\nimport React, { useEffect } from 'react';\n\nexport default () => {\n  useEffect(() => {\n    const map = L.map('map', {\n      minZoom: 1,\n    }).setView([30, 112], 3);\n    const mapType = 'vec';\n    L.tileLayer(\n      'https://t{s}.tianditu.gov.cn/' +\n        mapType +\n        '_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=' +\n        mapType +\n        '&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}&tk=b72aa81ac2b3cae941d1eb213499e15e',\n      {\n        subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\n        attribution:\n          '© <a href=\"http://lbs.tianditu.gov.cn/home.html\">天地图 GS(2022)3124号 - 甲测资字1100471</a>',\n      },\n    ).addTo(map);\n    const mapLabelType = 'cva';\n    L.tileLayer(\n      'https://t{s}.tianditu.gov.cn/' +\n        mapLabelType +\n        '_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=' +\n        mapLabelType +\n        '&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}&tk=b72aa81ac2b3cae941d1eb213499e15e',\n      {\n        subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\n      },\n    ).addTo(map);\n\n    L.marker([30, 112])\n      .addTo(map)\n      .setIcon(\n        new L.Icon({\n          iconUrl:\n            'https://gw.alipayobjects.com/mdn/rms_5e897d/afts/img/A*6ONoRKNECC0AAAAAAAAAAAAAARQnAQ',\n          iconSize: [16, 16],\n        }),\n      )\n      .bindPopup('A pretty CSS3 popup.<br> Easily customizable.')\n      .openPopup();\n\n    const l7layer = new L7Layer().addTo(map);\n    const scene = l7layer.getScene();\n    fetch('https://gw.alipayobjects.com/os/rmsportal/UEXQMifxtkQlYfChpPwT.txt')\n      .then((res) => res.text())\n      .then((data) => {\n        const layer = new LineLayer({})\n          .source(data, {\n            parser: {\n              type: 'csv',\n              x: 'lng1',\n              y: 'lat1',\n              x1: 'lng2',\n              y1: 'lat2',\n            },\n          })\n          .size(1)\n          .shape('arc')\n          .color('#8C1EB2')\n          .style({\n            opacity: 0.8,\n            blur: 0.99,\n          });\n        scene.addLayer(layer);\n      });\n  }, []);\n\n  return (\n    <div\n      id=\"map\"\n      style={{\n        height: '500px',\n        position: 'relative',\n      }}\n    />\n  );\n};\n",paraId:6,tocIndex:6}]},42915:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(29710);const t=[{value:"1. Register MapBox token",paraId:0,tocIndex:0},{value:"Registered address",paraId:1,tocIndex:0},{value:"Mapbox Access Tokens",paraId:1,tocIndex:0},{value:"2. Introduce mapbox.gl JS and css",paraId:2,tocIndex:0},{value:"To use mapbox, you need to introduce mapbox separately.",paraId:3,tocIndex:0},{value:'<link href="https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css" rel="stylesheet" />\n\n<script src="https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js"><\/script>\n',paraId:4,tocIndex:0},{value:'<script src="https://unpkg.com/@antv/l7"><\/script>\n',paraId:5,tocIndex:1},{value:"At the same time, you need to set the height and width of the Div.",paraId:6,tocIndex:2},{value:'<div id="map"></div>\n',paraId:7,tocIndex:2},{value:"const scene = new L7.Scene({\n  id: 'map',\n  map: new L7.Mapbox({\n    style: 'dark', // 样式URL\n    center: [120.19382669582967, 30.258134],\n    pitch: 0,\n    zoom: 12,\n    token: 'mapbox token',\n  }),\n});\n",paraId:8,tocIndex:3},{value:"In this way we have completed instantiating the mapbox map through L7",paraId:9,tocIndex:3},{value:"fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const pointLayer = new L7.PointLayer({})\n      .source(data.list, {\n        parser: {\n          type: 'json',\n          x: 'j',\n          y: 'w',\n        },\n      })\n      .shape('cylinder')\n      .size('t', function (level) {\n        return [1, 2, level * 2 + 20];\n      })\n      .color('t', [\n        '#094D4A',\n        '#146968',\n        '#1D7F7E',\n        '#289899',\n        '#34B6B7',\n        '#4AC5AF',\n        '#5FD3A6',\n        '#7BE39E',\n        '#A1EDB8',\n        '#CEF8D6',\n      ])\n      .style({\n        opacity: 1.0,\n      });\n    scene.addLayer(pointLayer);\n  });\n",paraId:10,tocIndex:4},{value:"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>创建地图场景</title>\n    <style>\n      ::-webkit-scrollbar {\n        display: none;\n      }\n      html,\n      body {\n        overflow: hidden;\n        margin: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"map\"></div>\n    <link href=\"https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css\" rel=\"stylesheet\" />\n\n    <script src=\"https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js\"><\/script>\n    <script src=\"https://unpkg.com/@antv/l7\"><\/script>\n    <script>\n      const scene = new L7.Scene({\n        id: 'map',\n        map: new L7.Mapbox({\n          style: 'dark', // 样式URL\n          center: [120.19382669582967, 30.258134],\n          pitch: 0,\n          zoom: 12,\n          token: 'mapbox token',\n        }),\n      });\n\n      fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n        .then((res) => res.json())\n        .then((data) => {\n          const pointLayer = new L7.PointLayer({})\n            .source(data.list, {\n              parser: {\n                type: 'json',\n                x: 'j',\n                y: 'w',\n              },\n            })\n            .shape('cylinder')\n            .size('t', function (level) {\n              return [1, 2, level * 2 + 20];\n            })\n            .color('t', [\n              '#094D4A',\n              '#146968',\n              '#1D7F7E',\n              '#289899',\n              '#34B6B7',\n              '#4AC5AF',\n              '#5FD3A6',\n              '#7BE39E',\n              '#A1EDB8',\n              '#CEF8D6',\n            ])\n            .style({\n              opacity: 1.0,\n            });\n          scene.addLayer(pointLayer);\n        });\n    <\/script>\n  </body>\n</html>\n",paraId:11,tocIndex:5}]},52397:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(31002);const t=[{value:"at present",paraId:0},{value:"L7",paraId:0},{value:"Support Gao Dehe",paraId:0},{value:"Mapbox",paraId:0},{value:"Two base maps, the AMap map is used online",paraId:0},{value:"API",paraId:0},{value:"Offline deployment is not possible. If you have offline deployment requirements, you can use it.",paraId:0},{value:"MapBox",paraId:0},{value:"Make a base map.",paraId:0},{value:"L7",paraId:0},{value:"The interface layer unifies the direct differences between different basemaps, and a set of visualization codes can be run on",paraId:0},{value:"L7",paraId:0},{value:"On any supported basemap. This article mainly introduces how to use it offline and accelerate its use in China.",paraId:0},{value:"MapBox",paraId:0},{value:", and also provides online font services, which you can also download for local use.",paraId:0},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'dark',\n    center: [103.83735604457024, 1.360253881403068],\n    pitch: 4.00000000000001,\n    zoom: 10.210275860702593,\n    rotation: 19.313180925794313,\n    token: 'xxxx',\n  }),\n});\n",paraId:1,tocIndex:0},{value:"Offline deployment",paraId:2,tocIndex:1},{value:"Domestic acceleration",paraId:2,tocIndex:1},{value:"Do not use",paraId:2,tocIndex:1},{value:"mapbox token",paraId:2,tocIndex:1},{value:"As long as you don't use",paraId:3,tocIndex:2},{value:"MapBox",paraId:3,tocIndex:2},{value:"The data base map service can be used offline.",paraId:3,tocIndex:2},{value:"mapbox",paraId:3,tocIndex:2},{value:"All data service resources are in",paraId:3,tocIndex:2},{value:"style",paraId:3,tocIndex:2},{value:"configured inside. In addition to data services, there are also some static resources, which are mainly used for image annotation and text annotation.",paraId:3,tocIndex:2},{value:"mapbox",paraId:4,tocIndex:2},{value:"If the data resources themselves are deployed and used separately in foreign countries, the loading speed experience is still very good.",paraId:4,tocIndex:2},{value:"Let's find out first",paraId:5,tocIndex:2},{value:"MapBox",paraId:5,tocIndex:2},{value:"What configuration items the style contains.",paraId:5,tocIndex:2},{value:"version",paraId:6,tocIndex:3},{value:"：",paraId:6,tocIndex:3},{value:"JS SDK",paraId:6,tocIndex:3},{value:"The corresponding version must be 8.",paraId:6,tocIndex:3},{value:"name",paraId:6,tocIndex:3},{value:": The naming of the style.",paraId:6,tocIndex:3},{value:"sprite",paraId:6,tocIndex:3},{value:": Sprite map, which contains all the sporadic icon images involved in a map into one large image.",paraId:6,tocIndex:3},{value:"glyphs",paraId:6,tocIndex:3},{value:"：",paraId:6,tocIndex:3},{value:".pbf",paraId:6,tocIndex:3},{value:"Format font style, such as Microsoft Yahei and other font libraries.",paraId:6,tocIndex:3},{value:"sources",paraId:6,tocIndex:3},{value:": The resource file of the layer, which can support vector slices, raster,",paraId:6,tocIndex:3},{value:"dem",paraId:6,tocIndex:3},{value:"raster, picture,",paraId:6,tocIndex:3},{value:"geojson",paraId:6,tocIndex:3},{value:", video and other formats.",paraId:6,tocIndex:3},{value:"layers",paraId:6,tocIndex:3},{value:": It is a description of each layer style. This is the key to rendering the map style. You can customize the map style.",paraId:6,tocIndex:3},{value:"Specific parameters and their",paraId:7,tocIndex:3},{value:"api",paraId:7,tocIndex:3},{value:"Can refer to",paraId:7,tocIndex:3},{value:"mapbox",paraId:7,tocIndex:3},{value:"official website.",paraId:7,tocIndex:3},{value:"If you want to achieve localization, you only need",paraId:8,tocIndex:3},{value:"sprite",paraId:8,tocIndex:3},{value:"，",paraId:8,tocIndex:3},{value:"glyphs",paraId:8,tocIndex:3},{value:"Localization is fine, and the map service can load other services.",paraId:8,tocIndex:3},{value:"If you don't need to use",paraId:9,tocIndex:3},{value:"MapBox",paraId:9,tocIndex:3},{value:"Data service, used to complete the visualization layer",paraId:9,tocIndex:3},{value:"L7",paraId:9,tocIndex:3},{value:"Rendering is even simpler.",paraId:9,tocIndex:3},{value:"You just need to",paraId:10,tocIndex:3},{value:"MapBox",paraId:10,tocIndex:3},{value:"Map style settings",paraId:10,tocIndex:3},{value:"blank",paraId:10,tocIndex:3},{value:"。",paraId:10,tocIndex:3},{value:"const scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'blank',\n    center: [103.83735604457024, 1.360253881403068],\n    pitch: 4.00000000000001,\n    zoom: 10.210275860702593,\n    rotation: 19.313180925794313,\n  }),\n});\n",paraId:11,tocIndex:3},{value:"blank",paraId:12,tocIndex:3},{value:"The style is considered to be a baseless style, so there is no need to use it in this style.",paraId:12,tocIndex:3},{value:"mapbox",paraId:12,tocIndex:3},{value:"service, there is no need to use",paraId:12,tocIndex:3},{value:"mapbox",paraId:12,tocIndex:3},{value:"of",paraId:12,tocIndex:3},{value:"token",paraId:12,tocIndex:3},{value:"。",paraId:12,tocIndex:3},{value:"If you need to use",paraId:13,tocIndex:4},{value:"mapbox",paraId:13,tocIndex:4},{value:"For field image annotation, you need to localize sprite image resources",paraId:13,tocIndex:4},{value:"Just download two files",paraId:13,tocIndex:4},{value:"sprite.json mainly records the position of each chart on the big picture",paraId:13,tocIndex:4},{value:"sprite.png A big picture composed of each small icon",paraId:13,tocIndex:4},{value:"Online sprite service address:",paraId:14,tocIndex:4},{value:"https://lzxue.github.io/font-glyphs/sprite/sprite",paraId:14,tocIndex:4},{value:"If needed use",paraId:15,tocIndex:5},{value:"mapbox",paraId:15,tocIndex:5},{value:"The article annotation function needs to be localized. If your rendering capabilities are all using",paraId:15,tocIndex:5},{value:"L7",paraId:15,tocIndex:5},{value:"To achieve this, this process is also unnecessary.",paraId:15,tocIndex:5},{value:"L7",paraId:16,tocIndex:5},{value:"Online font service provided",paraId:16,tocIndex:5},{value:"Currently supports 4 fonts.",paraId:16,tocIndex:5},{value:"Alibaba inclusive body",paraId:17,tocIndex:5},{value:"noto",paraId:17,tocIndex:5},{value:"opensan",paraId:17,tocIndex:5},{value:"roboto",paraId:17,tocIndex:5},{value:"If you have new font requirements, you can submit a PR and we will automatically generate an online font service for you. You can use it online or download it for local use.",paraId:18,tocIndex:5},{value:"Font service download:",paraId:19,tocIndex:5},{value:"gh-pages branch",paraId:19,tocIndex:5},{value:" you can",paraId:19,tocIndex:5},{value:"clone",paraId:19,tocIndex:5},{value:"Come down and use it directly.",paraId:19,tocIndex:5},{value:"You can also use online services",paraId:20,tocIndex:5},{value:"github service",paraId:20,tocIndex:5},{value:"https://lzxue.github.io/font-glyphs/glyphs/{fontstack}/{range}.pbf",paraId:20,tocIndex:5},{value:"Ant CDN:",paraId:20,tocIndex:5},{value:"https://gw.alipayobjects.com/os/antvdemo/assets/mapbox/glyphs/{fontstack}/{range}.pbf",paraId:20,tocIndex:5},{value:"1.Load",paraId:21,tocIndex:6},{value:"Third-party basemap",paraId:21,tocIndex:6},{value:", the raster tile layer is used as the base map, such as Sky Map, AMap,",paraId:21,tocIndex:6},{value:"google",paraId:21,tocIndex:6},{value:"Grid tiles are available",paraId:21,tocIndex:6},{value:"2.Download",paraId:21,tocIndex:6},{value:"opensteetmap ",paraId:21,tocIndex:6},{value:"Vector tile map as base map",paraId:21,tocIndex:6},{value:"3. Publish base map service or vector tile service for your own business data.",paraId:21,tocIndex:6},{value:"Here is a more complete solution",paraId:22,tocIndex:6},{value:" ",paraId:22,tocIndex:6},{value:"https://jingsam.github.io/foxgis-server-lite/#/",paraId:22,tocIndex:6},{value:"All service resources have been prepared so that we can use them independently",paraId:23,tocIndex:7},{value:"mapbox",paraId:23,tocIndex:7},{value:"Service, no need to apply again",paraId:23,tocIndex:7},{value:"mapbox",paraId:23,tocIndex:7},{value:"of",paraId:23,tocIndex:7},{value:"token",paraId:23,tocIndex:7},{value:"。",paraId:23,tocIndex:7},{value:"import { Scene, LineLayer } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: {\n      version: 8,\n      name: 'blank',\n      sprite: 'https://lzxue.github.io/font-glyphs/sprite/sprite',\n      glyphs:\n        'https://gw.alipayobjects.com/os/antvdemo/assets/mapbox/glyphs/{fontstack}/{range}.pbf',\n      sources: {},\n      layers: [\n        {\n          id: 'background',\n          type: 'background',\n          paint: {\n            'background-color': 'white',\n          },\n        },\n      ],\n    },\n    center: [103.83735604457024, 1.360253881403068],\n    pitch: 4.00000000000001,\n    zoom: 10.210275860702593,\n    rotation: 19.313180925794313,\n    token: 'xxxx',\n  }),\n});\n",paraId:24,tocIndex:7},{value:"Offline, use mapbox demo without token",paraId:25,tocIndex:7}]},3238:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(66153);const t=[{value:"L7",paraId:0},{value:"Supports loading sky map tiles through tile layers.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to quickly create a map of the sky.",paraId:2,tocIndex:0},{value:"import { Scene, RasterLayer } from '@antv/l7';\nimport { Map } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Map({\n    center: [ 90.268, 40.3628 ],\n    zoom: 3\n  })\n});\nscene.on('loaded', () => {\n  // 底图服务\n  const baseLayer = new RasterLayer({ zIndex: 1 });\n  .source(\n    'https://t1.tianditu.gov.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}&tk=6557fd8a19b09d6e91ae6abf9d13ccbd',\n    {\n      parser: {\n        type: 'rasterTile',\n        tileSize: 256,\n      }\n    }\n  );\n  // 注记服务\n  const annotionLayer = new RasterLayer({ zIndex: 2 });\n  .source(\n    'https://t1.tianditu.gov.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}&tk=6557fd8a19b09d6e91ae6abf9d13ccbd',\n    {\n      parser: {\n        type: 'rasterTile',\n        tileSize: 256,\n      }\n    }\n  );\n  scene.addLayer(baseLayer);\n  scene.addLayer(annotionLayer);\n});\n",paraId:3,tocIndex:0}]},27331:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92461);const t=[{value:"In map applications, rendering big data geographical data is a very common requirement. In order to ensure the smoothness of the application, it is necessary to pursue the ultimate rendering performance. For this reason, monitoring engine rendering content is of practical significance for optimizing performance and building map visualization application performance indicators. significance.",paraId:0},{value:"The following describes how to use the capabilities provided by L7 to simply obtain the initialization information of the layer.",paraId:1,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [60, 40.7128],\n    zoom: 2,\n  }),\n  debug: true,\n});\nscene.on('loaded', () => {\n  const debugService = scene.getDebugService();\n  const layer = new PointLayer()\n    .source([{ lng: 120, lat: 30 }], {\n      parser: {\n        type: 'json',\n        x: 'lng',\n        y: 'lat',\n      },\n    })\n    .shape('circle')\n    .size(10)\n    .color('#f00');\n  layer.on('inited', () => {\n    console.log(debugService.getLog(layer.id));\n  });\n  scene.addLayer(layer);\n});\n",paraId:2,tocIndex:0}]},17098:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(77490);const t=[{value:"In map applications, rendering big data geographical data is a very common requirement. In order to ensure the smoothness of the application, it is necessary to pursue the ultimate rendering performance. For this reason, monitoring engine rendering content is of practical significance for optimizing performance and building map visualization application performance indicators. significance.",paraId:0},{value:"The following describes how to use the capabilities provided by L7 to simply obtain map initialization information.",paraId:1,tocIndex:0},{value:"import { Scene } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [ 60, 40.7128 ],\n    zoom: 2\n  }),\n  debug: true\n});\nscene.on('loaded', () => {\n  const debugService = scene.getDebugService();\n  console.log(debugService.getLog('map');)\n});\n",paraId:2,tocIndex:0}]},92534:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(15285);const t=[{value:"In map applications, rendering big data geographical data is a very common requirement. In order to ensure the smoothness of the application, it is necessary to pursue the ultimate rendering performance. For this reason, monitoring engine rendering content is of practical significance for optimizing performance and building map visualization application performance indicators. significance.",paraId:0},{value:"The following describes how to use the capabilities provided by L7 to simply obtain the rendering performance information of the application.",paraId:1,tocIndex:0},{value:"import { Scene } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [ 60, 40.7128 ],\n    zoom: 2\n  }),\n  debug: true\n});\nscene.on('loaded', () => {\n  const debugService = scene.getDebugService();\n  // Enable monitoring of each frame rendering\n  debugService.renderDebug(true)\n  debugService.on('renderEnd', renderInfo => {\n    const {\n      renderUid, // The unique number of the current frame rendering\n      renderStart, // current frame rendering start time\n      renderEnd, // current frame rendering end time\n      renderDuration // current frame rendering time\n    } = renderInfo;\n    ...\n  }\n\n  setTimeout(() => {\n    debugService.renderDebug(false);\n    debugService.off('renderEnd');\n  }, 1000); // Monitor the rendering within 1s\n});\n",paraId:2,tocIndex:0}]},61562:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(40924);const t=[{value:"Dots of different sizes appear above the geographic area of ​​the bubble chart, and the area of ​​the circle is proportional to its value in the data set.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let’s introduce how to draw a common bubble chart.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [140.067171, 36.26186],\n    zoom: 5.32,\n    maxZoom: 10,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data)\n        .shape('circle')\n        .size('mag', [1, 25])\n        .color('mag', (mag) => {\n          return mag > 4.5 ? '#5B8FF9' : '#5CCEA1';\n        })\n        .style({\n          opacity: 0.3,\n          strokeWidth: 1,\n        });\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Bubble charts accept plain point data.",paraId:6,tocIndex:1},{value:"bubble chart",paraId:7,tocIndex:2},{value:"shape",paraId:7,tocIndex:2},{value:"Generally",paraId:7,tocIndex:2},{value:"circle",paraId:7,tocIndex:2},{value:",can also be",paraId:7,tocIndex:2},{value:"square",paraId:7,tocIndex:2},{value:"、",paraId:7,tocIndex:2},{value:"triangle",paraId:7,tocIndex:2},{value:"and other shapes.",paraId:7,tocIndex:2},{value:"bubble chart",paraId:8,tocIndex:3},{value:"size",paraId:8,tocIndex:3},{value:"Generally used to represent a certain field in the data, so constants are not used but data mapping is used.",paraId:8,tocIndex:3},{value:"layer.size('area', [1, 100]); // Use interval mapping\nlayer.size('area', (area) => {\n  // Use callback function to implement mapping\n  return area * 10;\n});\n",paraId:9,tocIndex:3},{value:"bubble chart",paraId:10,tocIndex:4},{value:"color",paraId:10,tocIndex:4},{value:"It is generally used to represent a certain field in the data, so constants are not used but data mapping is used.",paraId:10,tocIndex:4},{value:"layer.color('area', ['#f00', '#ff0']); // Use interval mapping\nlayer.color('area', (area) => {\n  // Use callback function to implement mapping\n  if (area > 100) {\n    return '#f00';\n  } else {\n    return '#ff0';\n  }\n});\n",paraId:11,tocIndex:4}]},2525:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(20542);const t=[{value:"We are customizing",paraId:0},{value:"Marker",paraId:0},{value:"When replacing point layer nodes, you can insert a custom chart, such as using a two-dimensional statistical chart instead of point symbols. Commonly used extended graphics in composite chart maps include bar charts, curve charts, rose charts, etc.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple map composite chart.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, Marker } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\nimport * as G2 from '@antv/g2';\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [2.6125016864608597, 49.359131],\n    zoom: 4.19,\n  }),\n});\nscene.on('loaded', () => {\n  addChart();\n  scene.render();\n});\nfunction addChart() {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/0b96cca4-7e83-449a-93d0-2a77053e74ab.json')\n    .then((res) => res.json())\n    .then((data) => {\n      data.nodes.forEach(function (item) {\n        const el = document.createElement('div');\n        const total = item.gdp.Agriculture + item.gdp.Industry + item.gdp.Service;\n        const size = Math.min(parseInt(total / 30000, 10), 70);\n        if (size < 30) {\n          return;\n        }\n        const itemData = [\n          {\n            item: 'Agriculture',\n            count: item.gdp.Agriculture,\n            percent: item.gdp.Agriculture / total,\n          },\n          {\n            item: 'Industry',\n            count: item.gdp.Industry,\n            percent: item.gdp.Industry / total,\n          },\n          {\n            item: 'Service',\n            count: item.gdp.Service,\n            percent: item.gdp.Service / total,\n          },\n        ];\n        const chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0,\n        });\n        chart.legend(false);\n        chart.source(itemData);\n        chart.tooltip(false);\n        chart.axis('count', { grid: false });\n        chart\n          .interval()\n          .position('item*count')\n          .color('item', ['#5CCEA1', '#5D7092', '#5B8FF9'])\n          .opacity(1);\n        chart.render();\n        const marker = new Marker({ element: el }).setLnglat({\n          lng: item.coordinates[0],\n          lat: item.coordinates[1],\n        });\n        scene.addMarker(marker);\n      });\n    });\n}\n",paraId:5,tocIndex:0}]},8718:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(82113);const t=[{value:"Aggregation graphs are usually used to describe the aggregation of data geographically. Similar to heat maps, they can be used to represent the concentration of data points.",paraId:0},{value:"🌟 Currently",paraId:1},{value:"L7",paraId:1},{value:"Only point data supports aggregated graphs. The clustering method mainly aggregates data from the data layer. In",paraId:1},{value:"Source",paraId:1},{value:"Method configuration",paraId:1},{value:"cluster",paraId:1},{value:"parameter.",paraId:1},{value:"\n  ",paraId:2},{value:"\n    ",paraId:2},{value:"\n  ",paraId:2},{value:"Let's introduce how to draw a common aggregation chart.",paraId:3,tocIndex:0},{value:"you can",paraId:4,tocIndex:0},{value:"L7",paraId:4,tocIndex:0},{value:"Found on the official website",paraId:4,tocIndex:0},{value:"Online case",paraId:5,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [120.19382669582967, 30.258134],\n    style: 'dark',\n    zoom: 3,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data, { cluster: true })\n        .shape('circle')\n        .scale('point_count', {\n          type: 'quantile',\n        })\n        .size('point_count', [5, 10, 15, 20, 25])\n        .active(true)\n        .color('yellow')\n        .style({\n          opacity: 0.5,\n          strokeWidth: 1,\n        });\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:6,tocIndex:0},{value:"After accepting ordinary point data, the aggregation chart also needs to configure aggregation parameters.",paraId:7,tocIndex:1},{value:"const source = new Source(data, {\n  cluster: true,\n  clusterOption: {\n    radius: 40,\n    minZoom: 0,\n    maxZoom: 16,\n  },\n});\n",paraId:8,tocIndex:1},{value:"cluster: boolean",paraId:9,tocIndex:1},{value:"Indicates whether to perform aggregation operations on data. Currently only point layers support it. The default value is",paraId:9,tocIndex:1},{value:"false",paraId:9,tocIndex:1},{value:"。",paraId:9,tocIndex:1},{value:"clusterOption: IClusterOption",paraId:9,tocIndex:1},{value:"Specific aggregation parameters\n",paraId:9,tocIndex:1},{value:"radius: number",paraId:10,tocIndex:1},{value:"Aggregation radius, default value is",paraId:10,tocIndex:1},{value:"40",paraId:10,tocIndex:1},{value:"。",paraId:10,tocIndex:1},{value:"minZoom: number",paraId:10,tocIndex:1},{value:"Minimum aggregate zoom level, default value is",paraId:10,tocIndex:1},{value:"0",paraId:10,tocIndex:1},{value:"。",paraId:10,tocIndex:1},{value:"maxZoom: number",paraId:10,tocIndex:1},{value:"Maximum aggregate zoom level, default value is",paraId:10,tocIndex:1},{value:"16",paraId:10,tocIndex:1},{value:"。",paraId:10,tocIndex:1},{value:"interface IClusterOption {\n  radius,\n  minZoom\n  maxZoom\n}\n",paraId:11,tocIndex:1},{value:"Online case",paraId:12},{value:"Aggregation graphs use common aggregation styles,",paraId:13,tocIndex:2},{value:"shape",paraId:13,tocIndex:2},{value:"Just use the point layer type",paraId:13,tocIndex:2},{value:"shape",paraId:13,tocIndex:2},{value:"That’s it.",paraId:13,tocIndex:2},{value:"PointLayer",paraId:14,tocIndex:3},{value:"The aggregation graph uses",paraId:14,tocIndex:3},{value:"WebGL",paraId:14,tocIndex:3},{value:"Drawing does not support customizing specific aggregation styles. You can use it if you have customized requirements.",paraId:14,tocIndex:3},{value:"MarkerLayer",paraId:14,tocIndex:3},{value:"The aggregation function, you can pass",paraId:14,tocIndex:3},{value:"DOM",paraId:14,tocIndex:3},{value:"Fully customizable styling.",paraId:14,tocIndex:3},{value:"MarkerLayer Aggregation",paraId:15}]},18409:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(69722);const t=[{value:"3D",paraId:0},{value:"Column charts are columns of varying heights displayed over a geographic area, with the height of the column proportional to its value in the data set.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to draw a common",paraId:2,tocIndex:0},{value:"3D",paraId:2,tocIndex:0},{value:"Column chart.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    pitch: 66.02383,\n    center: [ 121.400257, 31.25287 ],\n    zoom: 14.55,\n    rotation: 134.95\n  })\n});\nfetch('https://gw.alipayobjects.com/os/basement_prod/893d1d5f-11d9-45f3-8322-ee9140d288ae.json')\n  .then(res => res.json())\n  .then(data => {\n    const pointLayer = new PointLayer({})\n    .source(data, {\n      parser: {\n        type: 'json',\n        x: 'longitude',\n        y: 'latitude'\n      }\n    })\n    .shape('name', [ 'cylinder', 'triangleColumn', 'hexagonColumn', 'squareColumn' ])\n    .color('name', [ '#739DFF', '#61FCBF', '#FFDE74', '#FF896F' ]);\n    .size('unit_price', h => [ 6, 6, h / 500 ]\n    scene.addLayer(pointLayer);\n  })\n",paraId:5,tocIndex:0},{value:"3D",paraId:6,tocIndex:1},{value:"Column chart",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"The method supports the following parameters:",paraId:6,tocIndex:1},{value:"cylinder",paraId:7,tocIndex:1},{value:"cylinder",paraId:7,tocIndex:1},{value:"triangleColumn",paraId:7,tocIndex:1},{value:"triangular prism",paraId:7,tocIndex:1},{value:"hexagonColumn",paraId:7,tocIndex:1},{value:"hexagonal column",paraId:7,tocIndex:1},{value:"squareColumn",paraId:7,tocIndex:1},{value:"four corner pillars",paraId:7,tocIndex:1},{value:"3D",paraId:8,tocIndex:2},{value:"column chart",paraId:8,tocIndex:2},{value:"size",paraId:8,tocIndex:2},{value:"Support setting three dimensions",paraId:8,tocIndex:2},{value:"[w, l, z]",paraId:8,tocIndex:2},{value:"：",paraId:8,tocIndex:2},{value:"w",paraId:9,tocIndex:2},{value:"Width",paraId:9,tocIndex:2},{value:"l",paraId:9,tocIndex:2},{value:"long",paraId:9,tocIndex:2},{value:"z",paraId:9,tocIndex:2},{value:"high",paraId:9,tocIndex:2},{value:"size",paraId:10,tocIndex:2},{value:"Set constant",paraId:10,tocIndex:2},{value:"layer.size([2, 2, 3]);\n",paraId:11,tocIndex:2},{value:"size",paraId:12,tocIndex:2},{value:"Set callback function",paraId:12,tocIndex:2},{value:"layer.size('unit_price', (h) => {\n  return [6, 6, h / 500];\n});\n",paraId:13,tocIndex:2},{value:"3D",paraId:14,tocIndex:3},{value:"Column chart supports growth animation, through",paraId:14,tocIndex:3},{value:"animate",paraId:14,tocIndex:3},{value:"Method to set, specific usage can be viewed",paraId:14,tocIndex:3},{value:"Detailed documentation",paraId:15,tocIndex:3},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"3D",paraId:16,tocIndex:4},{value:"Column charts have special",paraId:16,tocIndex:4},{value:"style",paraId:16,tocIndex:4},{value:"Attributes, specific usage can be found",paraId:16,tocIndex:4},{value:"Detailed documentation",paraId:17,tocIndex:4}]},53620:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(69363);const t=[{value:"The brightness map is also called the point density map. The more the number of internal points per unit area, the brighter the brightness will be. The brightness map is generally used to express the distribution of massive point data.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple brightness map.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [121.417463, 31.215175],\n    style: 'dark',\n    zoom: 11,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/rmsportal/BElVQFEFvpAKzddxFZxJ.txt')\n    .then((res) => res.text())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data, {\n          parser: {\n            type: 'csv',\n            y: 'lat',\n            x: 'lng',\n          },\n        })\n        .size(0.5)\n        .color('#080298');\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Using the brightness map requires converting",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"The parameters are set to",paraId:6,tocIndex:1},{value:"dot",paraId:6,tocIndex:1},{value:", or not set",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"function.",paraId:6,tocIndex:1}]},69061:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(3136);const t=[{value:"In addition to supporting drawing text annotations, the point layer also supports drawing and building simple icons by drawing text, that is, drawing",paraId:0},{value:"iconfont",paraId:0},{value:". Through simple icons drawn with text, we can",paraId:0},{value:"color",paraId:0},{value:"Method to directly modify the color.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to draw a simple",paraId:2,tocIndex:0},{value:"iconfont",paraId:2,tocIndex:0},{value:"Icon point layer.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"// Specify iconfont to be mapped to the name of the font style\nconst fontFamily = 'iconfont';\n//Specify iconfont font file\nconst fontPath = '//at.alicdn.com/t/font_2534097_fcae9o2mxbv.woff2?t=1622200439140';\n//Add resources globally\nscene.addFontFace(fontFamily, fontPath);\n// Add the mapping of the iconfont field globally\nscene.addIconFont('icon1', '');\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/70408903-80db-4278-a318-461604acb2df.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data.list, {\n          parser: {\n            type: 'json',\n            x: 'j',\n            y: 'w',\n          },\n        })\n        .shape('icon', 'text') //Specify that the field to be mapped is icon, and the shape type is the same as ordinary text annotation, which is text.\n        .size(20)\n        .color('w', ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99'])\n        .style({\n          textAnchor: 'center', // The position of the text relative to the anchor point center|left|right|top|bottom|top-left\n          textOffset: [40, 0], // Offset of text relative to anchor point [horizontal, vertical]\n          padding: [0, 0], // Text bounding box padding [horizontal, vertical], affects the collision detection results and prevents adjacent texts from being too close\n          stroke: '#ffffff', // stroke color\n          fontFamily,\n          iconfont: true, // Enable iconfont mapping\n        });\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"iconfont",paraId:6,tocIndex:0},{value:"Drawn is",paraId:6,tocIndex:0},{value:"unicode",paraId:6,tocIndex:0},{value:"Icon, you need to specify the corresponding icon in advance when using it",paraId:6,tocIndex:0},{value:"unicode",paraId:6,tocIndex:0},{value:"mapping file.",paraId:6,tocIndex:0},{value:"about",paraId:6,tocIndex:0},{value:"iconfont",paraId:6,tocIndex:0},{value:"Resource usage can go to",paraId:6,tocIndex:0},{value:"iconfont",paraId:6,tocIndex:0},{value:"Official website",paraId:6,tocIndex:0},{value:"Official website portal",paraId:6,tocIndex:0},{value:"。",paraId:6,tocIndex:0},{value:"iconfont",paraId:7,tocIndex:1},{value:"In fact, it is a special text annotation, so",paraId:7,tocIndex:1},{value:"shape",paraId:7,tocIndex:1},{value:"The usage is consistent with the usage of ordinary text annotation.",paraId:7,tocIndex:1},{value:"field",paraId:8,tocIndex:1},{value:"Labeled field name.",paraId:8,tocIndex:1},{value:"shapeType",paraId:8,tocIndex:1},{value:"The default is",paraId:8,tocIndex:1},{value:"text",paraId:8,tocIndex:1},{value:"。",paraId:8,tocIndex:1},{value:"layer.shape('iconfontField', 'text');\n",paraId:9,tocIndex:1},{value:"we are using",paraId:10,tocIndex:2},{value:"iconfont",paraId:10,tocIndex:2},{value:"When drawing simple icons, you need to",paraId:10,tocIndex:2},{value:"style",paraId:10,tocIndex:2},{value:"method lieutenant general",paraId:10,tocIndex:2},{value:"iconfont",paraId:10,tocIndex:2},{value:"The parameters are set to",paraId:10,tocIndex:2},{value:"true",paraId:10,tocIndex:2},{value:"。",paraId:10,tocIndex:2},{value:"✨ iconfont The use of other style parameters is consistent with the parameters of ordinary text annotations.",paraId:11,tocIndex:2}]},150:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(41520);const t=[{value:"Points on the map can be customized",paraId:0},{value:"DOM",paraId:0},{value:", we will customize",paraId:0},{value:"DOM",paraId:0},{value:"called",paraId:0},{value:"Marker",paraId:0},{value:"。",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to draw a simple",paraId:2,tocIndex:0},{value:"Marker",paraId:2,tocIndex:0},{value:"layers.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, Marker } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [105.790327, 36.495636],\n    zoom: 4,\n  }),\n});\nscene.on('loaded', () => {\n  addMarkers();\n  scene.render();\n});\nfunction addMarkers() {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/67f47049-8787-45fc-acfe-e19924afe032.json')\n    .then((res) => res.json())\n    .then((nodes) => {\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].g !== '1' || nodes[i].v === '') {\n          continue;\n        }\n        const el = document.createElement('label');\n        el.className = 'labelclass';\n        el.textContent = nodes[i].v + '℃';\n        el.style.background = getColor(nodes[i].v);\n        el.style.borderColor = getColor(nodes[i].v);\n        const marker = new Marker({\n          element: el,\n        }).setLnglat({ lng: nodes[i].x * 1, lat: nodes[i].y });\n        scene.addMarker(marker);\n      }\n    });\n}\nfunction getColor(v) {\n  return v > 50\n    ? '#800026'\n    : v > 40\n      ? '#BD0026'\n      : v > 30\n        ? '#E31A1C'\n        : v > 20\n          ? '#FC4E2A'\n          : v > 10\n            ? '#FD8D3C'\n            : v > 5\n              ? '#FEB24C'\n              : v > 0\n                ? '#FED976'\n                : '#FFEDA0';\n}\n",paraId:5,tocIndex:0},{value:"Marker documentation",paraId:6},{value:"MarkerLayer documentation",paraId:7}]},33957:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(2029);const t=[{value:"Point layers also support a special layer type: radar charts.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let’s introduce how to draw a common radar chart.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [120, 30],\n    zoom: 13,\n  }),\n});\n\nconst layer = new PointLayer()\n  .source([{ lng: 120, lat: 30 }], {\n    parser: {\n      type: 'json',\n      x: 'lng',\n      y: 'lat',\n    },\n  })\n  .shape('radar')\n  .size(100)\n  .color('#d00')\n  .style({\n    speed: 5,\n  })\n  .animate(true);\n",paraId:5,tocIndex:0},{value:"Radar charts accept plain point data.",paraId:6,tocIndex:1},{value:"Radar chart",paraId:7,tocIndex:2},{value:"shape",paraId:7,tocIndex:2},{value:"is a fixed value",paraId:7,tocIndex:2},{value:"radar",paraId:7,tocIndex:2},{value:"。",paraId:7,tocIndex:2},{value:"The radar chart needs to be",paraId:8,tocIndex:3},{value:"animate",paraId:8,tocIndex:3},{value:"Set as",paraId:8,tocIndex:3},{value:"true",paraId:8,tocIndex:3},{value:"will take effect",paraId:8,tocIndex:3},{value:".animate(true)\n\n.animate({\n  enable: true\n})\n",paraId:9,tocIndex:3},{value:"pass",paraId:10,tocIndex:4},{value:"speed",paraId:10,tocIndex:4},{value:"Set rotation speed, default is",paraId:10,tocIndex:4},{value:"1",paraId:10,tocIndex:4},{value:", the larger the value, the faster the speed.",paraId:10,tocIndex:4}]},27735:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(61407);const t=[{value:"A scatter plot places equal-sized dots over a geographical area to represent the spatial layout or distribution of data over a geographical area.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a common scatter plot.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [-121.24357, 37.58264],\n    zoom: 6.45,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/6c4bb5f2-850b-419d-afc4-e46032fc9f94.csv')\n    .then((res) => res.text())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data, {\n          parser: {\n            type: 'csv',\n            x: 'Longitude',\n            y: 'Latitude',\n          },\n        })\n        .shape('circle')\n        .size(4)\n        .color('Magnitude', [\n          '#0A3663',\n          '#1558AC',\n          '#3771D9',\n          '#4D89E5',\n          '#64A5D3',\n          '#72BED6',\n          '#83CED6',\n          '#A6E1E0',\n          '#B8EFE2',\n          '#D7F9F0',\n        ]);\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Scatter plot",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"Generally set to a constant, usually",paraId:6,tocIndex:1},{value:"2D",paraId:6,tocIndex:1},{value:"chart.",paraId:6,tocIndex:1},{value:"circle",paraId:7,tocIndex:1},{value:"square",paraId:7,tocIndex:1},{value:"hexagon",paraId:7,tocIndex:1},{value:"triangle",paraId:7,tocIndex:1},{value:"pentagon",paraId:7,tocIndex:1},{value:"octogon",paraId:7,tocIndex:1},{value:"hexagram",paraId:7,tocIndex:1},{value:"rhombus",paraId:7,tocIndex:1},{value:"vesica",paraId:7,tocIndex:1}]},71859:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(70994);const t=[{value:"Point layers support the simple points of sprite mode. Point layers in sprite mode are more efficient and the points always face the camera.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple point layer.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    pitch: 20,\n    center: [ 120, 20 ],\n    zoom: 3\n  })\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n    .then(res => res.json())\n    .then(data => {\n      const pointLayer = new PointLayer({})\n        .source(data)\n        .shape('simple')\n        .size(15)\n        .color('mag', mag =>  mag > 4.5 ? '#5B8FF9' : '#5CCEA1';)\n        .style({\n          opacity: 0.6,\n          strokeWidth: 3\n        });\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"Simple point layer use",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"The parameters are fixed to",paraId:6,tocIndex:1},{value:"simple",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"The use of simple point layers behaves the same as general point layers.",paraId:7,tocIndex:2},{value:"A simple point layer is essentially a sprite map, so a simple point layer always faces the camera (a normal 2D point layer stays facing up)",paraId:8,tocIndex:2},{value:"🌟 When the user has no requirements for the orientation of the point layer or the visual effect of the point layer is relatively simple, it is recommended to use a simple point layer as much as possible, which can save a lot of performance",paraId:9,tocIndex:2},{value:"🌟 Since the simple point layer is essentially a sprite map, there is a size limit: generally [1, 64], which varies between different devices.",paraId:10,tocIndex:2},{value:"// L7 provides query methods for quick viewing\n\nscene.getPointSizeRange(); // Float32Array - [min, max]\n",paraId:11,tocIndex:2}]},17596:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44817);const t=[{value:"The point layer supports drawing icons and placing different pictures as symbols on geographical areas, usually representing the distribution of different geographical features.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a common symbol map.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [121.434765, 31.256735],\n    zoom: 14.83,\n  }),\n});\nscene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg',\n);\nscene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/893d1d5f-11d9-45f3-8322-ee9140d288ae.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const imageLayer = new PointLayer()\n        .source(data, {\n          parser: {\n            type: 'json',\n            x: 'longitude',\n            y: 'latitude',\n          },\n        })\n        .shape('name', ['00', '01', '02'])\n        .size(25);\n      scene.addLayer(imageLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"In order to draw an icon using a point layer, we need to",paraId:6,tocIndex:1},{value:"scene",paraId:6,tocIndex:1},{value:"Add corresponding image resources globally. Then we can click on the layer",paraId:6,tocIndex:1},{value:"shape",paraId:6,tocIndex:1},{value:"Specify the corresponding image in the method.",paraId:6,tocIndex:1},{value:"scene.addImage(\n  '02',\n  'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg',\n);\n",paraId:7,tocIndex:1},{value:"we need to pass",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"The method specifies the image resources that need to be loaded for the current point layer.",paraId:8,tocIndex:2},{value:"ID",paraId:8,tocIndex:2},{value:"，",paraId:8,tocIndex:2},{value:"ID",paraId:8,tocIndex:2},{value:"is used by users",paraId:8,tocIndex:2},{value:"scene.addImage(id, url)",paraId:8,tocIndex:2},{value:"When adding image resources globally",paraId:8,tocIndex:2},{value:"ID",paraId:8,tocIndex:2},{value:", that is, the symbolic diagram needs to",paraId:8,tocIndex:2},{value:"shape",paraId:8,tocIndex:2},{value:"set as picture",paraId:8,tocIndex:2},{value:"id",paraId:8,tocIndex:2},{value:"。",paraId:8,tocIndex:2},{value:"scene.addImage(\n  '00',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\nscene.addImage(\n  '01',\n  'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg',\n);\n\nlayer.shape('00');\n",paraId:9,tocIndex:2},{value:"⚠️ Symbol diagram",paraId:10,tocIndex:2},{value:"ID",paraId:10,tocIndex:2},{value:"It cannot be the same as the existing shape name of the point layer. For example, it cannot be set.",paraId:10,tocIndex:2},{value:"circle",paraId:10,tocIndex:2},{value:"。",paraId:10,tocIndex:2},{value:"Same symbol diagram",paraId:11,tocIndex:2},{value:"shape",paraId:11,tocIndex:2},{value:"Data mapping is also supported",paraId:11,tocIndex:2},{value:"const scatter = new PointLayer()\n  .source(data)\n  .shape('name', (v) => {\n    switch (v) {\n      case 'p1':\n        return '00';\n      case 'p2':\n        return '01';\n    }\n  })\n  .size(5)\n  .style({\n    opacity: 0.3,\n    strokeWidth: 1,\n  });\n",paraId:12,tocIndex:2},{value:"⚠️ Symbol diagram should not be set",paraId:13,tocIndex:2},{value:"color",paraId:13,tocIndex:2},{value:"Pass in color,",paraId:13,tocIndex:2},{value:"color",paraId:13,tocIndex:2},{value:"The color you set will override the color of the image.",paraId:13,tocIndex:2},{value:"⚠️ In order to get a better realistic effect (the picture is clear and has no obvious aliasing), we should keep it consistent when selecting the picture and setting the icon size, or the icon size set in the L7 layer is slightly smaller than the pixel size of the actual picture.",paraId:14,tocIndex:2},{value:"Online case",paraId:15},{value:"Pass by default",paraId:16,tocIndex:4},{value:"PointLayer",paraId:16,tocIndex:4},{value:"instantiated",paraId:16,tocIndex:4},{value:"image",paraId:16,tocIndex:4},{value:"It is essentially a sprite map, so it always faces the camera, and the size of the map is also limited by the device.",paraId:16,tocIndex:4},{value:"Since the sprite always faces the camera, we can't customize the configuration either",paraId:16,tocIndex:4},{value:"image",paraId:16,tocIndex:4},{value:"of rotation angle.",paraId:16,tocIndex:4},{value:"In order to solve the above two problems (1. Limited size, 2. Unable to customize the rotation angle), we provide a separate non-elf mode",paraId:17,tocIndex:4},{value:"billboard",paraId:17,tocIndex:4},{value:"mode.",paraId:17,tocIndex:4},{value:"Just configure billboard in style as",paraId:18,tocIndex:4},{value:"false",paraId:18,tocIndex:4},{value:"const imageLayer = new PointLayer({ layerType: 'fillImage' })\n  .source(data, {\n    parser: {\n      type: 'json',\n      x: 'longitude',\n      y: 'latitude',\n    },\n  })\n  .shape('name', ['00', '01', '02'])\n  .style({\n    rotation: 0,\n    billboard: false,\n  })\n  .size(45);\n",paraId:19,tocIndex:4},{value:"We support using",paraId:20,tocIndex:5},{value:"rotation",paraId:20,tocIndex:5},{value:"Customize the rotation angle of the configuration icon (clockwise, angle system).",paraId:20,tocIndex:5},{value:"rotation",paraId:21,tocIndex:5},{value:": number|undefined // Angle unit 0-360",paraId:21,tocIndex:5},{value:"layer.style({\n  rotation: 90,\n});\n",paraId:22,tocIndex:5},{value:"rotation supports constants and data mapping",paraId:23,tocIndex:5},{value:"layer.style({\n  rotation: {\n    field: 'rotate',\n    value: [0, 360],\n  },\n});\n",paraId:24,tocIndex:5},{value:"layer.style({\n  rotation: {\n    field: 'rotate',\n    value: (rotate) => {\n      return rotate;\n    },\n  },\n});\n",paraId:25,tocIndex:5},{value:"Online case",paraId:26},{value:"Non-billboard mode support for symbol graphs",paraId:27},{value:"rotation",paraId:27},{value:"Method maps rotation angle based on data.",paraId:27},{value:"const imageLayer = new PointLayer()\n  .source(data)\n  .shape('wind', (wind) => {\n    if (wind === 'up') {\n      return 'arrBlue';\n    }\n    return 'arrRed';\n  })\n  .size(15)\n  .style({\n    rotation: 0, //\n    billboard: false,\n  });\nscene.addLayer(imageLayer);\n",paraId:28},{value:"Online case",paraId:29}]},88977:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(15814);const t=[{value:"Point layers support drawing text labels.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a common text annotation map.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    center: [110, 36],\n    style: 'light',\n    zoom: 3,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const pointLayer = new PointLayer({})\n        .source(data.list, {\n          parser: {\n            type: 'json',\n            x: 'j',\n            y: 'w',\n          },\n        })\n        .shape('m', 'text')\n        .size(12)\n        .color('w', ['#0e0030', '#0e0030', '#0e0030'])\n        .style({\n          textAnchor: 'center', // The position of the text relative to the anchor point center|left|right|top|bottom|top-left\n          textOffset: [0, 0], // Offset of text relative to anchor point [horizontal, vertical]\n          spacing: 2, // character spacing\n          padding: [1, 1], // Text bounding box padding [horizontal, vertical], affects the collision detection results and prevents adjacent texts from being too close\n          stroke: '#ffffff', // stroke color\n          strokeWidth: 0.3, // Stroke width\n        });\n      scene.addLayer(pointLayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"field",paraId:6,tocIndex:1},{value:"Labeled field name.",paraId:6,tocIndex:1},{value:"shapeType",paraId:6,tocIndex:1},{value:"The default value is",paraId:6,tocIndex:1},{value:"text",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"layer.shape('name', 'text');\n",paraId:7,tocIndex:1},{value:"textAnchor ",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:"The position of the text relative to the anchor point",paraId:8,tocIndex:2},{value:"'right' | 'top-right' | 'left' | 'bottom-right' | 'left' | 'top-left' | 'bottom-left' | 'bottom' | 'bottom-right' | 'bottom-left' | 'top' | 'top-right' | 'top-left' | 'center';",paraId:8,tocIndex:2},{value:"padding:",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:"Text bounding box padding [horizontal, vertical], affects the collision detection results and prevents adjacent text from being too close",paraId:8,tocIndex:2},{value:"spacing: number text spacing",paraId:8,tocIndex:2},{value:"stroke:",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:"; stroke color",paraId:8,tocIndex:2},{value:"strokeWidth ",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:"stroke width",paraId:8,tocIndex:2},{value:"strokeOpacity ",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:"stroke transparency",paraId:8,tocIndex:2},{value:"fontWeight ",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:"Font weight",paraId:8,tocIndex:2},{value:"fontFamily ",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:"Font size",paraId:8,tocIndex:2},{value:"textOffset ",paraId:8,tocIndex:2},{value:"[number, number]",paraId:8,tocIndex:2},{value:"text offset",paraId:8,tocIndex:2},{value:"textAllowOverlap:",paraId:8,tocIndex:2},{value:"boolean",paraId:8,tocIndex:2},{value:"Whether to allow text masking",paraId:8,tocIndex:2},{value:"raisingHeight sets the raising height of the text label",paraId:8,tocIndex:2}]},43669:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(28132);const t=[{value:"When the animation mode is turned on, the plane point layer is a special layer type: water wave point. The layer is made up of rings that spread outward.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"A simple water wave point case can be implemented according to the following code.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"。",paraId:3,tocIndex:0},{value:"Specific usage can be viewed",paraId:5,tocIndex:0},{value:"Detailed documentation",paraId:6,tocIndex:0},{value:"。",paraId:5,tocIndex:0},{value:"import { Scene, PointLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [112, 23.69],\n    zoom: 2.5,\n  }),\n});\nfetch('https://gw.alipayobjects.com/os/basement_prod/9078fd36-ce8d-4ee2-91bc-605db8315fdf.csv')\n  .then((res) => res.text())\n  .then((data) => {\n    const pointLayer = new PointLayer({})\n      .source(data, {\n        parser: {\n          type: 'csv',\n          x: 'Longitude',\n          y: 'Latitude',\n        },\n      })\n      .shape('circle')\n      .animate(true)\n      .size(40)\n      .color('#ffa842');\n    scene.addLayer(pointLayer);\n  });\n",paraId:7,tocIndex:0},{value:"In order to achieve water wave points, the point layer",paraId:8,tocIndex:1},{value:"shape",paraId:8,tocIndex:1},{value:"The parameters only need to be",paraId:8,tocIndex:1},{value:"circle",paraId:8,tocIndex:1},{value:"、",paraId:8,tocIndex:1},{value:"triangle",paraId:8,tocIndex:1},{value:"、",paraId:8,tocIndex:1},{value:"square",paraId:8,tocIndex:1},{value:"Just wait for the flat graphics.",paraId:8,tocIndex:1},{value:"boolean ｜ animateOption",paraId:9,tocIndex:2},{value:".animate(true)\n\n.animate({\n  enable: true\n})\n",paraId:10,tocIndex:2},{value:"speed",paraId:11,tocIndex:3},{value:"water wave speed",paraId:11,tocIndex:3},{value:"rings",paraId:11,tocIndex:3},{value:"Water wave ring number",paraId:11,tocIndex:3},{value:"In the water wave point layer, due to the transparent edges, the size of the points looks smaller than the non-water wave points of the same size.",paraId:12,tocIndex:4}]},41760:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(69278);const t=[{value:"In addition to the flat filled map on the map, the geometry layer can also be a geometric block with height.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Below we will introduce how to draw a simple",paraId:2,tocIndex:0},{value:"3D",paraId:2,tocIndex:0},{value:"Fill in the figure.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PolygonLayer } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'dark',\n    pitch: 50,\n    center: [ 118.8, 32.056 ],\n    zoom: 10\n  })\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/94763191-2816-4c1a-8d0d-8bcf4181056a.json')\n    .then(res => res.json())\n    .then(data => {\n      const filllayer = new PolygonLayer({\n        name: 'fill',\n        zIndex: 3\n      })\n        .source(data)\n        .shape('extrude')\n        .color('unit_price', [\n        '#87CEFA',\n        '#00BFFF',\n        '#7FFFAA',\n        '#00FF7F',\n        '#32CD32',\n        '#F0E68C',\n        '#FFD700',\n        '#FF7F50',\n        '#FF6347',\n        '#FF0000'\n      ])\n        .size('unit_price', unit_price => unit_price * 50)\n        .style({\n          opacity:{\n            field:'unit_price',\n            value: [ 0, 1 ]\n          }\n          pickLight: true\n        })\n      scene.addLayer(filllayer);\n    });\n});\n",paraId:5,tocIndex:0},{value:"It is recommended to use the standard geometry layer",paraId:6,tocIndex:1},{value:"GeoJSON",paraId:6,tocIndex:1},{value:"data.",paraId:6,tocIndex:1},{value:"3D Polygon Stretch the polygon upward along the Z axis",paraId:7,tocIndex:2},{value:"extrude constants do not support data mapping",paraId:8,tocIndex:2},{value:"layer.shape('extrude');\n",paraId:9,tocIndex:2},{value:"size represents the height of the stretch and supports data mapping",paraId:10,tocIndex:3},{value:"layer.size(10); // Set height to constant\nlayer.size('floor', [0, 2000]); // Data mapping based on floor field defaults to line\nlayer.size('floor', (floor) => {\n  //Set size through callback function\n  return floor * 2;\n});\n",paraId:11,tocIndex:3},{value:"pickLight",paraId:12,tocIndex:4},{value:"Sets whether the picking highlight color of the 3D fill map calculates lighting.",paraId:12,tocIndex:4},{value:"pickLight",paraId:13,tocIndex:4},{value:"The default is",paraId:13,tocIndex:4},{value:"false",paraId:13,tocIndex:4},{value:"Indicates that lighting calculations will not be performed on the picked colors. When turned on, some additional calculations will be added.",paraId:13,tocIndex:4},{value:"style({\n  pickLight: true, //default is false\n});\n",paraId:14,tocIndex:4},{value:"heightFixed",paraId:15,tocIndex:4},{value:"set up",paraId:15,tocIndex:4},{value:"3D",paraId:15,tocIndex:4},{value:"The height of the fill image is always fixed.",paraId:15,tocIndex:4},{value:"default",paraId:16,tocIndex:4},{value:"3D",paraId:16,tocIndex:4},{value:"The height of the filled image will be",paraId:16,tocIndex:4},{value:"zoom",paraId:16,tocIndex:4},{value:"The level is related, and is used to keep the pixel length of the graphics height constant, and in some cases we need to keep the actual height of the graphics unchanged rather than the pixel height.",paraId:16,tocIndex:4},{value:"style({\n  heightfixed: true, //default is false\n});\n",paraId:17,tocIndex:4},{value:"🌟 Supported starting from v2.7.6.",paraId:18,tocIndex:4},{value:"Online case",paraId:19},{value:"raisingHeight",paraId:20},{value:"set up",paraId:20},{value:"3D",paraId:20},{value:"The elevation of the fill pattern.",paraId:20},{value:"🌟 The prerequisite for setting the lifting height is",paraId:21},{value:"heightfixed",paraId:21},{value:"for",paraId:21},{value:"true",paraId:21},{value:"。",paraId:21},{value:"\n🌟 Supported starting from v2.8.17.",paraId:21},{value:"Online case",paraId:22},{value:"mapTexture",paraId:23},{value:"set up",paraId:23},{value:"3D",paraId:23},{value:"The top texture of the fill image.\n🌟 Setting up",paraId:23},{value:"mapTexture",paraId:23},{value:"allows the user to configure the gradient color on the side.\n🌟 Supported starting from v2.8.17.",paraId:23},{value:"const provincelayer = new PolygonLayer({})\n  .source(data)\n  .size(150000)\n  .shape('extrude')\n  .color('#0DCCFF')\n  .style({\n    heightfixed: true,\n    pickLight: true,\n    raisingHeight: 200000,\n    mapTexture:\n      'https://gw.alipayobjects.com/mdn/rms_816329/afts/img/A*0tmIRJG9cQQAAAAAAAAAAAAAARQnAQ',\n    sourceColor: '#333',\n    targetColor: '#fff',\n  });\n",paraId:24},{value:"topsurface",paraId:25},{value:":",paraId:25},{value:"boolean",paraId:25},{value:"Controls the visibility of the top surface, the default is",paraId:25},{value:"true",paraId:25},{value:"。",paraId:25},{value:"sidesurface",paraId:26},{value:":",paraId:26},{value:"boolean",paraId:26},{value:"Control the visibility of the sides, the default is",paraId:26},{value:"true",paraId:26},{value:"。",paraId:26},{value:"Online case",paraId:27}]},50988:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(53859);const t=[{value:"The simplest representation of a geometry layer on a map is a fill map, which fills a specified area with a specified color.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Let's introduce how to draw a simple filled diagram.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"import { Scene, PolygonLayer, LineLayer, Popup } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [-96, 37.8],\n    zoom: 3,\n  }),\n});\nscene.on('loaded', () => {\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d36ad90e-3902-4742-b8a2-d93f7e5dafa2.json')\n    .then((res) => res.json())\n    .then((data) => {\n      const color = [\n        'rgb(255,255,217)',\n        'rgb(237,248,177)',\n        'rgb(199,233,180)',\n        'rgb(127,205,187)',\n        'rgb(65,182,196)',\n        'rgb(29,145,192)',\n        'rgb(34,94,168)',\n        'rgb(12,44,132)',\n      ];\n      const layer = new PolygonLayer({})\n        .source(data)\n        .scale('density', {\n          type: 'quantile',\n        })\n        .color('density', color)\n        .shape('fill')\n        .active(true);\n      const layer2 = new LineLayer({\n        zIndex: 2,\n      })\n        .source(data)\n        .color('#fff')\n        .active(true)\n        .size(1)\n        .style({\n          lineType: 'dash',\n          dashArray: [2, 2],\n        });\n      scene.addLayer(layer);\n      scene.addLayer(layer2);\n    });\n});\n",paraId:5,tocIndex:0},{value:"It is recommended to use the standard geometry layer",paraId:6,tocIndex:1},{value:"GeoJSON",paraId:6,tocIndex:1},{value:"data.",paraId:6,tocIndex:1},{value:"Draw a filled diagram, the shape is",paraId:7,tocIndex:2},{value:"fill",paraId:7,tocIndex:2},{value:"Constant, data mapping is not supported",paraId:7,tocIndex:2},{value:"layer.shape('fill');\n",paraId:8,tocIndex:2},{value:"Fill image does not need to be set",paraId:9,tocIndex:3},{value:"size",paraId:9,tocIndex:3},{value:";",paraId:9,tocIndex:3},{value:"opacityLinear",paraId:10,tocIndex:4},{value:"Sets the radial gradient of the geometric fill.",paraId:10,tocIndex:4},{value:"style({ opacity Linear: { enable: true, // true - false dir: 'in', // n - out },\n});\n",paraId:11,tocIndex:4},{value:"radial gradient in",paraId:12},{value:"radial gradient out",paraId:13},{value:"raisingHeight",paraId:14},{value:"set up",paraId:14},{value:"3D",paraId:14},{value:"The elevation of the fill pattern.",paraId:14}]},21252:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44856);const t=[{value:"Geometry layers support a special representation, the water surface layer.",paraId:0},{value:"\n  ",paraId:1},{value:"\n    ",paraId:1},{value:"\n  ",paraId:1},{value:"Next we will introduce how to draw water surface.",paraId:2,tocIndex:0},{value:"you can",paraId:3,tocIndex:0},{value:"L7",paraId:3,tocIndex:0},{value:"Found on the official website",paraId:3,tocIndex:0},{value:"Online case",paraId:4,tocIndex:0},{value:"🌟 Simple water surface is supported starting from v2.8.1.",paraId:5,tocIndex:0},{value:"\n🌟 Supports realistic water surfaces starting from version v2.8.4.",paraId:5,tocIndex:0},{value:"It is recommended to use the standard geometry layer",paraId:6,tocIndex:2},{value:"GeoJSON",paraId:6,tocIndex:2},{value:"data.",paraId:6,tocIndex:2},{value:"we need to set",paraId:7,tocIndex:3},{value:"shape",paraId:7,tocIndex:3},{value:"for",paraId:7,tocIndex:3},{value:"ocean",paraId:7,tocIndex:3},{value:"。",paraId:7,tocIndex:3},{value:"The settings we need to display",paraId:8,tocIndex:4},{value:"animate",paraId:8,tocIndex:4},{value:"for",paraId:8,tocIndex:4},{value:"true",paraId:8,tocIndex:4},{value:"。",paraId:8,tocIndex:4},{value:"layer.animate(true);\n",paraId:9,tocIndex:4},{value:"watercolor",paraId:10,tocIndex:5},{value:"The color of shallow water areas defaults to '#6D99A8'.",paraId:10,tocIndex:5},{value:"watercolor2",paraId:11,tocIndex:5},{value:"The color of deep water areas defaults to '#0F121C'.",paraId:11,tocIndex:5},{value:"Online case",paraId:12},{value:"It is recommended to use the standard geometry layer",paraId:13,tocIndex:7},{value:"GeoJSON",paraId:13,tocIndex:7},{value:"data.",paraId:13,tocIndex:7},{value:"we need to set",paraId:14,tocIndex:8},{value:"shape",paraId:14,tocIndex:8},{value:"for",paraId:14,tocIndex:8},{value:"water",paraId:14,tocIndex:8},{value:"。",paraId:14,tocIndex:8},{value:"The settings we need to display",paraId:15,tocIndex:9},{value:"animate",paraId:15,tocIndex:9},{value:"for",paraId:15,tocIndex:9},{value:"true",paraId:15,tocIndex:9},{value:"。",paraId:15,tocIndex:9},{value:"layer.animate(true);\n",paraId:16,tocIndex:9},{value:"speed",paraId:17,tocIndex:10},{value:"we can pass",paraId:17,tocIndex:10},{value:"speed",paraId:17,tocIndex:10},{value:"to control the flow speed of the water surface.",paraId:17,tocIndex:10},{value:"style({\n  speed: 0.5,\n});\n",paraId:18,tocIndex:10},{value:"waterTexture",paraId:19,tocIndex:10},{value:"We can replace the texture of the water surface by setting this property.",paraId:19,tocIndex:10},{value:"\nThe default value is '",paraId:19,tocIndex:10},{value:"https://gw.alipayobjects.com/mdn/rms_816329/afts/img/A*EojwT4VzSiYAAAAAAAAAAAAAARQnAQ",paraId:19,tocIndex:10},{value:"'",paraId:19,tocIndex:10},{value:"Online case",paraId:20}]},76307:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(38361);const t=[{value:"Issues are open, and students who see them can answer them, put forward ideas, and improve the efficiency of solving Issues.",paraId:0,tocIndex:0},{value:"Issue can achieve good task management",paraId:0,tocIndex:0},{value:"If this problem is solved, people who encounter the same problem can refer to the solution.",paraId:0,tocIndex:0},{value:"Before submitting a question, please read",paraId:1,tocIndex:1},{value:"https://l7.antv.antgroup.com/tutorial/quickstart",paraId:1,tocIndex:1},{value:"documentation on.",paraId:1,tocIndex:1},{value:"We recommend that if it is a minor issue (typos correction, minor bug fix), submit a PR directly.",paraId:1,tocIndex:1},{value:"If it is a new requirement, please provide: a detailed description of the requirement, preferably with pseudocode implementation.",paraId:1,tocIndex:1},{value:"If it is a BUG, ​​please provide: reproduction steps, error logs and related configurations, and try to fill in the entries in the template below.",paraId:1,tocIndex:1},{value:"If possible, please provide a link to codesandbox that is as concise as possible, using codesandbox templates",paraId:1,tocIndex:1},{value:"https://codesandbox.io/s/45smpb，方便我们排查问题。",paraId:1,tocIndex:1},{value:"Further reading:",paraId:1,tocIndex:1},{value:"How to submit unanswered questions to open source projects",paraId:1,tocIndex:1},{value:"Reproducing demo refers to a runnable code environment, not copying code, and is recommended.",paraId:2,tocIndex:2},{value:"https://codesandbox.io/s/45smpb",paraId:2,tocIndex:2},{value:", and the official website provides the ability to automatically jump to the codebox.",paraId:2,tocIndex:2},{value:"Found on the L7 demo page, the layer or similar demo that needs to be reproduced",paraId:3,tocIndex:2},{value:"Open the current demo in the sandbox",paraId:3,tocIndex:2},{value:"You may not have noticed that there is a row of tool buttons above the code area.",paraId:4,tocIndex:2},{value:"Click the third button on the left and you will enter",paraId:5,tocIndex:2},{value:"codesandbox",paraId:5,tocIndex:2},{value:"。",paraId:5,tocIndex:2},{value:"You find that you have entered an online code editor, where you can modify the code to reproduce the problems you discovered, then save it and copy the link to the Issue content.",paraId:6,tocIndex:2},{value:"https://github.com/antvis/L7/issues/new",paraId:7,tocIndex:3},{value:"If you don’t have star L7 yet, you can click star now.",paraId:8,tocIndex:3}]},76084:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(92906);const t=[{value:"L7",paraId:0},{value:"Available online",paraId:0},{value:"CDN",paraId:0},{value:"as well as",paraId:0},{value:"NPM",paraId:0},{value:"Quick access in the form of packages. pass",paraId:0},{value:"L7",paraId:0},{value:"With the capabilities provided, we can quickly complete map visualization.",paraId:0},{value:"//Install L7 dependencies\nnpm install --save @antv/l7\n//Install third-party basemap dependencies\nnpm install --save @antv/l7-maps\n",paraId:1,tocIndex:1},{value:'<head>\n  <! --Introducing the latest version of L7--\x3e\n  <script src="https://unpkg.com/@antv/l7"><\/script>\n  <! --Specify the version number to introduce L7--\x3e\n  <script src="https://unpkg.com/@antv/l7@2.0.11"><\/script>\n</head>\n',paraId:2,tocIndex:2},{value:"CDN reference obtains and initializes all objects through the L7 namespace when used, such as L7.scene, L7.GaodeMap",paraId:3,tocIndex:2},{value:"import { Scene } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\n\nconst scene = new L7.Scene({\n  id: 'map',\n  map: new L7.GaodeMap({\n    style: 'dark',\n    center: [110.770672, 34.159869],\n    pitch: 45,\n  }),\n});\n",paraId:4,tocIndex:2},{value:"To initialize the map, you first need to add a DOM to the page for map initialization.",paraId:5,tocIndex:4},{value:'<div style="min-height: 500px; justify-content: center;position: relative" id="map" />\n',paraId:6,tocIndex:4},{value:"Initialize Gaode map",paraId:7,tocIndex:4},{value:"import { GaodeMap } from '@antv/l7-maps';\n//Similarly you can also initialize a Mapbox map\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    pitch: 35.210526315789465,\n    style: 'dark',\n    center: [104.288144, 31.239692],\n    zoom: 4.4,\n  }),\n});\n",paraId:8,tocIndex:4},{value:"🌟 At this point, interactive map content will appear on the page.",paraId:9,tocIndex:4},{value:"After the map initialization is completed, we can add visual data to the map. Here we take China's administrative district data as an example of how to visualize surface data.\nData source: Chinese provinces",paraId:10,tocIndex:5},{value:"GeoJSON",paraId:10,tocIndex:5},{value:"data.",paraId:10,tocIndex:5},{value:"We use polygon layers to draw administrative division data and obtain geometric planes covering the map surface.",paraId:11,tocIndex:5},{value:"import { PolygonLayer } from '@antv/l7';\nconst chinaPolygonLayer = new PolygonLayer({})\n  .source(data)\n  .color('name', [\n    'rgb(239,243,255)',\n    'rgb(189,215,231)',\n    'rgb(107,174,214)',\n    'rgb(49,130,189)',\n    'rgb(8,81,156)',\n  ]);\n",paraId:12,tocIndex:5},{value:"After the layer is created, we need to add it to",paraId:13,tocIndex:5},{value:"Scene",paraId:13,tocIndex:5},{value:"displayed in .",paraId:13,tocIndex:5},{value:"scene.addLayer(chinaPolygonLayer);\n",paraId:14,tocIndex:5},{value:"Simple filling visualization is still not intuitive enough, we can use",paraId:15,tocIndex:5},{value:"LineLayer",paraId:15,tocIndex:5},{value:"and",paraId:15,tocIndex:5},{value:"PointLayer",paraId:15,tocIndex:5},{value:"Add administrative division strokes and administrative division text labels.",paraId:15,tocIndex:5},{value:"The visualization becomes clearer after adding borders and text annotations.",paraId:16,tocIndex:5},{value:"View full code",paraId:17,tocIndex:5},{value:"Simply displaying the data does not meet my needs. We may need to view the relevant information of each block or add some highlighting effects.",paraId:18,tocIndex:6},{value:"L7",paraId:19,tocIndex:7},{value:"Add a default highlight effect to the layer, and the default highlight effect can change the color.",paraId:19,tocIndex:7},{value:"chinaPolygonLayer.active(true); // Turn on the default highlighting effect\n\nchinaPolygonLayer.active({ color: red }); // Turn on and set the highlight color to red\n",paraId:20,tocIndex:7},{value:"Default blue highlight effect",paraId:21,tocIndex:7},{value:"Change highlight color",paraId:21,tocIndex:7},{value:"The default highlight effect can only change the color, which may not meet my needs. We may need a white stroke. Can this be achieved? The answer is definitely yes.",paraId:22,tocIndex:8},{value:"Add a new layer as the highlight layer, set the data to empty data and the shape to",paraId:23,tocIndex:8},{value:"line",paraId:23,tocIndex:8},{value:"const hightLayer = new LineLayer({\n  zIndex: 4, //Set the display level\n  name: 'highlight',\n})\n  .source({\n    type: 'FeatureCollection',\n    features: [],\n  })\n  .shape('line')\n  .size(2)\n  .color('red');\nscene.addLayer(hightLayer);\n",paraId:24,tocIndex:8},{value:"In this way, we can listen to the mouse events of the layer that needs to be highlighted, obtain the currently selected data, and then update",paraId:25,tocIndex:8},{value:"hightLayer",paraId:25,tocIndex:8},{value:"It can also achieve stroke highlighting effect.",paraId:25,tocIndex:8},{value:"chinaPolygonLayer.on('click', (feature) => {\n  hightLayer.setData({\n    type: 'FeatureCollection',\n    features: [feature.feature],\n  });\n});\n",paraId:26,tocIndex:8},{value:"Add a click highlight red stroke effect to the layer",paraId:27,tocIndex:8},{value:'At this point we have learned how to customize the highlight effect. Here is a small question: "How to achieve the double stroke highlight effect?"',paraId:28,tocIndex:8},{value:"View example",paraId:29,tocIndex:8},{value:"During mouse interaction, in addition to highlighting the crossed area, we also need information related to the information area, here",paraId:30,tocIndex:9},{value:"L7",paraId:30,tocIndex:9},{value:"provided",paraId:30,tocIndex:9},{value:"Popup",paraId:30,tocIndex:9},{value:"Components are used to display relevant information on the map.",paraId:30,tocIndex:9},{value:"Introduce objects",paraId:31,tocIndex:9},{value:"import { Popup } from '@antv/l7';\n",paraId:32,tocIndex:9},{value:"We can decide when to display Popup by listening to mouse events on Layer.",paraId:33,tocIndex:9},{value:"layer.on('mousemove', (e) => {\n  const popup = new Popup({\n    offsets: [0, 0],\n    closeButton: false,\n  })\n    .setLnglat(e.lngLat)\n    .setHTML(\n      `<span>地区: ${e.feature.properties.name}</span><br><span>确诊数: ${e.feature.properties.case}</span>`,\n    );\n  scene.addPopup(popup);\n});\n",paraId:34,tocIndex:9},{value:"View example",paraId:35,tocIndex:9},{value:"Above we have learned how to visualize data. On the map we can treat different areas as different colors, but how to understand what different colors mean, we need to add a legend.",paraId:36,tocIndex:10},{value:"L7",paraId:37,tocIndex:10},{value:"There is currently no default legend component. You need to create the legend yourself. Here we introduce how to",paraId:37,tocIndex:10},{value:"L7 Control",paraId:37,tocIndex:10},{value:"The base class creates a legend component. Of course, you can also implement an independent legend.",paraId:37,tocIndex:10},{value:"DOM",paraId:37,tocIndex:10},{value:"components.",paraId:37,tocIndex:10},{value:"L7",paraId:38,tocIndex:10},{value:"Provides a default",paraId:38,tocIndex:10},{value:"Zoom",paraId:38,tocIndex:10},{value:"，",paraId:38,tocIndex:10},{value:"Scale",paraId:38,tocIndex:10},{value:"，",paraId:38,tocIndex:10},{value:"Logo",paraId:38,tocIndex:10},{value:"These components are all based on the same base class",paraId:38,tocIndex:10},{value:"Control",paraId:38,tocIndex:10},{value:"Components, today we are based on",paraId:38,tocIndex:10},{value:"Control",paraId:38,tocIndex:10},{value:"Implement a custom legend component.",paraId:38,tocIndex:10},{value:"introduce",paraId:39,tocIndex:10},{value:"Control",paraId:39,tocIndex:10},{value:"base class",paraId:39,tocIndex:10},{value:"import { Control } from '@antv/l7';\n",paraId:40,tocIndex:10},{value:"Initialize base class",paraId:41,tocIndex:10},{value:"const legend = new Control({\n  position: 'bottomright',\n});\n",paraId:42,tocIndex:10},{value:"set up",paraId:43,tocIndex:10},{value:"Control",paraId:43,tocIndex:10},{value:"Show content",paraId:43,tocIndex:10},{value:"by extension",paraId:44,tocIndex:10},{value:"Control",paraId:44,tocIndex:10},{value:"of",paraId:44,tocIndex:10},{value:"onAdd",paraId:44,tocIndex:10},{value:"We can freely customize the method",paraId:44,tocIndex:10},{value:"Control",paraId:44,tocIndex:10},{value:"Need to display content and interaction.",paraId:44,tocIndex:10},{value:"legend.onAdd = function () {\n  var el = document.createElement('div');\n  el.className = 'infolegend legend';\n  var grades = [0, 10, 20, 50, 100, 200, 500];\n  for (var i = 0; i < grades.length; i++) {\n    el.innerHTML +=\n      '<i style=\"background:' +\n      color[i] +\n      '\"></i> ' +\n      grades[i] +\n      (grades[i + 1] ? '–' + grades[i + 1] + '<br>' : '+');\n  }\n  return el;\n};\n",paraId:45,tocIndex:10},{value:"Add to map",paraId:46,tocIndex:10},{value:"scene.addControl(legend);\n",paraId:47,tocIndex:10},{value:"View example",paraId:48,tocIndex:10},{value:"Here we introduce how to define it by yourself",paraId:49,tocIndex:10},{value:"Control",paraId:49,tocIndex:10},{value:"way to implement the legend, by customizing",paraId:49,tocIndex:10},{value:"Control",paraId:49,tocIndex:10},{value:"Many of our map components, such as full-screen components, positioning components, and many other components needed for business, lucky students can try them out.",paraId:49,tocIndex:10},{value:"What we visualized above is static data, but many times our data changes with time. How to visualize time series data? Here we introduce two time series data visualization methods.",paraId:50,tocIndex:11},{value:"Geographical data:",paraId:51,tocIndex:12},{value:"U.S. state administrative division data",paraId:51,tocIndex:12},{value:"Attribute data:",paraId:51,tocIndex:12},{value:"0908-1008 COVID-19 diagnosis data by state in the United States in the past 30 days",paraId:51,tocIndex:12},{value:"。",paraId:51,tocIndex:12},{value:"As time changes, the data will definitely change, so the simplest way is to update the data every time.",paraId:52,tocIndex:13},{value:"otherPolygonLayer.setData(newData);\n",paraId:53,tocIndex:13},{value:"Complete example",paraId:54,tocIndex:13},{value:"A large part of the scenarios for updating time series data are updating attribute data, such as data from different years in each province.",paraId:55,tocIndex:14},{value:"GDP",paraId:55,tocIndex:14},{value:"Data, spatial data itself has not changed (no increase or decrease and no boundary update). In this case, the surface layer may only need to be updated according to the new data. Pass of course",paraId:55,tocIndex:14},{value:"setData",paraId:55,tocIndex:14},{value:"It can also be achieved.",paraId:55,tocIndex:14},{value:"L7",paraId:55,tocIndex:14},{value:"Looking at the internal implementation mechanism Update",paraId:55,tocIndex:14},{value:"color",paraId:55,tocIndex:14},{value:"is more efficient than",paraId:55,tocIndex:14},{value:"setData",paraId:55,tocIndex:14},{value:"Much more efficient.",paraId:55,tocIndex:14},{value:"Update the data display by updating the color mapping field.",paraId:56,tocIndex:14},{value:"const setColor = (d) => {\n  return d > 100000\n    ? color[7]\n    : d > 80000\n      ? color[6]\n      : d > 40000\n        ? color[5]\n        : d > 20000\n          ? color[4]\n          : d > 10000\n            ? color[3]\n            : d > 5000\n              ? color[2]\n              : d > 1000\n                ? color[1]\n                : color[0];\n};\n\nchinaPolygonLayer.color('2020-09-01', setColor);\nchinaPolygonLayer.color('2020-09-02', setColor);\n",paraId:57,tocIndex:14},{value:"Note that the updated color takes effect and needs to be called",paraId:58,tocIndex:14},{value:"Scene.render();",paraId:58,tocIndex:14},{value:"。",paraId:58,tocIndex:14},{value:"View example",paraId:59,tocIndex:14},{value:"L7",paraId:60,tocIndex:15},{value:"Base",paraId:60,tocIndex:15},{value:"WebGL",paraId:60,tocIndex:15},{value:"It is relatively simple to draw simple points, lines, and surfaces. It is more difficult to implement more complex map annotations. In order to solve this problem",paraId:60,tocIndex:15},{value:"L7",paraId:60,tocIndex:15},{value:"Added",paraId:60,tocIndex:15},{value:"Marker",paraId:60,tocIndex:15},{value:"Components you can base on",paraId:60,tocIndex:15},{value:"DOM",paraId:60,tocIndex:15},{value:"Achieve various complex annotations.",paraId:60,tocIndex:15},{value:"import { Marker } from '@antv/l7';\n const el = document.createElement('label');\n el.className = 'labelclass';\nel.textContent = nodes[i].v + '℃';\nel.style.background = 'red';\nel.style.borderColor = '#fff;\nconst marker = new Marker({ element: el})\n  .setLnglat({ lng: 112, lat: 30});\nscene.addMarker(marker);\n",paraId:61,tocIndex:15},{value:"View full code",paraId:62,tocIndex:15},{value:"In addition to the map visualization layer, we may need to add auxiliary map tools such as zoom in and out, scale bar, layer list and other components.",paraId:63,tocIndex:16},{value:"import { Scale, Zoom } from '@antv/l7';\nconst zoomControl = new Zoom({ position: 'topright' });\nconst scaleControl = new Scale({ position: 'bottomright' });\n//Add to map scene\nscene.addControl(zoomControl);\nscene.addControl(scaleControl);\n",paraId:64,tocIndex:16},{value:"The legend introduced above is a custom component. We can also add any component content or add map interaction to the component.\nFor more usage methods, please refer to",paraId:65,tocIndex:17},{value:"L7",paraId:65,tocIndex:17},{value:"Provides default components",paraId:65,tocIndex:17},{value:"Source code",paraId:65,tocIndex:17},{value:"Different project templates in",paraId:66,tocIndex:18},{value:"CodeSandbox",paraId:66,tocIndex:18},{value:"You can preview it or download it locally.",paraId:66,tocIndex:18},{value:"address",paraId:67,tocIndex:19},{value:"address",paraId:68,tocIndex:20},{value:"address",paraId:69,tocIndex:21},{value:"address",paraId:70,tocIndex:22}]},42119:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(44627);const t=[{value:"Scale measures are used to convert map data values ​​(numbers, dates, categories, etc.) into visual variables (color, size, shape). Scales are fundamental elements of data visualization because they determine how data is visually encoded. L7 currently supports common Scales such as continuous, discrete, and enumerated types.",paraId:0,tocIndex:0},{value:"Range and Domain",paraId:1,tocIndex:1},{value:"Domain: definition interval of map data values",paraId:2,tocIndex:1},{value:"Range: interval definition of visual value",paraId:3,tocIndex:1},{value:"The difference between different Scales lies in the different conversion methods of Domain->Range",paraId:4,tocIndex:1},{value:"data class",paraId:5,tocIndex:1},{value:"Measurement type",paraId:5,tocIndex:1},{value:"continuous",paraId:5,tocIndex:1},{value:"linear、log、pow",paraId:5,tocIndex:1},{value:"continuous classification",paraId:5,tocIndex:1},{value:"quantize quantile,threshold,diverging",paraId:5,tocIndex:1},{value:"Classification Enumeration",paraId:5,tocIndex:1},{value:"cat",paraId:5,tocIndex:1},{value:"When using L7, there is no need to configure Scale by default because L7 will infer scale based on the data type. The inference process is as follows:",paraId:6,tocIndex:2},{value:"Check whether the user has set Scale, if not:",paraId:7,tocIndex:2},{value:"Determine the field type of the first data of the field, if the corresponding field does not exist in the data:",paraId:8,tocIndex:2},{value:"Consider a constant as a fixed value",paraId:9,tocIndex:2},{value:"'linear' if numeric;",paraId:10,tocIndex:2},{value:"If it is string type 'cat';",paraId:11,tocIndex:2},{value:"Cat refers to the enumeration type, which is used to display categorical data, such as the distribution of crop planting areas. Different categories such as rice, corn, and soybeans need to be mapped to different colors. In L7, if the value of a field is judged to be a string, it will be considered to be of Cat type and the unique value of the type will be automatically obtained and set to domain. In this way, the three crops will be mapped to the corresponding colors one by one.",paraId:12,tocIndex:3},{value:"const data = [\n   {\n   type:'A',\n   x: 110,\n   y:30\n },\n {\n   type:'B',\n   x: 110,\n   y:32\n },\n {\n   type:'C',\n   x: 110,\n   y:31\n }\n ,{\n   type:'D',\n   x: 111,\n   y:33\n }，\n ,{\n   type:'E',\n   x: 112,\n   y:30\n }\n ,{\n   type:'F',\n   x: 110,\n   y:30\n }\n]\nlayer.color('type',['red','white','blue','yellow'])\n",paraId:13,tocIndex:3},{value:"As shown in the code above, the layer does not set Scale, L7 infers the enumeration type based on the type of the first data \"A\". At the same time, take out all the deduplicated values ​​of the field ['A', 'B', 'C', 'D', 'E', 'F'] and set them to the domain of the scale, then the range is the corresponding color [' red','white','blue','yellow'].",paraId:14,tocIndex:3},{value:"If the domain is not set, L7 will automatically calculate the domain internally, and the domain order is related to the data order. If you want to fix the domain, you can set the domain yourself. There is a one-to-one correspondence between domain values ​​and range values.",paraId:15,tocIndex:3},{value:"layer.scale('type', {\n  type: 'cat',\n  domain: ['B', 'A', 'C', 'D'],\n});\nlayer.color('type', ['red', 'white', 'blue', 'yellow']);\n",paraId:16,tocIndex:3},{value:"Linear is a mapping method for continuous data, where data and visual values ​​are calculated using linear methods. For example, if the data range domain [0,1000] is linearly mapped to the range [red, blue] gradient color, the one-to-one conversion is completed based on the linear function.",paraId:17,tocIndex:4},{value:"layer.color('rate', ['#ffffcc', '#b6e2b6', '#64c1c0', '#338cbb', '#253494']);\n",paraId:18,tocIndex:4},{value:"For continuous\nData L7 is set to linear by default, and domain is the min and max values ​​of the data. The color will generate a gradient color based on the range color. linear\nThe domain interval can not be set by default",paraId:19,tocIndex:4},{value:"layer.scale('value', {\n  type: 'linear',\n  domain: [5, 100], // The domain can be defined or not set. It can be calculated based on the data.\n});\n",paraId:20,tocIndex:4},{value:"Equally spaced classification is divided into several equal-sized subranges based on the attribute value range. Equal intervals work best with common data ranges, such as percentages and temperatures. This method emphasizes the amount of a certain attribute value relative to other values.",paraId:21,tocIndex:5},{value:"Equally spaced classification is only related to the data mix and max. If domain is not set, the min and max of the data will be automatically calculated for segmentation. The number of segments is based on the number of range colors. Empty classes will appear at equal intervals, and each classification element will be unevenly distributed.",paraId:22,tocIndex:5},{value:"layer.color('type', ['red', 'white', 'blue', 'yellow']);\n",paraId:23,tocIndex:5},{value:"You can also customize the domain",paraId:24,tocIndex:5},{value:"layer.scale('value', {\n  type: 'quantize',\n  domain: [5, 100],\n});\n\nlayer.color('type', ['red', 'white', 'blue', 'yellow']);\n",paraId:25,tocIndex:5},{value:"Equiquantiles require that each classification interval contains an equal number of features. Quantiles assign an equal number of data values ​​to each category; there are no empty classes or classes with too many or too few values.",paraId:26,tocIndex:6},{value:"The decile is related to the distribution of the data and needs to be calculated in full amount of data. Therefore, the scale of the decile cannot be set separately and can only be calculated automatically.",paraId:27,tocIndex:6},{value:"layer.scale('value', {\n  type: 'quantile',\n});\n\nlayer.color('value', ['red', 'white', 'blue', 'yellow']);\n",paraId:28,tocIndex:6},{value:"Custom classification can set any classification interval to map to the visual variable. The domain is still contiguous and classified according to the provided domain. The range attribute must have N+1 elements, where N is the number of domains.",paraId:29,tocIndex:7},{value:"Threshold is a custom segment. When using it, you must set the domain for Scale. The domain can be set arbitrarily according to your needs.",paraId:30,tocIndex:7},{value:"layer\n  .scale('rate', {\n    type: 'threshold',\n    domain: [3, 6, 8, 10],\n  })\n  .color('rate', ['#ffffcc', '#b6e2b6', '#64c1c0', '#338cbb', '#253494']);\n",paraId:31,tocIndex:7},{value:"Discrete classification is often used with two opposite hues to show the change from negative values ​​to center to positive values. These types of maps show the magnitude of values ​​in relation to each other.",paraId:32,tocIndex:8},{value:"If diverging does not set the domain, it will automatically calculate the three values ​​of min, middle, and max based on the data as the domain. Range needs to set at least three colors to form a bipolar color band.",paraId:33,tocIndex:8},{value:"layer.scale('rate', {\n         type: 'diverging'\n         domain: [3, 6, 8, 10], //  the input domain and output range of a diverging scal\n       })\n       .color('rate', ['#ffffcc', '#b6e2b6', '#64c1c0', '#338cbb', '#253494'])\n",paraId:34,tocIndex:8}]},27776:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(84074);const t=[{value:"Raster tile layers include image rasters and data rasters, where image rasters are usually loaded",paraId:0},{value:"png/jpg",paraId:0},{value:"Images, data rasters are loaded",paraId:0},{value:"tiff/lerc",paraId:0},{value:"and other raster data files.",paraId:0},{value:"// Image tile layer - satellite image\nconst layer = new RasterLayer().source(\n  'http://webst0{1-4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n  {\n    parser: {\n      type: 'rasterTile',\n      updateStrategy: 'overlap',\n    },\n  },\n);\n",paraId:1,tocIndex:0},{value:"// Draw WMS format tiles\nconst url =\n  'https://pnr.sz.gov.cn/d-suplicmap/dynamap_1/rest/services/LAND_CERTAIN/MapServer/export?F=image&FORMAT=PNG32&TRANSPARENT=true&layers=show:1&SIZE=256,256&BBOX={bbox}&BBOXSR=4326&IMAGESR =3857&DPI=90';\n\nconst layer = new RasterLayer().source(url, {\n  parser: {\n    type: 'rasterTile',\n    tileSize: 256,\n    zoomOffset: 1,\n  },\n});\n",paraId:2,tocIndex:1},{value:"// Draw WMTS format tiles\nconst url1 = 'https://t0.tianditu.gov.cn/img_w/wmts?tk=b72aa81ac2b3cae941d1eb213499e15e&';\nconst layer1 = new RasterLayer().source(url1, {\n  parser: {\n    type: 'rasterTile',\n    tileSize: 256,\n    wmtsOptions: {\n      layer: 'img',\n      tileMatrixset: 'w',\n      format: 'tiles',\n    },\n  },\n});\n",paraId:3,tocIndex:2},{value:"const tileSource = new Source(\n  'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff',\n  {\n    parser: {\n      type: 'rasterTile',\n      dataType: 'arraybuffer',\n      tileSize: 256,\n      maxZoom: 13.1,\n      format: async (data) => {\n        const tiff = await GeoTIFF.fromArrayBuffer(data);\n        const image = await tiff.getImage();\n        const width = image.getWidth();\n        const height = image.getHeight();\n        const values = await image.readRasters();\n        return { rasterData: values[0], width, height };\n      },\n    },\n  },\n);\n\nlayer.source(tileSource).style({\n  domain: [0.001, 11.001],\n  clampLow: false,\n  rampColors: {\n    colors: colorList,\n    positions,\n  },\n});\n",paraId:4,tocIndex:3},{value:"const url = 'https://gw.alipayobjects.com/zos/raptor/1667832825992/LC08_3857_clip_2.tif';\nconst tiffdata = await getTiffData(url);\nconst layer = new RasterLayer({ zIndex: 10 }).source(\n  [\n    {\n      data: tiffdata,\n      bands: [7, 6, 5].map((v) => v - 1),\n    },\n  ],\n  {\n    parser: {\n      type: 'rasterRgb',\n      format: async (data, bands) => {\n        const tiff = await GeoTIFF.fromArrayBuffer(data);\n        const image1 = await tiff.getImage();\n        const value = await image1.readRasters();\n        return bands.map((band) => {\n          return {\n            rasterData: value[band],\n            width: value.width,\n            height: value.height,\n          };\n        });\n      },\n      operation: 'rgb',\n      extent: [130.39565357746957, 46.905730725742366, 130.73364094187343, 47.10217234153133],\n    },\n  },\n);\n",paraId:5,tocIndex:4}]},46746:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(14299);const t=[{value:"Compared with ordinary layers, tile layers have many things to pay attention to when using them.",paraId:0},{value:"When initializing tiles, in addition to those supported by ordinary layers",paraId:1,tocIndex:0},{value:"options",paraId:1,tocIndex:0},{value:"In addition to parameters, we also need to set parameters related to vector data in advance.",paraId:1,tocIndex:0},{value:"featureId",paraId:2,tocIndex:0},{value:": string\n",paraId:2,tocIndex:0},{value:"For customizable designation. Used to specify the pick highlight of the tile.",paraId:3,tocIndex:0},{value:"sourceLayer",paraId:2,tocIndex:0},{value:": string\n",paraId:2,tocIndex:0},{value:"It must be passed in and must exist in the returned vector data to specify which layer data in the vector data to draw.",paraId:4,tocIndex:0},{value:"const layer = new RasterLayer({\n  featureId: 'id',\n  sourceLayer: 'water',\n});\n",paraId:5,tocIndex:0},{value:"The mask of the tile layer is the same as that of the ordinary layer.",paraId:6,tocIndex:1},{value:"options",paraId:6,tocIndex:1},{value:"Medium settings",paraId:6,tocIndex:1},{value:"mask、maskfence",paraId:6,tocIndex:1},{value:"Parameters are enough, but the vector tile layer does not support setting masks for the time being.",paraId:6,tocIndex:1},{value:"fetch('https://gw.alipayobjects.com/os/bmw-prod/fccd80c0-2611-49f9-9a9f-e2a4dd12226f.json')\n  .then((res) => res.json())\n  .then((maskData) => {\n    const layer = new RasterLayer({\n      mask: true,\n      maskfence: maskData,\n    });\n\n    const tileSource = new Source(\n      'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/l7/tiff_jx/{z}/{x}/{y}.tiff',\n      {\n        parser: {\n          type: 'rasterTile',\n          dataType: 'arraybuffer',\n          tileSize: 256,\n          maxZoom: 13.1,\n          format: async (data) => {\n            const tiff = await GeoTIFF.fromArrayBuffer(data);\n            const image = await tiff.getImage();\n            const width = image.getWidth();\n            const height = image.getHeight();\n            const values = await image.readRasters();\n            return { rasterData: values[0], width, height };\n          },\n        },\n      },\n    );\n    layer.source(tileSource).style({\n      domain: [0.001, 11.001],\n      clampLow: false,\n      rampColors: {\n        colors: colorList,\n        positions,\n      },\n    });\n    scene.addLayer(layer);\n  });\n",paraId:7,tocIndex:1},{value:"In some scenarios, especially those involving vector tile maps, the same tile data will contain data from multiple layers at the same time. In this case, we need to reuse the same tile for multiple layers.",paraId:8,tocIndex:2},{value:"source",paraId:8,tocIndex:2},{value:"object. As shown in the figure below, we use the same data to draw the areas, boundaries and names of provinces and cities. At this time we should reuse",paraId:8,tocIndex:2},{value:"source",paraId:8,tocIndex:2},{value:"object.",paraId:8,tocIndex:2},{value:"const tileSource = new Source(\n    'http://localhost:3000/file.mbtiles/{z}/{x}/{y}.pbf',\n    {\n      parser: {\n        type: 'mvt',\n        tileSize: 256,\n        zoomOffset: 0,\n        maxZoom: 9,\n        extent: [-180, -85.051129, 179, 85.051129],\n      },\n    });\n  const option = {\n    featureId: 'NAME_CHN',\n    sourceLayer: 'city'\n  }\n  const linelayer = new LineLayer(option)\n    .source(tileSource)\n    .color('#f00')\n    .size(1)\n    .style({\n      opacity: 0.5,\n    });\n  this.scene.addLayer(linelayer);\n\n  const polygonlayer = new PolygonLayer(option)\n    .source(tileSource)\n    .color('citycode', (v: string) => {\n        return getRandomColor(v);\n      }\n    })\n    .style({\n      opacity: 0.4,\n    })\n    .select(true);\n  this.scene.addLayer(polygonlayer);\n\n  const pointlayer = new PointLayer(option)\n    .source(tileSource)\n    .shape('NAME_CHN', 'text')\n    .color('#f00')\n    .size(12)\n    .style({\n      stroke: '#fff',\n      strokeWidth: 2,\n    });\n\n  this.scene.addLayer(pointlayer);\n",paraId:9,tocIndex:2},{value:"In use, the operation of the tile layer binding event is consistent with that of the ordinary layer event, but in the return parameters of the event, the tile layer merges the distributed data in order to obtain the completeness of the current layer. data.",paraId:10,tocIndex:3},{value:"layer.on('click', e => {...})；\n",paraId:11,tocIndex:3}]},84318:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});n(88111);const t=[{value:"Vector tiles can usually be used to render large amounts of geographical data. The characteristics of tiles are used to distribute request rendering data, thereby reducing the waiting time of requests and loading times and optimizing the user experience. At the same time, in scenarios that do not require full loading of data, vector tiles can effectively reduce the amount of data rendering and reduce rendering pressure while ensuring the experience.",paraId:0},{value:"import { PointLayer } from '@antv/l7';\nconst point = new PointLayer({\n  featureId: 'COLOR',\n  sourceLayer: 'ecoregions2',\n})\n  .source(vectorSource)\n  .shape('circle')\n  .color('red')\n  .size(10);\n",paraId:1,tocIndex:0},{value:"import { LineLayer } from '@antv/l7';\nconst line = new LineLayer({\n  featureId: 'COLOR',\n  sourceLayer: 'ecoregions2',\n})\n  .source(vectorSource)\n  .color('COLOR')\n  .size(2);\n",paraId:2,tocIndex:1},{value:"// Vector tile layer\nimport { PolygonLayer } from '@antv/l7';\nconst polygon = new PolygonLayer({\n  featureId: 'COLOR'，\n  sourceLayer: 'ecoregions2',\n})\n.source(source)\n.color('red');\n",paraId:3,tocIndex:2},{value:"Vector mask layers are generally used in conjunction with raster layers to mask raster layers.",paraId:4,tocIndex:3},{value:"import { MaskLayer } from '@antv/l7';\nconst mask = new MaskLayer({sourceLayer: 'ecoregions2' })\n.source( 'https://ganos.oss-cn-hangzhou.aliyuncs.com/m2/rs_l7/{z}/{x}/{y}.pbf' {\n  parser: {\n      type: 'mvt',\n      maxZoom: 9,\n      extent: [-180, -85.051129, 179, 85.051129],\n  }});\n",paraId:5,tocIndex:3},{value:"//Test tile layer\nconst debugerLayer = new TileDebugLayer();\n",paraId:6,tocIndex:4}]}}]);